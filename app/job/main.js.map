{"version":3,"sources":["./src/app/job-detail/job-occurrences/job-occurrences.component.ts","./src/app/job-detail/job-occurrences/job-occurrences.component.html","./src/app/job-detail/job-parameters/job-parameters.component.ts","./src/app/job-detail/job-parameters/job-parameters.component.html","./src/app/work-protection.guard.ts","./src/app/job-detail/job-start-condition/job-start-condition.component.ts","./src/app/job-detail/job-start-condition/job-start-condition.component.html","./src/app/job-detail/job-detail.component.ts","./src/app/job-detail/job-detail.component.html","./src/environments/environment.ts","./src/app/job-detail/date.directive.ts","./src/app/dialog.service.ts","./src/app/custom.reuse.strategy.ts","./src/app/async-validators.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/job-list/job-list.component.html","./src/app/job-list/job-list.component.ts","./src/app/job-detail/job-start-condition/job-recursive-schedule/job-recursive-schedule.component.ts","./src/app/job-detail/job-start-condition/job-recursive-schedule/job-recursive-schedule.component.html","./src/app/app.module.ts","./src/app/job-types.ts","./src/app/job-detail/job-occurrences/job-occurrence-detail/job-occurrence-detail.component.html","./src/app/job-detail/job-occurrences/job-occurrence-detail/job-occurrence-detail.component.ts","./src/app/job-detail/job-steps/job-steps.component.ts","./src/app/job-detail/job-steps/job-steps.component.html","./src/app/job-detail/admin/admin.component.ts","./src/app/job-detail/admin/admin.component.html","./src/app/msgStore.ts","./src/main.ts","./src/app/job.service.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {JobService} from '../../job.service';\nimport {JobOccurrence} from '../../job-types';\nimport {Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\n\n@Component({\n  selector: 'app-job-occurrences',\n  templateUrl: './job-occurrences.component.html',\n  styleUrls: ['./job-occurrences.component.css']\n})\nexport class JobOccurrencesComponent implements OnInit {\n  @Input() readonly!: boolean;\n  @Input() mainForm!: FormGroup;\n  @Input() displayStatistics!: string;\n  mode = 0;\n  jobOccurrences!: JobOccurrence[];\n  isSearchListShown = true;\n  startDate!: Date;\n  endDate!: Date;\n  status = [true, true, true, true, true, true];\n  numOfOccs: any[] = [0, 0, 0, 0, 0, 0];\n  occStatuses: string[] = [];\n  occStatusColors: string[] = [];\n  jobOccurrence!: JobOccurrence;\n\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private messageService: MessageService,\n              private jobService: JobService) {\n    this.occStatuses = this.jobService.occStatuses;\n    this.occStatusColors = this.jobService.occStatusColors;\n  }\n\n  ngOnInit(): void {\n    this.mode = this.mainForm.get('mode')?.value;\n    if (this.mode >= 2 && !this.displayStatistics) { // On set start and end dates for recursive and event-based jobs.\n      const now = new Date();\n      this.startDate = new Date();\n      this.endDate = new Date();\n      this.startDate.setDate(now.getDate() - 15);\n      this.endDate.setDate(now.getDate() + 15);\n    }\n    switch (this.displayStatistics) {\n      case 'displayFinished':\n        this.status = [false, false, false, true, false, false];\n        break;\n      case 'displayFailed':\n        this.status = [false, false, false, false, true, false];\n        break;\n      case 'displayCanceled':\n        this.status = [false, false, false, false, false, true];\n        break;\n      default:\n    }\n    this.search();\n  }\n\n  search(): void {\n    const jobName = this.mainForm.get('name')?.value;\n    if (!jobName) { return; }\n    const statusArray: number[] = [];\n    let startDate = '';\n    let endDate = '';\n\n    if (this.mode >= 2) {\n      this.status.forEach( (value, index) => {\n        if (value) { statusArray.push(index); }\n      });\n      if (this.startDate) {\n        startDate = this.startDate.toISOString().slice(0, 19).replace('T', ' ');\n      }\n      if (this.endDate) {\n        endDate = this.endDate.toISOString().slice(0, 19).replace('T', ' ');\n      }\n    }\n\n    this.jobService.searchJobOccurrences(jobName, statusArray, startDate, endDate)\n      .subscribe(data => {\n        this.jobOccurrences = data as JobOccurrence[];\n        if (this.jobOccurrences.length === 0) { return; }\n        this.isSearchListShown = this.mode >= 2;\n        this.numOfOccs = [0, 0, 0, 0, 0, 0];\n        this.jobOccurrences.forEach( occ => this.numOfOccs[occ.status]++);\n        if (this.numOfOccs[0] === 51) {\n          this.numOfOccs[0] = '50+';\n        }\n        this.showOccurrence(this.jobOccurrences[0]);\n      });\n  }\n\n  showOccurrence(jobOccurrence: JobOccurrence): void {\n    if (this.jobOccurrence?.uuid === jobOccurrence.uuid) { return; }\n    if (jobOccurrence.status === 0) { // Initial\n      const job = this.mainForm.getRawValue();\n      this.jobOccurrence = new JobOccurrence();\n      this.jobOccurrence.uuid = jobOccurrence.uuid;\n      this.jobOccurrence.status = jobOccurrence.status;\n      this.jobOccurrence.jobName = jobOccurrence.jobName;\n      this.jobOccurrence.scheduledDateTime = jobOccurrence.scheduledDateTime;\n      this.jobOccurrence.actualStartDateTime = '';\n      this.jobOccurrence.endDateTime = '';\n      this.jobOccurrence.identity = job.identity;\n      this.jobOccurrence.steps = job.steps;\n      this.jobOccurrence.startCondition = job.startCondition;\n      this.jobOccurrence.outputSetting = job.outputSetting;\n      this.jobOccurrence.applicationLog = [];\n      return;\n    }\n    this.jobService.getOccurrence(jobOccurrence.uuid).subscribe( data => {\n      if ('uuid' in data) {\n        this.jobOccurrence = data as JobOccurrence;\n      } else {\n        const errorMessages = data as Message[];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  toLocaleString(dateStr: string | undefined): string {\n    return this.jobService.toLocaleString(dateStr);\n  }\n}\n","<div class=\"row\">\n  <div *ngIf=\"isSearchListShown\" class=\"col-4\">\n    <div class=\"row mb-2\">\n      <div class=\"col-4\">\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"statusInitial\" [(ngModel)]=\"status[0]\">\n          <label class=\"form-check-label\" [ngClass]=\"occStatusColors[0]\" for=\"statusInitial\">\n            {{occStatuses[0]}}({{numOfOccs[0]}})\n          </label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"statusFinished\" [(ngModel)]=\"status[3]\">\n          <label class=\"form-check-label\" [ngClass]=\"occStatusColors[3]\" for=\"statusFinished\">\n            {{occStatuses[3]}}({{numOfOccs[3]}})\n          </label>\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"statusReady\" [(ngModel)]=\"status[1]\">\n          <label class=\"form-check-label\" [ngClass]=\"occStatusColors[1]\" for=\"statusReady\">\n            {{occStatuses[1]}}({{numOfOccs[1]}})\n          </label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"statusFailed\" [(ngModel)]=\"status[4]\">\n          <label class=\"form-check-label\" [ngClass]=\"occStatusColors[4]\" for=\"statusFailed\">\n            {{occStatuses[4]}}({{numOfOccs[4]}})\n          </label>\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"statusRunning\" [(ngModel)]=\"status[2]\">\n          <label class=\"form-check-label\" [ngClass]=\"occStatusColors[2]\" for=\"statusRunning\">\n            {{occStatuses[2]}}({{numOfOccs[2]}})\n          </label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"statusCanceled\" [(ngModel)]=\"status[5]\">\n          <label class=\"form-check-label\" [ngClass]=\"occStatusColors[5]\" for=\"statusCanceled\">\n            {{occStatuses[5]}}({{numOfOccs[5]}})\n          </label>\n        </div>\n      </div>\n      <div class=\"row ml-2 mt-2\">\n        <div class=\"col-10\">\n          <div class=\"form-group row\">\n            <label for=\"startFrom\" class=\"col-sm-2 col-form-label col-form-label-sm\">From:</label>\n            <div class=\"col-sm-10\">\n              <input id=\"startFrom\" name=\"startFrom\" type=\"datetime-local\" class=\"form-control form-control-sm\"\n                     [(date)]=\"startDate\">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"endAt\" class=\"col-sm-2 col-form-label col-form-label-sm\">To:</label>\n            <div class=\"col-sm-10\">\n              <input id=\"endAt\" name=\"endAt\" type=\"datetime-local\" class=\"form-control form-control-sm\"\n                     [(date)]=\"endDate\">\n            </div>\n          </div>\n        </div>\n        <div class=\"col-2 form-group\">\n          <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm position-absolute fixed-bottom\"\n                  (click)=\"search()\">Go</button>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"list-group dk-scroll-list\">\n      <a *ngFor=\"let jobOcc of jobOccurrences\"\n         (click)=\"showOccurrence(jobOcc)\"\n         [ngClass]=\"{'active': jobOcc.uuid === jobOccurrence?.uuid}\"\n         class=\"list-group-item list-group-item-action flex-column align-items-start\">\n        <h5 class=\"mb-1\" [ngClass]=\"occStatusColors[jobOcc.status]\">{{occStatuses[jobOcc.status]}}</h5>\n        <div class=\"row\">\n          <small class=\"col-sm-6\">Scheduled Date:</small>\n          <small class=\"col-sm-6\">{{toLocaleString(jobOcc.scheduledDateTime)}}</small>\n        </div>\n        <div class=\"row\">\n          <small class=\"col-sm-6\">Actual Start Date:</small>\n          <small class=\"col-sm-6\">{{toLocaleString(jobOcc.actualStartDateTime)}}</small>\n        </div>\n        <div class=\"row\">\n          <small class=\"col-sm-6\">End Date:</small>\n          <small class=\"col-sm-6\">{{toLocaleString(jobOcc.endDateTime)}}</small>\n        </div>\n      </a>\n    </div>\n  </div>\n\n  <div [ngClass]=\"{'col-8': isSearchListShown, 'col-12': !isSearchListShown}\">\n<!--    <router-outlet></router-outlet>-->\n    <app-job-occurrence-detail [jobOccurrence]=\"jobOccurrence\"></app-job-occurrence-detail>\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Parameter, ParameterDefinitions} from '../../job-types';\nimport {Attribute, AttributeBase, AttributeControlService, EntityService} from 'jor-angular';\nimport {MessageService} from 'ui-message-angular';\n\n@Component({\n  selector: 'app-job-parameters',\n  templateUrl: './job-parameters.component.html',\n  styleUrls: ['./job-parameters.component.css']\n})\nexport class JobParametersComponent implements OnInit, OnChanges {\n  @Input() parameterDefinitions!: ParameterDefinitions;\n  @Input() currentJobStep!: FormGroup;\n  @Input() readonly!: boolean;\n  groups: any[] = [];\n  parameters: any[] = [];\n  boolExpressions: any[] = [];\n  paramFormGroup!: FormGroup;\n\n  constructor(private fb: FormBuilder,\n              private entityService: EntityService,\n              private messageService: MessageService,\n              private attributeControlService: AttributeControlService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(): void {\n    this.groups = [];\n    this.parameters = [];\n    this.paramFormGroup = this.fb.group({});\n    if (!this.parameterDefinitions) { return; }\n    for (const [groupName, parameterDefinition] of Object.entries(this.parameterDefinitions)) {\n      this.groups.push({\n        name: groupName,\n        label: parameterDefinition.text?.DEFAULT,\n        displayIn: parameterDefinition.displayIn,\n      });\n      for (const [paramName, paramDefinition] of Object.entries(parameterDefinition.parameters)) {\n        const parameter = {\n          name: paramName,\n          paramDefinition,\n          group: groupName,\n          attributeControl: new AttributeBase()\n        };\n\n        // evaluate boolean expression\n        this.registerBoolExpressions(paramName, paramDefinition);\n\n        // get the parameter values\n        const paramValueStr = this.currentJobStep.get('parameters')?.value;\n        let paramValues = {};\n        try {\n          if (paramValueStr && typeof paramValueStr === 'string') {\n            paramValues = JSON.parse(paramValueStr);\n          } else {\n            paramValues = paramValueStr;\n          }\n        } catch (e) {\n          this.messageService.reportMessage('JOB', 'GENERAL', 'E', e.message);\n        }\n        // @ts-ignore\n        const paramValue = paramValues[paramName] || paramDefinition.defaultValue;\n        if (paramDefinition.mandatory) {\n          this.paramFormGroup.addControl(paramName, this.fb.control(paramValue, Validators.required));\n        } else {\n          this.paramFormGroup.addControl(paramName, this.fb.control(paramValue));\n        }\n\n        // parameter visualization\n        if (paramDefinition.dataElement) {\n          this.entityService.getElementMeta(paramDefinition.dataElement)\n            .subscribe( attrCtrl => {\n              const attribute = attrCtrl as Attribute;\n              attribute.ATTR_GUID = paramName;\n              attribute.ATTR_NAME = paramName;\n              attribute.DATA_ELEMENT = paramDefinition.dataElement;\n              attribute.PRIMARY_KEY = paramDefinition.mandatory;\n              if (paramDefinition.text?.DEFAULT !== paramName) {\n                attribute.LABEL_TEXT = paramDefinition.text?.DEFAULT;\n              }\n              // @ts-ignore\n              parameter.attributeControl = this.attributeControlService.toSingleAttributeControl(attribute);\n              this.adjustAttributeControl(parameter.attributeControl, paramDefinition);\n              this.parameters.push(parameter);\n            });\n        } else {\n          const paramAttribute = new Attribute();\n          paramAttribute.ATTR_GUID = paramName;\n          paramAttribute.ATTR_NAME = paramName;\n          paramAttribute.LABEL_TEXT = paramAttribute.LIST_HEADER_TEXT = paramDefinition.text?.DEFAULT;\n          paramAttribute.DATA_TYPE = paramDefinition.type || 1; // 1 = Char\n          paramAttribute.PRIMARY_KEY = paramDefinition.mandatory;\n          // @ts-ignore\n          parameter.attributeControl = this.attributeControlService.toSingleAttributeControl(paramAttribute);\n          this.adjustAttributeControl(parameter.attributeControl, paramDefinition);\n          this.parameters.push(parameter);\n        }\n      }\n    }\n    // evaluate boolean expressions\n    this.evaluateBoolExpressions();\n  }\n\n  private adjustAttributeControl(attributeControl: AttributeBase, paramDefinition: Parameter): void {\n    if (paramDefinition.pattern) {\n      attributeControl.pattern = paramDefinition.pattern;\n    }\n    switch (paramDefinition.displayAs) {\n      case 'dropdown':\n        // @ts-ignore\n        attributeControl.controlType = 'dropdown';\n        attributeControl.dropdownList = [];\n        // @ts-ignore\n        for (const [key, value] of Object.entries(paramDefinition.domain)) {\n          // @ts-ignore\n          attributeControl.dropdownList.push({ key, value: value.DEFAULT});\n        }\n        break;\n      case 'password':\n        attributeControl.controlType = 'password';\n        break;\n      case 'text':\n        attributeControl.controlType = 'textarea';\n        attributeControl.rows = 3;\n        break;\n      default:\n    }\n  }\n\n  private registerBoolExpressions(paramName: string, paramDefinition: Parameter): void {\n    if (paramDefinition.readOnly && typeof paramDefinition.readOnly !== 'boolean') {\n      this.boolExpressions.push({\n        paramName,\n        attribute: 'readOnly',\n        expression: paramDefinition.readOnly\n      });\n    }\n    if (paramDefinition.hidden && typeof paramDefinition.hidden !== 'boolean') {\n      this.boolExpressions.push({\n        paramName,\n        attribute: 'hidden',\n        expression: paramDefinition.hidden\n      });\n    }\n  }\n\n  getGroupParameters(groupName: string): any[] {\n    return this.parameters.filter( param => param.group === groupName);\n  }\n\n  generateParamValues(): boolean {\n    if (this.paramFormGroup.invalid) {\n      this.messageService.reportMessage('JOB', 'INVALID_PARAMETER_VALUE', 'E');\n      return false;\n    }\n    if (this.paramFormGroup.dirty) {\n      this.currentJobStep.get('parameters')?.setValue(JSON.stringify(this.paramFormGroup.getRawValue()));\n      this.currentJobStep.markAsDirty();\n    }\n    return true;\n  }\n\n  onChange($event: any): void {\n    this.evaluateBoolExpressions();\n  }\n\n  private evaluateBoolExpressions(): void {\n    const parameters = this.paramFormGroup.getRawValue();\n    this.boolExpressions.forEach( boolExpr => {\n      const parameter = this.parameters.filter( param => param.name === boolExpr.paramName)[0];\n      if (!parameter) { return;}\n      const bool = evaluateBoolExpression(boolExpr.expression);\n      if (parameter.paramDefinition[boolExpr.attribute] !== bool) {\n        parameter.paramDefinition[boolExpr.attribute] = bool;\n        this.paramFormGroup.get(boolExpr.paramName)?.setValue('');\n      }\n    });\n    function evaluateBoolExpression(expression: string): boolean {\n      const str = '\"use strict\";return ( function(parameters) { return (' + expression + ') } );';\n      return Function(str)()(parameters);\n    }\n  }\n}\n\n","<div class=\"card mt-2\" *ngFor=\"let group of groups\">\n  <div *ngIf=\"group['displayIn'] === 'block'\" class=\"card-header\">{{group.label}}</div>\n  <div class=\"card-body\">\n    <div [class.row]=\"group['displayIn'] === 'row'\">\n      <div *ngFor=\"let parameter of getGroupParameters(group.name)\"\n           [className]=\"'col-' + parameter['paramDefinition'].columnSpan\"\n           [ngStyle]=\"{'display': parameter['paramDefinition'].hidden?'none':'block'}\">\n        <dk-app-attribute-form2  *ngIf=\"!parameter['paramDefinition']['hideLabel'] && parameter['attributeControl']\"\n                                 [attributeControl]=\"parameter['attributeControl']\"\n                                 [formGroup]=\"paramFormGroup\"\n                                 [readonly]=\"readonly || parameter['paramDefinition'].readOnly\"\n                                 (change)=\"onChange($event)\"\n                                 [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <dk-app-attribute *ngIf=\"parameter['paramDefinition']['hideLabel'] && parameter['attributeControl']\"\n                                 [attributeControl]=\"parameter['attributeControl']\"\n                                 [formGroup]=\"paramFormGroup\"\n                                 [readonly]=\"readonly || parameter['paramDefinition'].readOnly\"\n                                 (change)=\"onChange($event)\"\n                                 [isSmallSize]=\"true\">\n        </dk-app-attribute>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkProtectionGuard implements CanDeactivate<CanComponentDeactivate>  {\n\n  canDeactivate(component: CanComponentDeactivate,\n                currentRoute: ActivatedRouteSnapshot,\n                currentState: RouterStateSnapshot,\n                nextState?: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {JobRecursiveScheduleComponent} from './job-recursive-schedule/job-recursive-schedule.component';\n\n@Component({\n  selector: 'app-job-start-condition',\n  templateUrl: './job-start-condition.component.html',\n  styleUrls: ['./job-start-condition.component.css']\n})\nexport class JobStartConditionComponent implements OnInit {\n  jobStartConditionFormGroup!: FormGroup;\n  specificTime!: Date;\n  @Input() readonly!: boolean;\n  @Input() mainForm!: FormGroup;\n  @Input() hasSimulation!: boolean;\n  @ViewChild(JobRecursiveScheduleComponent)\n  jobRecursiveScheduleComponent!: JobRecursiveScheduleComponent;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.jobStartConditionFormGroup = this.mainForm.get('startCondition') as FormGroup;\n    this.specificTime = new Date(this.jobStartConditionFormGroup.get('specificTime')?.value + ' UTC');\n  }\n\n  updateMainForm(): void {\n    const modeCtrl = this.jobStartConditionFormGroup.get('mode');\n    if (modeCtrl?.value === 2) {\n      this.jobRecursiveScheduleComponent.updateMainForm();\n    }\n  }\n\n  onChangeSpecificDate(newDate: Date): void {\n    const mySQLDateStr = newDate.toISOString().slice(0, 19).replace('T', ' ');\n\n    this.jobStartConditionFormGroup.get('specificTime')?.setValue(mySQLDateStr);\n    this.jobStartConditionFormGroup.get('specificTime')?.markAsDirty();\n  }\n\n  onChangeMode(): void {\n    const modeCtrl = this.jobStartConditionFormGroup.get('mode');\n    this.mainForm.get('mode')?.setValue(modeCtrl?.value);\n    switch (modeCtrl?.value) {\n      case 0:\n        this.jobStartConditionFormGroup.get('specificTime')?.setValue(null);\n        this.jobStartConditionFormGroup.get('cronString')?.setValue(null);\n        this.jobStartConditionFormGroup.get('cronCurrentDate')?.setValue(null);\n        this.jobStartConditionFormGroup.get('cronEndDate')?.setValue(null);\n        this.jobStartConditionFormGroup.get('tz')?.setValue(null);\n        break;\n      case 1:\n        this.jobStartConditionFormGroup.get('cronString')?.setValue(null);\n        this.jobStartConditionFormGroup.get('cronCurrentDate')?.setValue(null);\n        this.jobStartConditionFormGroup.get('cronEndDate')?.setValue(null);\n        this.jobStartConditionFormGroup.get('tz')?.setValue(null);\n        break;\n      case 2:\n        this.jobStartConditionFormGroup.get('specificTime')?.setValue(null);\n        break;\n      case 3:\n        break;\n    }\n  }\n}\n","<div class=\"container-fluid\" [formGroup]=\"jobStartConditionFormGroup\">\n  <div class=\"mb-2\">\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"mode\" id=\"ImmediatelyMode\" [value]=\"0\"\n             formControlName=\"mode\" (change)=\"onChangeMode()\">\n      <label class=\"form-check-label\" for=\"ImmediatelyMode\">Immediately</label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"mode\" id=\"SpecificTimeMode\" [value]=\"1\"\n             formControlName=\"mode\" (change)=\"onChangeMode()\">\n      <label class=\"form-check-label\" for=\"SpecificTimeMode\">At Specific Time</label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"mode\" id=\"RecursivelyMode\" [value]=\"2\"\n             formControlName=\"mode\" (change)=\"onChangeMode()\">\n      <label class=\"form-check-label\" for=\"RecursivelyMode\">Recursively</label>\n    </div>\n  </div>\n\n  <div class=\"mt-2\" [ngSwitch]=\"jobStartConditionFormGroup.get('mode')?.value\">\n    <div class=\"card\" *ngSwitchCase=\"1\">\n      <div class=\"card-header\">Job will start at the given datetime</div>\n      <div class=\"card-body\">\n        <div class=\"form-group row col-6\">\n          <div>\n            <input id=\"startFrom\" name=\"startFrom\" type=\"datetime-local\" class=\"form-control\"\n                   [readOnly]=\"readonly\" [(date)]=\"specificTime\" (dateChange)=\"onChangeSpecificDate($event)\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngSwitchCase=\"2\">\n      <div class=\"card-header\">Job starts recursively with the given rule</div>\n      <div class=\"card-body\">\n        <app-job-recursive-schedule [startConditionForm]=\"jobStartConditionFormGroup\"\n                                    [readonly]=\"readonly\" [hasSimulation]=\"hasSimulation\">\n        </app-job-recursive-schedule>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {JobService} from '../job.service';\nimport {DialogService} from '../dialog.service';\nimport {MessageService, Message} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {Job} from '../job-types';\nimport {existingJobNameValidator} from '../async-validators';\nimport {JobStartConditionComponent} from './job-start-condition/job-start-condition.component';\n\n@Component({\n  selector: 'app-job-detail',\n  templateUrl: './job-detail.component.html',\n  styleUrls: ['./job-detail.component.css']\n})\nexport class JobDetailComponent implements OnInit {\n  mainForm!: FormGroup;\n  textForm!: FormGroup;\n  readonly = true;\n  isNewMode = false;\n  action!: string | null;\n  originalValue!: Job;\n  changedValue!: Job;\n  tabStrip = 1;\n  workInProgress = false;\n  jobStatuses: string[];\n  jobStatusColors: string[];\n  showScheduleConfirmation = false;\n  showChangeConfirmation = false;\n  showCancelConfirmation = false;\n  displayStatistics = '';\n\n  @ViewChild(JobStartConditionComponent)\n  jobStartConditionComponent!: JobStartConditionComponent;\n\n  get numberOfSteps(): number {\n    const stepsArray = this.mainForm.get('steps') as FormArray;\n    return stepsArray.length;\n  }\n\n  get displayScheduleConfirmation(): string {return this.showScheduleConfirmation ? 'block' : 'none'; }\n  get displayChangeConfirmation(): string {return this.showChangeConfirmation ? 'block' : 'none'; }\n  get displayCancelConfirmation(): string {return this.showCancelConfirmation ? 'block' : 'none'; }\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private jobService: JobService,\n              private messageService: MessageService) {\n    this.jobStatuses = this.jobService.jobStatuses;\n    this.jobStatusColors = this.jobService.jobStatusColors;\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return this._createNewEntity();\n        } else {\n          this.isNewMode = false;\n          if (this.action === 'displayFinished' || this.action === 'displayFailed' || this.action === 'displayCanceled') {\n            this.tabStrip = 3;\n            this.displayStatistics = this.action;\n          }\n          return this.jobService.getJob(params.get('name'));\n        }\n      })\n    ).subscribe( data => {\n      if ('name' in data) {\n        this._generateMainForm(data as Job);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        // @ts-ignore\n        const errorMessages = data as Message[];\n        if (errorMessages && Array.isArray(errorMessages)) {\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      }\n    });\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    if (this.tabStrip === 2) {\n      this.jobStartConditionComponent.updateMainForm();\n      if (this.mainForm.invalid) {\n        this.messageService.reportMessage('JOB', 'INVALID', 'E');\n        return;\n      }\n    }\n    this.tabStrip = tabStripID;\n  }\n\n  return2List(): void {\n    this.router.navigate(['jobs']);\n  }\n\n  refresh(): void {\n    this.messageService.clearMessages();\n    this.jobService.getJobStatus(this.originalValue.name)\n      .subscribe( status => {\n        const currentStatus = this.mainForm.get('status')?.value;\n        if (status !== null && currentStatus === 1) {\n          this.mainForm.get('status')?.setValue(status);\n          if (this.tabStrip === 3) {\n            this.tabStrip = 0;\n            setTimeout( () => { this.tabStrip = 3; }, 200);\n          }\n        }\n      });\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.isNewMode = false;\n\n    const jobNameCtrl = this.mainForm.get('name') as FormControl;\n    jobNameCtrl.clearAsyncValidators();\n    const startConditionCtrl = this.mainForm.get('startCondition') as FormGroup;\n    startConditionCtrl.get('mode')?.disable();\n    const outputSettingCtrl = this.mainForm.get('outputSetting') as FormGroup;\n    outputSettingCtrl.get('console2ApplicationLog')?.disable();\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/jobs/${jobNameCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n\n    const jobNameCtrl = this.mainForm.get('name') as FormControl;\n    if (this.isNewMode) {\n      jobNameCtrl.setAsyncValidators(\n        existingJobNameValidator(this.jobService, this.messageService));\n    }\n    const startConditionCtrl = this.mainForm.get('startCondition') as FormGroup;\n    startConditionCtrl.get('mode')?.enable();\n    const outputSettingCtrl = this.mainForm.get('outputSetting') as FormGroup;\n    outputSettingCtrl.get('console2ApplicationLog')?.enable();\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/jobs/${jobNameCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Job> {\n    const jobDetail = {\n      name: '', status: 0, mode: 0,\n      description: {DEFAULT: ''},\n      identity: {id: ''},\n      steps: [],\n      startCondition: {mode: 0, specificTime: null, cronString: null, cronCurrentDate: null, cronEndDate: null,\n        tz: Intl.DateTimeFormat().resolvedOptions().timeZone},\n      outputSetting: { console2ApplicationLog: false }\n    };\n    return of(jobDetail);\n  }\n\n  _generateMainForm(data: Job): void {\n    this.mainForm = this.fb.group({\n      name: [data.name, [Validators.required]],\n      status: [data.status],\n      mode: [data.mode],\n      finishedOccurrences: [data.finishedOccurrences],\n      failedOccurrences: [data.failedOccurrences],\n      canceledOccurrences: [data.canceledOccurrences],\n      createdBy: [data.createdBy],\n      createTime: [this.jobService.toLocaleString(data.createTime)],\n      lastChangedBy: [data.lastChangedBy],\n      lastChangeTime: [this.jobService.toLocaleString(data.lastChangeTime)],\n      startCondition: this.fb.group({\n        mode: [data.startCondition.mode],\n        specificTime: [data.startCondition.specificTime],\n        cronString: [data.startCondition.cronString],\n        cronCurrentDate: [data.startCondition.cronCurrentDate],\n        cronEndDate: [data.startCondition.cronEndDate],\n        tz: [data.startCondition.tz],\n      }),\n      outputSetting: this.fb.group({\n        console2ApplicationLog: [data.outputSetting?.console2ApplicationLog]\n      })\n    });\n\n    this.textForm = this.fb.group({});\n    if (!data.description) {\n      data.description = {DEFAULT: ''};\n    }\n    for ( const[key, value] of Object.entries(data.description) ) {\n      this.textForm.addControl(key, this.fb.control(value));\n    }\n    this.mainForm.addControl('description', this.textForm);\n\n    this.mainForm.addControl('identity', this.fb.group({\n      id: [data.identity ? data.identity.id : '']\n    }));\n\n    this.mainForm.addControl('steps',\n      // @ts-ignore\n      this.fb.array(data.steps.map(step => this.fb.group({\n        program: [step.program],\n        parameters: [step.parameters]\n      }))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  save(needConfirm: boolean = true): void {\n    this.messageService.clearMessages();\n    if (needConfirm && !this.isNewMode ) {\n      this.showChangeConfirmation = true;\n      return;\n    }\n    this.workInProgress = true;\n    if (this._composeChanges()) {\n      this.jobService.saveJob(this.isNewMode, this.changedValue).subscribe( data => {\n        const messages = data as Message[];\n        messages.forEach( msg => this.messageService.add(msg));\n        if (messages[0].msgName === 'JOB_IS_SAVED') {\n          this._retrieveUpdatedValue();\n          if (this.isNewMode) {\n            this.showScheduleConfirmation = true;\n          }\n        }\n        this.workInProgress = false;\n      });\n    }\n  }\n\n  change(): void {\n    this.save(false);\n    this.showChangeConfirmation = false;\n  }\n\n  cancelChange(): void {\n    this.showChangeConfirmation = false;\n  }\n\n  schedule(): void {\n    this.messageService.clearMessages();\n    this.workInProgress = true;\n    this.jobService.scheduleJobs([this.mainForm.get('name')?.value]).subscribe( data => {\n      const messages = data as Message[];\n      messages.forEach( msg => this.messageService.add(msg));\n      if (messages[0].msgName === 'JOB_IS_SCHEDULED') {\n        this._retrieveUpdatedValue();\n      }\n      this.workInProgress = false;\n      this.showScheduleConfirmation = false;\n    });\n  }\n\n  cancelSchedule(): void {\n    this.showScheduleConfirmation = false;\n  }\n\n  cancelJob(): void {\n    this.showCancelConfirmation = true;\n  }\n\n  cancelCancelJob(): void {\n    this.showCancelConfirmation = false;\n  }\n\n  confirmCancelJob(): void {\n    this.jobService.cancelJobs([this.mainForm.get('name')?.value])\n      .subscribe( data => {\n        this.showCancelConfirmation = false;\n        const messages = data as Message[];\n        messages.forEach( msg => this.messageService.add(msg));\n        this.refresh();\n      });\n  }\n\n  _composeChanges(): boolean {\n    this.jobStartConditionComponent?.updateMainForm();\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('JOB', 'INVALID', 'E');\n      return false;\n    }\n\n    if (!this.mainForm.dirty) {\n      this.messageService.reportMessage('JOB', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    const stepsFormArray = this.mainForm.get('steps') as FormArray;\n    if (stepsFormArray.length === 0) {\n      this.messageService.reportMessage('JOB', 'NO_STEPS', 'E');\n      return false;\n    }\n    this.changedValue = this.mainForm.getRawValue();\n    // console.log(this.changedValue);\n    return true;\n  }\n\n  _retrieveUpdatedValue(): void {\n    // tslint:disable-next-line:no-shadowed-variable\n    this.jobService.getJob(this.mainForm.get('name')?.value).subscribe(data => {\n      if (data instanceof Message) {\n        this.messageService.add(data);\n      } else {\n        this._switch2DisplayMode();\n        this.originalValue = data as Job;\n        this.mainForm.reset(this.originalValue);\n      }\n    });\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New Job' : readonly? 'Display Job' : 'Change Job'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button *ngIf=\"mainForm?.get('status')?.value === 1\"\n            class=\"btn btn-sm btn-light mr-2\" type=\"button\" title=\"Return to List\" id=\"refresh\"\n            (click)=\"refresh()\" >\n      <span class=\"fas fa-sync-alt\"></span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-info mr-2\" type=\"button\" title=\"Return to List\" id=\"toList\"\n            (click)=\"return2List()\" >\n      <span class=\"fas fa-list-ul\"> To List</span>\n    </button>\n    <button *ngIf=\"!isNewMode && mainForm?.get('status')?.value !== 2\"\n            class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\"\n            (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button *ngIf=\"!isNewMode && mainForm?.get('status')?.value < 2\"\n            class=\"btn btn-sm btn-outline-secondary mr-2\" type=\"button\" title=\"Schedule Job\" id=\"cancel\"\n            (click)=\"cancelJob()\">\n      <span class=\"fas fa-times-circle\"> Cancel</span>\n    </button>\n    <button *ngIf=\"!isNewMode && mainForm?.get('status')?.value === 0\"\n            class=\"btn btn-sm btn-outline-success mr-2\" type=\"button\" title=\"Schedule Job\" id=\"schedule\"\n            (click)=\"schedule()\">\n      <span class=\"fas fa-calendar-plus\"> Schedule</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\"\n            (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"ml-2\">\n\n  <div *ngIf=\"workInProgress\" class=\"overlay\">\n    <div class=\"spinner-border\" role=\"status\">\n<!--      <span class=\"sr-only\">Processing...</span>-->\n    </div>\n  </div>\n\n  <div class=\"mt-2 ml-1 row\">\n    <div class=\"form-group col-md-6 col-lg-4\" [formGroup]=\"mainForm\">\n      <label for=\"jobName\" class=\"col-form-label form-control-sm\">Job Name:\n        <span [class.ng-invalid]=\"mainForm.get('name')?.invalid\" class=\"dk-invalid-feedback\">\n          {{mainForm.get('name')?.errors?.message}}\n        </span>\n      </label>\n      <input class=\"form-control form-control-sm\" id=\"jobName\" name=\"jobName\"\n                formControlName=\"name\" [readonly]=\"readonly\">\n    </div>\n    <div class=\"form-group col-md-6 col-lg-4\" [formGroup]=\"textForm\">\n      <label for=\"description\" class=\"col-form-label form-control-sm\">Description:\n      </label>\n      <textarea class=\"form-control form-control-sm\" id=\"description\" name=\"description\" rows=\"1\"\n                formControlName=\"DEFAULT\" [readonly]=\"readonly\"></textarea>\n    </div>\n    <div class=\"col-md-6 col-lg-4\">\n      <label for=\"status\" class=\"col-form-label form-control-sm\">Job Status:\n      </label>\n      <h3 class=\"ml-2\" id=\"status\"\n          [ngClass]=\"jobStatusColors[mainForm.get('status')?.value]\">{{jobStatuses[mainForm.get('status')?.value]}}</h3>\n    </div>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Steps({{numberOfSteps}})</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Start Condition</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">Occurrence</a>\n    </li>\n    <li class=\"nav-item\" *ngIf=\"mainForm.get('createdBy')\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===4\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(4)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-job-steps *ngSwitchCase=\"1\" [mainForm]=\"mainForm\" [readonly]=\"readonly\"></app-job-steps>\n    <app-job-start-condition *ngSwitchCase=\"2\" [mainForm]=\"mainForm\" [readonly]=\"readonly\" [hasSimulation]=\"true\"></app-job-start-condition>\n    <app-job-occurrences *ngSwitchCase=\"3\" [mainForm]=\"mainForm\" [displayStatistics]=\"displayStatistics\" [readonly]=\"readonly\"></app-job-occurrences>\n    <app-admin *ngSwitchCase=\"4\" [mainForm]=\"mainForm\"></app-admin>\n  </div>\n</div>\n\n<div class=\"modal\" [class.show]=\"showScheduleConfirmation\"\n     [ngStyle]=\"{'display': displayScheduleConfirmation}\" id=\"scheduleConfirmation\" tabindex=\"-1\" role=\"dialog\">\n  <div class=\"modal-dialog modal-md modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"confirmSchedule\">Schedule the Job?</h5>\n        <button type=\"button\" class=\"close\" (click)=\"cancelSchedule()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Do you want to schedule the job right now?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelSchedule()\">No</button>\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"schedule()\">Yes</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal\" [class.show]=\"showChangeConfirmation\"\n     [ngStyle]=\"{'display': displayChangeConfirmation}\" id=\"changeConfirmation\" tabindex=\"-1\" role=\"dialog\">\n  <div class=\"modal-dialog modal-md modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"confirmChange\">Confirm the Change?</h5>\n        <button type=\"button\" class=\"close\" (click)=\"cancelChange()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Changing of a scheduled job will cancel all its ready occurrences, and then re-schedule them.</p>\n        <p>Do you want to process?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelChange()\">No</button>\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"change()\">Yes</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal\" [class.show]=\"showCancelConfirmation\"\n     [ngStyle]=\"{'display': displayCancelConfirmation}\" id=\"cancelConfirmation\" tabindex=\"-1\" role=\"dialog\">\n  <div class=\"modal-dialog modal-md modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"confirmCancel\">Cancel the Job?</h5>\n        <button type=\"button\" class=\"close\" (click)=\"cancelCancelJob()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>Are you sure to cancel the job?</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelCancelJob()\">No</button>\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"confirmCancelJob()\">Yes</button>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  redirectPath: '',\n  redirectUrl: '/jor',\n  originalHost: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Input, Output, EventEmitter, Directive, HostBinding, HostListener} from '@angular/core';\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'input[type=datetime-local]',\n})\nexport class DateDirective {\n  @Input() set date(d: Date) { this.dateStr = this.toDateString(d); }\n  @Output() dateChange: EventEmitter<Date>;\n  @HostBinding('value') dateStr = '';\n\n  constructor() {\n    this.date = new Date();\n    this.dateChange = new EventEmitter();\n  }\n\n  private toDateString(date: Date): string {\n    return date ? (date.getFullYear().toString() + '-' + ('0' + (date.getMonth() + 1)).slice(-2) + '-' + ('0' + (date.getDate())).slice(-2)\n      + 'T' + date.toTimeString().slice(0, 5)) : '';\n  }\n\n  private parseDateString(date: string): Date {\n    date = date.replace('T', '-');\n    const parts = date.split('-');\n    const timeParts = parts[3].split(':');\n    return new Date(Number(parts[0]), Number(parts[1]) - 1, Number(parts[2]), Number(timeParts[0]), Number(timeParts[1]));\n  }\n\n  @HostListener('change', ['$event.target.value']) onDateChange(value: string): void {\n    if (value !== this.dateStr) {\n      const parsedDate = this.parseDateString(value);\n      if (!isNaN(parsedDate.getTime())) {\n        this.dateStr = value;\n        this.dateChange.emit(parsedDate);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  /**\n   * Ask user to confirm an action. `message` explains the action and choices.\n   * Returns observable resolving to `true`=confirm or `false`=cancel\n   */\n  confirm(message?: string): Observable<boolean> {\n    const confirmation = window.confirm(message || 'Is it OK?');\n\n    return of(confirmation);\n  }\n}\n","/**\n * The custom route reuse strategy inherits the \"RouteReuseStrategy\" to achieve a very usual case,\n * which by default, Angular doesn't support.\n * 1. Search for items based on filter conditions.\n * 2. Navigate to one of the item to the detail page(component).\n * 3. Navigate back to searched item list without re-initializing the search&list component again.\n * This requires the Angular route to save the search&list component, and restore it whenever back.\n * The detail solution is described in following thread:\n * https://stackoverflow.com/questions/41280471/how-to-implement-routereusestrategy-shoulddetach-for-specific-routes-in-angular\n */\nimport {ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy} from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomReuseStrategy implements RouteReuseStrategy {\n  routesToCache: string[] = ['jobs'];\n  storedRouteHandles = new Map<string, DetachedRouteHandle>();\n\n  /**\n   * When navigation from a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the current route should be stored.\n   */\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    // @ts-ignore\n    return this.routesToCache.indexOf(route.routeConfig.path) > -1;\n  }\n\n  /**\n   * If the current route need to be stored, that is shouldDetach return true,\n   * then on this method, you can implement a way to store routes. Usually in a Map.\n   */\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    // console.log('store', route);\n    // @ts-ignore\n    this.storedRouteHandles.set(route.routeConfig.path, handle);\n  }\n\n  /**\n   * When navigation to a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the target component can be get from a reuse buffer.\n   */\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldAttach', route);\n    // @ts-ignore\n    return this.storedRouteHandles.has(route.routeConfig.path);\n  }\n\n  /**\n   * If shouldAttach return true, then this method is invoke to retrieve the component from the buffer.\n   */\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    // @ts-ignore\n    return this.storedRouteHandles.get(route.routeConfig.path);\n  }\n\n  /**\n   * By default, Angular doesn't re-initializing the same component if the navigation is not to\n   * a different one. For example, you switch different entity ID in the same entity type detail page.\n   * In this way, shouldReuseRoute should return true to avoid executing other methods in this Class.\n   * However, if you navigate from search&list component to entity detail component, then the method should return false.\n   * So that other methods can be executed to decide whether the search&list component should be stored for future reuse.\n   */\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldReuseRoute, future:', future, 'current:', curr);\n    return future.routeConfig === curr.routeConfig;\n  }\n}\n","import {AbstractControl, AsyncValidatorFn, ValidationErrors} from '@angular/forms';\nimport {Observable, timer} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\nimport {MessageService} from 'ui-message-angular';\nimport {JobService} from './job.service';\n\nexport function existingJobNameValidator(jobService: JobService,\n                                         messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => jobService.getJob(control.value).pipe(\n        map(data => {\n          // @ts-ignore\n          if (data?.name === control.value) {\n            return {message: messageService.generateMessage('JOB', 'JOB_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n","import { Component } from '@angular/core';\nimport {MessageService} from 'ui-message-angular';\nimport {JobService} from './job.service';\nimport {msgStore} from './msgStore';\nimport {EntityService} from 'jor-angular';\nimport {environment} from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private jobService: JobService,\n              private entityService: EntityService,\n              private messageService: MessageService) {\n    this.entityService.setOriginalHost(environment.originalHost);\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n}\n","<div class=\"container-fluid\">\n  <router-outlet></router-outlet>\n</div>\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"pl-4 row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"jobName\" class=\"col-sm-3 col-form-label\">Job Name:</label>\n      <input id=\"jobName\" name=\"jobName\" [(ngModel)]=\"jobName\" type=\"text\"\n             class=\"ml-3 col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"program\" class=\"col-sm-3 col-form-label\">Program:</label>\n      <input id=\"program\" name=\"app_name\" [(ngModel)]=\"program\" type=\"text\"\n             class=\"ml-3 col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"pl-4 row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"mode\" class=\"col-sm-3 col-form-label\">Job Mode:</label>\n      <div id=\"mode\" class=\"ml-3\">\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"mode0\" [(ngModel)]=\"mode[0]\">\n          <label class=\"form-check-label\" for=\"mode0\">{{jobModes[0]}}</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"mode1\" [(ngModel)]=\"mode[1]\">\n          <label class=\"form-check-label\" for=\"mode1\">{{jobModes[1]}}</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"mode2\" [(ngModel)]=\"mode[2]\">\n          <label class=\"form-check-label\" for=\"mode2\">{{jobModes[2]}}</label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"status\" class=\"col-sm-3 col-form-label\">Job Status:</label>\n      <div id=\"status\" class=\"ml-3\">\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"status0\" [(ngModel)]=\"status[0]\">\n          <label class=\"form-check-label\" [class]=\"jobStatusColors[0]\" for=\"status0\">{{jobStatuses[0]}}</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"status1\" [(ngModel)]=\"status[1]\">\n          <label class=\"form-check-label\" [class]=\"jobStatusColors[1]\" for=\"status1\">{{jobStatuses[1]}}</label>\n        </div>\n        <div class=\"form-check form-check-inline\">\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"status2\" [(ngModel)]=\"status[2]\">\n          <label class=\"form-check-label\" [class]=\"jobStatusColors[2]\" for=\"status2\">{{jobStatuses[2]}}</label>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Description</th>\n      <th scope=\"col\">status</th>\n      <th scope=\"col\">Mode</th>\n      <th scope=\"col\">Finished</th>\n      <th scope=\"col\">Failed</th>\n      <th scope=\"col\">Canceled</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let job of jobs\">\n      <td><a [routerLink]=\"['/jobs', job.name, {action: 'display'}]\">{{job.name}}</a></td>\n      <td>{{job.description?.DEFAULT}}</td>\n      <td [class]=\"jobStatusColors[job.status]\">{{jobStatuses[job.status]}}</td>\n      <td>{{jobModes[job.mode]}}</td>\n      <td class=\"dk-statistic\">\n        <a [routerLink]=\"['/jobs', job.name, {action: 'displayFinished'}]\" [class]=\"occStatusColors[3]\">\n          {{job.finishedOccurrences}}\n        </a>\n      </td>\n      <td class=\"dk-statistic\">\n        <a [routerLink]=\"['/jobs', job.name, {action: 'displayFailed'}]\" [class]=\"occStatusColors[4]\">\n          {{job.failedOccurrences}}\n        </a>\n      </td>\n      <td class=\"dk-statistic\">\n        <a [routerLink]=\"['/jobs', job.name, {action: 'displayCanceled'}]\" [class]=\"occStatusColors[5]\">\n          {{job.canceledOccurrences}}\n        </a>\n      </td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(job.name)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\"\n                (click)=\"change(job.name)\" [disabled]=\"job.status === 2\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Cancel\" id=\"cancel\" class=\"btn btn-sm\" type=\"button\"\n                (click)=\"cancel(job.name)\" [disabled]=\"job.status === 2\">\n          <span class=\"far fa-times-circle\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal\" [class.show]=\"showCancelConfirmation\"\n       [ngStyle]=\"{'display': displayCancelConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-md modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Cancel?</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelCancel()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to cancel the job '{{toBeCanceledJobName}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"no\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelCancel()\">No</button>\n          <button type=\"button\" id=\"yes\" class=\"btn btn-sm btn-primary\" (click)=\"confirmCancel()\">Yes</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","/* tslint:disable */\nimport { Component, OnInit } from '@angular/core';\nimport {Job} from '../job-types';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {Router} from '@angular/router';\nimport {JobService} from '../job.service';\n\n@Component({\n  selector: 'app-job-list',\n  templateUrl: './job-list.component.html',\n  styleUrls: ['./job-list.component.css']\n})\nexport class JobListComponent implements OnInit {\n  jobName = '';\n  program = '';\n  jobs: Job[] = [];\n  status = [true, true, true];\n  mode = [true, true, true, false];\n  showCancelConfirmation = false;\n  toBeCanceledJobName = '';\n  jobStatuses: string[];\n  jobStatusColors: string[];\n  occStatusColors: string[];\n  jobModes: string[];\n\n  get displayCancelConfirmation() {return this.showCancelConfirmation ? 'block' : 'none'; }\n\n  constructor(private jobService: JobService,\n              private messageService: MessageService,\n              private router: Router) {\n    this.jobStatuses = this.jobService.jobStatuses;\n    this.jobStatusColors = this.jobService.jobStatusColors;\n    this.occStatusColors = this.jobService.occStatusColors;\n    this.jobModes = this.jobService.jobModes;\n  }\n\n  ngOnInit() {\n  }\n\n  search(clearMsg= true) {\n    if (clearMsg) {\n      this.messageService.clearMessages();\n    }\n    this.jobs = [];\n    this.jobName = this.jobName ? this.jobName.trim() : '';\n    this.program = this.program ? this.program.trim() : '';\n    let statusArray: number[]  = [];\n    this.status.forEach( (value, index) => {\n      if (value) { statusArray.push(index) }\n    });\n    if (statusArray.length === 0) {\n      this.messageService.reportMessage('JOB', 'AT_LEAST_ONE_JOB_STATUS', 'E');\n      return;\n    }\n    let modeArray: number[] = [];\n    this.mode.forEach( (value, index) => {\n      if (value) { modeArray.push(index) }\n    });\n    if (modeArray.length === 0 || statusArray.length === 0) {\n      this.messageService.reportMessage('JOB', 'AT_LEAST_ONE_JOB_MODE', 'E');\n      return;\n    }\n    this.jobService.searchJobs(this.jobName, statusArray, modeArray, this.program)\n      .subscribe(data => {\n        this.jobs = (data as Job[]);\n      }\n    );\n  }\n\n  enterSearch($event: { keyCode: number; }): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['jobs', '/', {action: 'new'}]);\n  }\n\n  display(jobName: string): void {\n    this.router.navigate(['jobs', jobName, {action: 'display'}]);\n  }\n\n  change(jobName: string): void {\n    this.router.navigate(['jobs', jobName, {action: 'change'}]);\n  }\n\n  cancel(jobName: string): void {\n    this.toBeCanceledJobName = jobName;\n    this.showCancelConfirmation = true;\n  }\n\n  cancelCancel(): void {\n    this.showCancelConfirmation = false;\n  }\n\n  confirmCancel(): void {\n    this.jobService.cancelJobs([this.toBeCanceledJobName])\n      .subscribe( data => {\n        this.showCancelConfirmation = false;\n        const messages = <Message[]>data;\n        messages.forEach( msg => this.messageService.add(msg));\n        this.search(false);\n    });\n  }\n\n}\n","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {JobService} from '../../../job.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {Job, StartCondition} from '../../../job-types';\n\n@Component({\n  selector: 'app-job-recursive-schedule',\n  templateUrl: './job-recursive-schedule.component.html',\n  styleUrls: ['./job-recursive-schedule.component.css']\n})\nexport class JobRecursiveScheduleComponent implements OnInit, OnChanges {\n  currentSection = 0; // 0: seconds, 1: minutes, 2: hours, 3: day of month, 4: month, 5: day of week\n  isDocumentationOpen = false;\n  cronArray!: string[];\n  cronArrayAt = ['0', '*', '*', '*', '*', '*'];\n  cronArrayEvery = [0, 0, 0, 0, 0, 0];\n  cronString = '';\n  cronCurrentDate!: Date;\n  cronEndDate!: Date;\n  tz = null;\n  recurrences?: string[];\n  isSimulationModalShown = false;\n\n  @Input() startConditionForm!: FormGroup;\n  @Input() readonly!: boolean;\n  @Input() hasSimulation!: boolean;\n  @ViewChild('cronForm')\n  cronForm!: FormGroup;\n\n  get displaySimulationModal(): string {return this.isSimulationModalShown ? 'block' : 'none'; }\n  constructor(private jobService: JobService,\n              private messageService: MessageService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnChanges(): void {\n    const cronStringCtrl = this.startConditionForm.get('cronString');\n    if (cronStringCtrl) {\n      if (cronStringCtrl.value) {\n        this.cronString = cronStringCtrl.value;\n      } else {\n        this.cronString = '0 * * * * *';\n        cronStringCtrl.setValue(this.cronString);\n      }\n    }\n    if (this.startConditionForm.get('cronCurrentDate')?.value) {\n      // @ts-ignore\n      this.cronCurrentDate = new Date(this.startConditionForm.get('cronCurrentDate')?.value + ' UTC');\n    }\n    if (this.startConditionForm.get('cronEndDate')?.value) {\n      // @ts-ignore\n      this.cronEndDate = new Date(this.startConditionForm.get('cronEndDate')?.value + ' UTC');\n    }\n    this.tz = this.startConditionForm.get('tz')?.value;\n    this._convertCronString2Array();\n  }\n\n  _convertCronString2Array(): void {\n    this.cronArray = this.cronString.split(` `);\n    for (let i = 0; i < 6; i++) {\n      const sectionArray = this.cronArray[i].split(`/`);\n      this.cronArrayAt[i] = sectionArray[0];\n      this.cronArrayEvery[i] = +sectionArray[1] || 0;\n    }\n  }\n\n  onOpenSection(section: number): void {\n    if ( !this.cronForm.valid ) {\n      return;\n    }\n    this.currentSection = section;\n  }\n\n  onOpenDocumentation(): void {\n    this.isDocumentationOpen = !this.isDocumentationOpen;\n  }\n\n  copyCronString(inputElement: HTMLInputElement): void {\n    inputElement.select();\n    document.execCommand('copy');\n    inputElement.setSelectionRange(0, 0);\n  }\n\n  pasteCronString(): void {\n    navigator.clipboard.readText()\n      .then(text => {\n        this.cronString = text;\n        this._convertCronString2Array();\n      });\n  }\n\n  simulate(): void {\n    const startCondition = new StartCondition();\n    startCondition.cronString = this.cronString;\n    startCondition.cronCurrentDate = this.startConditionForm.get('cronCurrentDate')?.value;\n    startCondition.cronEndDate = this.startConditionForm.get('cronEndDate')?.value;\n    startCondition.tz = this.startConditionForm.get('tz')?.value;\n    this.jobService.simulateRecurrences(startCondition).subscribe( data => {\n      if (data instanceof Message) {\n        this.messageService.add(data);\n      } else {\n        this.recurrences = data as string[];\n        this.isSimulationModalShown = true;\n      }\n    });\n  }\n\n  close(): void {\n    this.isSimulationModalShown = false;\n  }\n\n  toLocaleString(dateStr: string | undefined): string {\n    return this.jobService.toLocaleString(dateStr);\n  }\n\n  onKeyup(section: number): void {\n    this.cronArray[section] = this.cronArrayEvery[section] ?\n      `${this.cronArrayAt[section]}/${this.cronArrayEvery[section]}` : this.cronArrayAt[section];\n    this.cronString = this.cronArray.join(` `);\n  }\n\n  onKeydown(e: any): boolean {\n    return e.keyCode !== 32;\n  }\n\n  onChangeCurrentDate(newDate: Date | null): void {\n    const mySQLDateStr = newDate ? this._convert2MySQLDateTime(newDate) : null;\n    this.startConditionForm.get('cronCurrentDate')?.setValue(mySQLDateStr);\n    this.startConditionForm.get('cronCurrentDate')?.markAsDirty();\n  }\n\n  onChangeEndDate(newDate: Date | null): void {\n    const mySQLDateStr = newDate ? this._convert2MySQLDateTime(newDate) : null;\n    this.startConditionForm.get('cronEndDate')?.setValue(mySQLDateStr);\n    this.startConditionForm.get('cronEndDate')?.markAsDirty();\n  }\n\n  _convert2MySQLDateTime(date: Date): string {\n    return date.toISOString().slice(0, 19).replace('T', ' ');\n  }\n\n  updateMainForm(): void {\n    if (!this.cronForm.dirty || this.cronForm.pristine) { return; }\n\n    if (this.cronForm.invalid) {\n      this.startConditionForm.setErrors({message: 'Errors in start condition'});\n      return;\n    }\n\n    const cronStringCtrl = this.startConditionForm.get('cronString');\n    const tzCtrl = this.startConditionForm.get('tz');\n    if (cronStringCtrl && this.cronString !== this.startConditionForm.get('cronString')?.value) {\n      cronStringCtrl.setValue(this.cronString);\n      cronStringCtrl.markAsDirty();\n    }\n    if (tzCtrl && this.tz !== this.startConditionForm.get('tz')?.value) {\n      tzCtrl.setValue(this.tz);\n      tzCtrl.markAsDirty();\n    }\n  }\n}\n","<div *ngIf=\"hasSimulation\" class=\"row\">\n  <div class=\"input-group col-11\">\n    <input name=\"cronString\" type=\"text\" class=\"form-control form-control-sm\" readonly #cronStringInput\n           [(ngModel)]=\"cronString\">\n    <div class=\"input-group-append\">\n      <button class=\"btn btn-sm btn-outline-secondary\" title=\"copy to clipboard\" type=\"button\"\n              (click)=\"copyCronString(cronStringInput)\">Copy</button>\n      <button class=\"btn btn-sm btn-outline-secondary\" title=\"paste from clipboard\" type=\"button\"\n              (click)=\"pasteCronString()\">Paste</button>\n    </div>\n  </div>\n  <div class=\"col-1\">\n    <button class=\"btn btn-sm btn-outline-info\" title=\"Simulate\" type=\"button\"\n            (click)=\"simulate()\">Simulate</button>\n  </div>\n</div>\n<div *ngIf=\"!hasSimulation\" class=\"input-group\">\n  <input name=\"cronString\" type=\"text\" class=\"form-control form-control-sm\" readonly #cronStringInput\n         [(ngModel)]=\"cronString\">\n  <div class=\"input-group-append\">\n    <button class=\"btn btn-sm btn-outline-secondary\" title=\"copy to clipboard\" type=\"button\"\n            (click)=\"copyCronString(cronStringInput)\">Copy</button>\n    <button class=\"btn btn-sm btn-outline-secondary\" title=\"paste from clipboard\" type=\"button\"\n            (click)=\"pasteCronString()\">Paste</button>\n  </div>\n</div>\n\n<div class=\"mt-2\">\n  <button type=\"button\" class=\"btn mt-2\" (click)=\"onOpenSection(0)\"\n          [ngClass]=\"{'btn-outline-primary': currentSection !== 0, 'btn-primary': currentSection === 0}\">\n    Seconds\n  </button>\n  <button type=\"button\" class=\"btn ml-2 mt-2\" (click)=\"onOpenSection(1)\"\n          [ngClass]=\"{'btn-outline-primary': currentSection !== 1, 'btn-primary': currentSection === 1}\">\n    Minutes\n  </button>\n  <button type=\"button\" class=\"btn ml-2 mt-2\" (click)=\"onOpenSection(2)\"\n          [ngClass]=\"{'btn-outline-primary': currentSection !== 2, 'btn-primary': currentSection === 2}\">\n    Hours\n  </button>\n  <button type=\"button\" class=\"btn ml-2 mt-2\" (click)=\"onOpenSection(3)\"\n          [ngClass]=\"{'btn-outline-primary': currentSection !== 3, 'btn-primary': currentSection === 3}\">\n    Day of Month\n  </button>\n  <button type=\"button\" class=\"btn ml-2 mt-2\" (click)=\"onOpenSection(4)\"\n          [ngClass]=\"{'btn-outline-primary': currentSection !== 4, 'btn-primary': currentSection === 4}\">\n    Month\n  </button>\n  <button type=\"button\" class=\"btn ml-2 mt-2\" (click)=\"onOpenSection(5)\"\n          [ngClass]=\"{'btn-outline-primary': currentSection !== 5, 'btn-primary': currentSection === 5}\">\n    Day of Week\n  </button>\n</div>\n\n<form #cronForm=\"ngForm\">\n  <div class=\"mt-2\" [ngSwitch]=\"currentSection\">\n    <div *ngSwitchCase=\"0\" class=\"card card-body\">\n      <div class=\"form-group row\">\n        <label for=\"seconds\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">At:</label>\n        <div class=\"col-md-9 col-xl-4\">\n          <input id=\"seconds\" name=\"seconds\" type=\"text\" class=\"form-control form-control-sm\"\n                 required pattern=\"^\\*$|^((\\d+)|(\\d+-\\d+))((,\\d+)|(,\\d+-\\d+))*$\"\n                 [(ngModel)]=\"cronArrayAt[0]\" #seconds=\"ngModel\" [readOnly]=\"readonly\"\n                 (keyup)=\"onKeyup(0)\" (keydown)=\"onKeydown($event)\"\n                 placeholder=\"0,1,2,... or 1-59 or *\">\n        </div>\n        <div *ngIf=\"seconds.invalid && (seconds.dirty || seconds.touched)\"\n             class=\"col-xl-6\">\n          <div class=\"ng-invalid dk-invalid-feedback\">\n            {{seconds.errors | json}}\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"everySecond\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">Every(/):</label>\n        <div class=\"col-6 col-md-4 col-xl-2\">\n          <input id=\"everySecond\" name=\"everySecond\" type=\"number\" class=\"form-control form-control-sm\"\n                 [readOnly]=\"readonly\" [(ngModel)]=\"cronArrayEvery[0]\" (keyup)=\"onKeyup(0)\">\n        </div>\n        <label for=\"everySecond\" class=\"col-6 col-md-5 col-xl-2 col-form-label form-control-sm\">seconds</label>\n        <div class=\"col-md-6 col-xl-1\"></div>\n        <button class=\"col-md-4 col-xl-2 btn btn-info btn-sm mt-2 mx-3\" type=\"button\" (click)=\"onOpenDocumentation()\">\n          Help(?)\n        </button>\n      </div>\n      <div id=\"secondsDoc\" class=\"collapse\" [ngClass]=\"{'show': isDocumentationOpen}\">\n        <table class=\"table table-striped tips-table\" style=\"margin-bottom:0px;\">\n          <tbody>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">0-59</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">allowed values; 0 is the top of the minute</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">*</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">first-last (every second)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">,</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a list of seconds; ie. 0,30 would be the 0 AND 30th seconds</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">-</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a range of seconds; ie. 0-5 would be seconds 0, 1, 2, 3, 4, and 5 (you can also specify a list of ranges 0-5,30-35)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">/</span></td>\n            <td style=\"width:76%;\">\n              <span class=\"tips-cell-desc\">\n              step values will skip the specified number within a range; ie */5 is every 5 seconds, and 0-30/2 is every 2 seconds between 0 and 30 seconds\n              </span>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div *ngSwitchCase=\"1\" class=\"card card-body\">\n      <div class=\"form-group row\">\n        <label for=\"minutes\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">At:</label>\n        <div class=\"col-md-9 col-xl-4\">\n          <input id=\"minutes\" name=\"minutes\" type=\"text\" class=\"form-control form-control-sm\"\n                 required pattern=\"^\\*$|^((\\d+)|(\\d+-\\d+))((,\\d+)|(,\\d+-\\d+))*$\"\n                 [(ngModel)]=\"cronArrayAt[1]\" #minutes=\"ngModel\" [readOnly]=\"readonly\"\n                 (keyup)=\"onKeyup(1)\" (keydown)=\"onKeydown($event)\"\n                 placeholder=\"0,1,2,... or 1-20 or *\">\n        </div>\n        <div *ngIf=\"minutes.invalid && (minutes.dirty || minutes.touched)\"\n             class=\"col-xl-6\">\n          <div class=\"ng-invalid dk-invalid-feedback\">\n            {{minutes.errors | json}}\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"everyMinute\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">Every(/):</label>\n        <div class=\"col-6 col-md-4 col-xl-2\">\n          <input id=\"everyMinute\" name=\"everyMinute\" type=\"number\" class=\"form-control form-control-sm\"\n                 [readOnly]=\"readonly\" [(ngModel)]=\"cronArrayEvery[1]\" (keyup)=\"onKeyup(1)\">\n        </div>\n        <label for=\"everySecond\" class=\"col-6 col-md-5 col-xl-2 col-form-label form-control-sm\">minutes</label>\n        <div class=\"col-md-6 col-xl-1\"></div>\n        <button class=\"col-md-4 col-xl-2 btn btn-info btn-sm mt-2 mx-3\" type=\"button\" (click)=\"onOpenDocumentation()\">\n          Help(?)\n        </button>\n      </div>\n      <div id=\"minutesDoc\" class=\"collapse\" [ngClass]=\"{'show': isDocumentationOpen}\">\n        <table class=\"table table-striped tips-table\" style=\"margin-bottom:0px;\">\n          <tbody>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">0-59</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">allowed values; 0 is the top of the hour</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">*</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">first-last (every minute)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">,</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a list of minutes; ie. 0,30 would be the 0 AND 30th minutes</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">-</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a range of minutes; ie. 0-5 would be minutes 0, 1, 2, 3, 4, and 5 (you can also specify a list of ranges 0-5,30-35)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">/</span></td>\n            <td style=\"width:76%;\">\n              <span class=\"tips-cell-desc\">\n              step values will skip the specified number within a range; ie */5 is every 5 minutes, and 0-30/2 is every 2 minutes between 0 and 30 minutes\n              </span>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div *ngSwitchCase=\"2\" class=\"card card-body\">\n      <div class=\"form-group row\">\n        <label for=\"hours\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">At:</label>\n        <div class=\"col-md-9 col-xl-4\">\n          <input id=\"hours\" name=\"hours\" type=\"text\" class=\"form-control form-control-sm\"\n                 required pattern=\"^\\*$|^((\\d+)|(\\d+-\\d+))((,\\d+)|(,\\d+-\\d+))*$\"\n                 [(ngModel)]=\"cronArrayAt[2]\" #hours=\"ngModel\" [readOnly]=\"readonly\"\n                 (keyup)=\"onKeyup(2)\" (keydown)=\"onKeydown($event)\"\n                 placeholder=\"0,1,2,... or 0-23 or *\">\n        </div>\n        <div *ngIf=\"hours.invalid && (hours.dirty || hours.touched)\"\n             class=\"col-xl-6\">\n          <div class=\"ng-invalid dk-invalid-feedback\">\n            {{hours.errors | json}}\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"everyMinute\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">Every(/):</label>\n        <div class=\"col-6 col-md-4 col-xl-2\">\n          <input id=\"everyHour\" name=\"everyHour\" type=\"number\" class=\"form-control form-control-sm\"\n                 [readOnly]=\"readonly\" [(ngModel)]=\"cronArrayEvery[2]\" (keyup)=\"onKeyup(2)\">\n        </div>\n        <label for=\"everyHour\" class=\"col-6 col-md-5 col-xl-2 col-form-label form-control-sm\">hours</label>\n        <div class=\"col-md-6 col-xl-1\"></div>\n        <button class=\"col-md-4 col-xl-2 btn btn-info btn-sm mt-2 mx-3\" type=\"button\" (click)=\"onOpenDocumentation()\">\n          Help(?)\n        </button>\n      </div>\n      <div id=\"hoursDoc\" class=\"collapse\" [ngClass]=\"{'show': isDocumentationOpen}\">\n\n        <table class=\"table table-striped tips-table\" style=\"margin-bottom:0px;\">\n          <tbody>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">0-23</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">allowed values; 0 is midnight</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">*</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">first-last (every hour)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">,</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a list of hours; ie. 0,12 would be the 0 AND 12th hours</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">-</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a range of hours; ie. 19-23 would be hours 19, 20, 21, 22, and 23 (you can also specify a list of ranges 0-5,12-16)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">/</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">step values will skip the specified number within a range; ie */4 is every 4 hours, and 0-20/2 is every 2 hours between 0 and the 20th hour</span></td>\n          </tr>\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div *ngSwitchCase=\"3\" class=\"card card-body\">\n      <div class=\"form-group row\">\n        <label for=\"dayOfMonth\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">At:</label>\n        <div class=\"col-md-9 col-xl-4\">\n          <input id=\"dayOfMonth\" name=\"dayOfMonth\" type=\"text\" class=\"form-control form-control-sm\"\n                 required pattern=\"^\\*$|^((\\d+)|(\\d+-\\d+))((,\\d+)|(,\\d+-\\d+))*$\"\n                 [(ngModel)]=\"cronArrayAt[3]\" #dayOfMonth=\"ngModel\" [readOnly]=\"readonly\"\n                 (keyup)=\"onKeyup(3)\" (keydown)=\"onKeydown($event)\"\n                 placeholder=\"1,2,3,... or 1-31 or *\">\n        </div>\n        <div *ngIf=\"dayOfMonth.invalid && (dayOfMonth.dirty || dayOfMonth.touched)\"\n             class=\"col-xl-6\">\n          <div class=\"ng-invalid dk-invalid-feedback\">\n            {{dayOfMonth.errors | json}}\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"everyDay\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">Every(/):</label>\n        <div class=\"col-6 col-md-4 col-xl-2\">\n          <input id=\"everyDay\" name=\"everyDay\" type=\"number\" class=\"form-control form-control-sm\"\n                 [readOnly]=\"readonly\" [(ngModel)]=\"cronArrayEvery[3]\" (keyup)=\"onKeyup(3)\">\n        </div>\n        <label for=\"everyDay\" class=\"col-6 col-md-5 col-xl-2 col-form-label form-control-sm\">days</label>\n        <div class=\"col-md-6 col-xl-1\"></div>\n        <button class=\"col-md-4 col-xl-2 btn btn-info btn-sm mt-2 mx-3\" type=\"button\" (click)=\"onOpenDocumentation()\">\n          Help(?)\n        </button>\n      </div>\n      <div id=\"dayOfMonthDoc\" class=\"collapse\" [ngClass]=\"{'show': isDocumentationOpen}\">\n\n        <table class=\"table table-striped tips-table\" style=\"margin-bottom:0px;\">\n          <tbody>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">1-31</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">allowed values</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">*</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">first-last (every day of the month)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">,</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a list of days; ie. 1,15 would be the 1st AND 15th day of the month</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">-</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a range of days; ie. 1-5 would be days 1, 2, 3, 4, and 5 (you can also specify a list of ranges 1-5,14-30)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">/</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">step values will skip the specified number within a range; ie */4 is every 4 days, and 1-20/2 is every 2 days between 1st and the 20th day of the month</span></td>\n          </tr>\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div *ngSwitchCase=\"4\" class=\"card card-body\">\n      <div class=\"form-group row\">\n        <label for=\"month\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">At:</label>\n        <div class=\"col-md-9 col-xl-4\">\n          <input id=\"month\" name=\"month\" type=\"text\" class=\"form-control form-control-sm\"\n                 required pattern=\"^\\*$|^((\\d+)|(\\d+-\\d+))((,\\d+)|(,\\d+-\\d+))*$\"\n                 [(ngModel)]=\"cronArrayAt[4]\" #month=\"ngModel\" [readOnly]=\"readonly\"\n                 (keyup)=\"onKeyup(4)\" (keydown)=\"onKeydown($event)\"\n                 placeholder=\"1,2,3,... or 1-12 or *\">\n        </div>\n        <div *ngIf=\"month.invalid && (month.dirty || month.touched)\"\n             class=\"col-xl-6\">\n          <div class=\"ng-invalid dk-invalid-feedback\">\n            {{month.errors | json}}\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"everyMonth\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">Every(/):</label>\n        <div class=\"col-6 col-md-4 col-xl-2\">\n          <input id=\"everyMonth\" name=\"everyMonth\" type=\"number\" class=\"form-control form-control-sm\"\n                 [readOnly]=\"readonly\" [(ngModel)]=\"cronArrayEvery[4]\" (keyup)=\"onKeyup(4)\">\n        </div>\n        <label for=\"everyMonth\" class=\"col-6 col-md-5 col-xl-2 col-form-label form-control-sm\">month</label>\n        <div class=\"col-md-6 col-xl-1\"></div>\n        <button class=\"col-md-4 col-xl-2 btn btn-info btn-sm mt-2 mx-3\" type=\"button\" (click)=\"onOpenDocumentation()\">\n          Help(?)\n        </button>\n      </div>\n      <div id=\"monthDoc\" class=\"collapse\" [ngClass]=\"{'show': isDocumentationOpen}\">\n\n        <table class=\"table table-striped tips-table\" style=\"margin-bottom:0px;\">\n          <tbody>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">1-12</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">allowed values</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">JAN-DEC</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">allowed values</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">*</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">first-last (every month)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">,</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a list of months; ie. 1,6 would be the jan AND jun</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">-</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a range of months; ie. 1-3 would be jan, feb, and mar (you can also specify a list of ranges 1-4,8-12)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">/</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">step values will skip the specified number within a range; ie */4 is every 4 months, and 1-8/2 is every 2 months between jan and aug</span></td>\n          </tr>\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div *ngSwitchCase=\"5\" class=\"card card-body\">\n      <div class=\"form-group row\">\n        <label for=\"dayOfWeek\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">At:</label>\n        <div class=\"col-md-9 col-xl-4\">\n          <input id=\"dayOfWeek\" name=\"dayOfWeek\" type=\"text\" class=\"form-control form-control-sm\"\n                 required pattern=\"^\\*$|^((\\d+)|(\\d+-\\d+))((,\\d+)|(,\\d+-\\d+))*$\"\n                 [(ngModel)]=\"cronArrayAt[5]\" #dayOfWeek=\"ngModel\" [readOnly]=\"readonly\"\n                 (keyup)=\"onKeyup(5)\" (keydown)=\"onKeydown($event)\"\n                 placeholder=\"0,1,2,... or 0-6 or *\">\n        </div>\n        <div *ngIf=\"dayOfWeek.invalid && (dayOfWeek.dirty || dayOfWeek.touched)\"\n             class=\"col-xl-6\">\n          <div class=\"ng-invalid dk-invalid-feedback\">\n            {{dayOfWeek.errors | json}}\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"everyDayOfWeek\" class=\"col-md-3 col-xl-2 col-form-label form-control-sm\">Every(/):</label>\n        <div class=\"col-6 col-md-4 col-xl-2\">\n          <input id=\"everyDayOfWeek\" name=\"everyDayOfWeek\" type=\"number\" class=\"form-control form-control-sm\"\n                 [readOnly]=\"readonly\" [(ngModel)]=\"cronArrayEvery[5]\" (keyup)=\"onKeyup(5)\">\n        </div>\n        <label for=\"everyDayOfWeek\" class=\"col-6 col-md-5 col-xl-2 col-form-label form-control-sm\">days</label>\n        <div class=\"col-md-6 col-xl-1\"></div>\n        <button class=\"col-md-4 col-xl-2 btn btn-info btn-sm mt-2 mx-3\" type=\"button\" (click)=\"onOpenDocumentation()\">\n          Help(?)\n        </button>\n      </div>\n      <div id=\"everyDayOfWeekDoc\" class=\"collapse\" [ngClass]=\"{'show': isDocumentationOpen}\">\n\n        <table class=\"table table-striped tips-table\" style=\"margin-bottom:0px;\">\n          <tbody>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">0-6</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">allowed values; 0=Sunday, 1=Monday, 2=Tuesday, 3=Wednesday, 4=Thursday, 5=Friday, 6=Saturday</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">SUN-SAT</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">allowed values</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">*</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">first-last (every day of the week)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">,</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a list of days; ie. 1,5 would be the mon AND fri</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">-</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">a range of days; ie. 1-5 would be mon, tue, wed, thu, and fri (you can also specify a list of ranges 0-2,4-6)</span></td>\n          </tr>\n\n          <tr>\n            <td style=\"width:24%;\"><span class=\"tips-cell-title\">/</span></td>\n            <td style=\"width:76%;\"><span class=\"tips-cell-desc\">step values will skip the specified number within a range; ie */4 is every 4 days, and 1-5/2 is every 2 days between mon and fri</span></td>\n          </tr>\n\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  <div class=\"mt-2\">\n    <div class=\"card card-body\">\n      <div class=\"row\">\n        <div class=\"form-group row col-xl-6\">\n          <label for=\"startFrom\" class=\"col-md-3 col-form-label form-control-sm\">Start:</label>\n          <div class=\"col-md-9\">\n            <input id=\"startFrom\" name=\"startFrom\" type=\"datetime-local\" class=\"form-control form-control-sm\"\n                   [readOnly]=\"readonly\" [(date)]=\"cronCurrentDate\" (dateChange)=\"onChangeCurrentDate($event)\">\n          </div>\n        </div>\n        <div class=\"form-group row col-xl-6\">\n          <label for=\"endAt\" class=\"col-md-3 col-form-label form-control-sm\">End:</label>\n          <div class=\"col-md-9\">\n            <input id=\"endAt\" name=\"endAt\" type=\"datetime-local\" class=\"form-control form-control-sm\"\n                   [readOnly]=\"readonly\" [(date)]=\"cronEndDate\" (dateChange)=\"onChangeEndDate($event)\">\n          </div>\n        </div>\n<!--        <div class=\"form-group row col-lg-6\">-->\n<!--          <label for=\"tz\" class=\"col-md-3 col-form-label\">Timezone:</label>-->\n<!--          <div class=\"col-md-6\">-->\n<!--            <input id=\"tz\" name=\"tz\" type=\"text\" class=\"form-control\" [(ngModel)]=\"tz\" [readOnly]=\"readonly\">-->\n<!--          </div>-->\n<!--        </div>-->\n      </div>\n    </div>\n  </div>\n</form>\n\n<div class=\"modal fade\" id=\"simulatedRecurrences\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isSimulationModalShown}\"\n     [ngStyle]=\"{'display': displaySimulationModal}\">\n  <div class=\"modal-dialog modal-sm\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addAuthObjectTitle\">Simulated Recurrences</h5>\n        <button type=\"button\" class=\"close\" (click)=\"close()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <ul class=\"list-group list-group-flush dk-modal-simulate\">\n          <li class=\"list-group-item\" *ngFor=\"let scheduleDateTime of recurrences; index as i\">\n            {{i < 50 ? toLocaleString(scheduleDateTime) : 'There is more...'}}\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"close()\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {JorAngularModule} from 'jor-angular';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { JobListComponent } from './job-list/job-list.component';\nimport { JobDetailComponent } from './job-detail/job-detail.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouteReuseStrategy, RouterModule, Routes} from '@angular/router';\nimport {CustomReuseStrategy} from './custom.reuse.strategy';\nimport {MessageModule} from 'ui-message-angular';\nimport { JobStepsComponent } from './job-detail/job-steps/job-steps.component';\nimport { JobStartConditionComponent } from './job-detail/job-start-condition/job-start-condition.component';\nimport { JobOccurrencesComponent } from './job-detail/job-occurrences/job-occurrences.component';\nimport { AdminComponent } from './job-detail/admin/admin.component';\nimport { JobParametersComponent } from './job-detail/job-parameters/job-parameters.component';\nimport { JobRecursiveScheduleComponent } from './job-detail/job-start-condition/job-recursive-schedule/job-recursive-schedule.component';\nimport { DateDirective } from './job-detail/date.directive';\nimport { JobOccurrenceDetailComponent } from './job-detail/job-occurrences/job-occurrence-detail/job-occurrence-detail.component';\nimport {WorkProtectionGuard} from './work-protection.guard';\n\nconst appRoutes: Routes = [\n  // {\n  //   path: 'logon', component: LogonComponent,\n  //   data: {\n  //     title: 'Logon Portal (DH001/Dark1234)', userLabel: 'User ID', pwdLabel: 'Password', btnLabel: 'Sign In',\n  //     redirectPath: environment.redirectPath, redirectUrl: environment.redirectUrl, host: environment.originalHost\n  //   }\n  // },\n  { path: 'jobs', component: JobListComponent },\n  { path: 'jobs/:name', component: JobDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: '**', redirectTo: 'jobs', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JobListComponent,\n    JobDetailComponent,\n    JobStepsComponent,\n    JobStartConditionComponent,\n    JobOccurrencesComponent,\n    AdminComponent,\n    JobParametersComponent,\n    JobRecursiveScheduleComponent,\n    DateDirective,\n    JobOccurrenceDetailComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    MessageModule,\n    JorAngularModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    {provide: RouteReuseStrategy, useClass: CustomReuseStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Message} from 'ui-message-angular';\n\nexport class Job {\n  name!: string;\n  description?: Text;\n  status!: number;\n  mode!: number;\n  identity?: Identity;\n  steps!: Step[];\n  startCondition!: StartCondition;\n  outputSetting?: OutputSetting;\n  finishedOccurrences?: number;\n  failedOccurrences?: number;\n  canceledOccurrences?: number;\n  createdBy?: string;\n  createTime?: string;\n  lastChangedBy?: string;\n  lastChangeTime?: string;\n}\n\nexport class JobOccurrence {\n  uuid!: string;\n  jobName!: string;\n  status!: number;\n  identity?: Identity;\n  steps!: Step[];\n  startCondition!: StartCondition;\n  outputSetting?: OutputSetting;\n  scheduledDateTime!: string;\n  actualStartDateTime?: string;\n  endDateTime?: string;\n  applicationLog?: ApplicationLog[];\n}\n\nexport class Identity {\n  id!: string;\n}\n\nexport class Step {\n  program!: string;\n  parameters?: ParameterValueParis;\n  status?: number;\n  output?: any;\n}\n\nexport class ParameterValueParis {\n  [key: string]: any;\n}\n\nexport class StartCondition {\n  mode!: number;\n  specificTime?: string | null;\n  cronString?: string | null;\n  cronCurrentDate?: string | null;\n  cronEndDate?: string | null;\n  tz?: string | null;\n}\n\nexport class OutputSetting {\n  console2ApplicationLog?: boolean;\n}\n\nexport class ApplicationLog {\n  time!: string;\n  message!: Message;\n}\n\nexport class JobProgram {\n  name!: string;\n  className!: string;\n  description?: Text;\n  parameterDefinitions?: ParameterDefinitions;\n}\n\nexport class ParameterDefinitions {\n  [key: string]: ParameterDefinition;\n}\n\nexport class ParameterDefinition {\n  text?: Text;\n  displayIn?: string;\n  parameters!: Parameters;\n}\n\nexport class Parameter {\n  type?: number;\n  domain?: Domain;\n  pattern?: string;\n  text?: Text;\n  defaultValue?: string;\n  displayAs?: string;\n  dataElement?: string;\n  mandatory = false;\n  readOnly: boolean | string = false;\n  hidden: boolean | string = false;\n  columnSpan?: number;\n}\n\nexport class Parameters {\n  [key: string]: Parameter;\n}\n\nexport class Text {\n  DEFAULT!: string;\n  [key: string]: string;\n}\n\nexport class Domain {\n  [key: string]: Text;\n}\n","<div *ngIf=\"jobOccurrence\">\n  <div class=\"row mb-4\">\n    <div class=\"col-sm-4 col-lg-3\">\n      <h3 class=\"text-center mt-2\" [ngClass]=\"occStatusColors[jobOccurrence.status]\">{{occStatuses[jobOccurrence.status]}}</h3>\n    </div>\n    <div class=\"col-sm-8 col-lg-6\">\n      <div class=\"row\">\n        <small class=\"col-md-6\">Scheduled Date:</small>\n        <small class=\"col-md-6\">{{toLocaleString(jobOccurrence.scheduledDateTime)}}</small>\n      </div>\n      <div class=\"row\">\n        <small class=\"col-md-6\">Actual Start Date:</small>\n        <small class=\"col-md-6\">{{toLocaleString(jobOccurrence.actualStartDateTime)}}</small>\n      </div>\n      <div class=\"row\">\n        <small class=\"col-md-6\">End Date:</small>\n        <small class=\"col-md-6\">{{toLocaleString(jobOccurrence.endDateTime)}}</small>\n      </div>\n    </div>\n    <div class=\"col-lg-3 text-center mt-2\">\n      <button type=\"button\" id=\"checkStartCondition\" class=\"btn btn-info btn-sm\"\n              (click)=\"openStartCondition()\">Start Condition</button>\n    </div>\n  </div>\n\n  <div class=\"card mt-2\">\n    <div class=\"card-header\">Steps</div>\n    <div class=\"card-body\">\n      <table class=\"table table-bordered table-sm\">\n        <thead class=\"thead-light\">\n          <tr>\n            <th scope=\"col\" class=\"dk-status\">Status</th>\n            <th scope=\"col\">Program</th>\n            <th scope=\"col\" class=\"dk-icon-para\">Parameters</th>\n            <th scope=\"col\" class=\"dk-icon-output\">Output</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr *ngFor=\"let step of jobOccurrence.steps\">\n            <td class=\"dk-status\" [ngClass]=\"occStatusColors[step.status || 0]\">{{occStatuses[step.status || 0]}}</td>\n            <td>{{step.program}}</td>\n            <td class=\"dk-icon-para\">\n              <button title=\"Parameters\" id=\"parameters\" class=\"btn btn-sm\" type=\"button\"\n                      (click)=\"openParameters(step)\">\n                <span class=\"fas fa-sliders-h\"></span>\n              </button>\n            </td>\n            <td class=\"dk-icon-output\">\n              <button title=\"Output\" id=\"output\" class=\"btn btn-sm\" type=\"button\"\n                      (click)=\"openOutput(step)\" [disabled]=\"!step.output\">\n                <span class=\"fas fa-stream\"></span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div class=\"form-check form-check-inline\">\n        <input class=\"form-check-input\" type=\"checkbox\" id=\"console2AppLog\" disabled\n               [ngModel]=\"jobOccurrence.outputSetting?.console2ApplicationLog\" >\n        <label class=\"form-check-label\" for=\"console2AppLog\">Store console log into application log</label>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"card mt-2\">\n    <div class=\"card-header\">Application Logs</div>\n    <div class=\"card-body\">\n      <table class=\"table table-bordered table-sm\">\n        <thead class=\"thead-light\">\n        <tr>\n          <th scope=\"col\" class=\"dk-time\" >Time</th>\n          <th scope=\"col\" class=\"dk-type\">Type</th>\n          <th scope=\"col\">Message</th>\n          <th scope=\"col\" class=\"dk-icon-detail\">Detail</th>\n        </tr>\n        </thead>\n\n        <tbody>\n        <tr *ngFor=\"let log of jobOccurrence.applicationLog\">\n          <td class=\"dk-time\">{{toLocaleString(log.time)}}</td>\n          <td class=\"dk-type\" [ngClass]=\"messageTypes[log.message.msgType].color\">{{messageTypes[log.message.msgType].text}}</td>\n          <td>{{log.message.msgShortText}}</td>\n          <td class=\"dk-icon-detail\">\n            <button title=\"Detail\" id=\"detail\" class=\"btn btn-sm\" type=\"button\" (click)=\"openLongMessage(log)\">\n              <span class=\"fas fa-info-circle\"></span>\n            </button>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"parametersModal\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isParametersModalShown}\"\n     [ngStyle]=\"{'display': displayParametersModal}\">\n  <div class=\"modal-dialog modal-xl modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"parametersTitle\">Parameters</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeParameters()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body container-fluid dk-scroll-area\">\n        <app-job-parameters [parameterDefinitions]=\"currentParamDefinitions\"\n                            [currentJobStep]=\"currentJobStep\"\n                            [readonly]=true>\n        </app-job-parameters>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"closeParameters()\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"outputModal\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isOutputModalShown}\"\n     [ngStyle]=\"{'display': displayOutputModal}\">\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"outputTitle\">Output</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeOutput()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body container-fluid dk-scroll-area\" >\n        <pre>{{currentOutput | json}}</pre>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"closeOutput()\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"longMessageModal\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isLongMessageShown}\"\n     [ngStyle]=\"{'display': displayLongMessageModal}\">\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"longMessageTitle\">Long Message</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeLongMessage()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body container-fluid dk-scroll-area\" [innerHtml]=\"currentLongMessage\">\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"closeLongMessage()\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"startConditionModal\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isStartConditionShown}\"\n     [ngStyle]=\"{'display': displayStartConditionModal}\">\n  <div class=\"modal-dialog modal-xl modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"startConditionTitle\">Start Condition</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeStartCondition()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div *ngIf=\"reducedMainForm\" class=\"modal-body container-fluid dk-scroll-area\">\n        <app-job-start-condition [mainForm]=\"reducedMainForm\" [readonly]=\"true\">\n        </app-job-start-condition>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"closeStartCondition()\">Close</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ApplicationLog, JobOccurrence, ParameterDefinitions, Step} from '../../../job-types';\nimport {JobService} from '../../../job.service';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-job-occurrence-detail',\n  templateUrl: './job-occurrence-detail.component.html',\n  styleUrls: ['./job-occurrence-detail.component.css']\n})\nexport class JobOccurrenceDetailComponent implements OnInit, OnChanges {\n  @Input() jobOccurrence!: JobOccurrence;\n  occStatuses: string[] = [];\n  occStatusColors: string[] = [];\n  messageTypes: any;\n  uuid: string | null = '';\n  reducedMainForm!: FormGroup;\n  currentParamDefinitions!: ParameterDefinitions;\n  currentJobStep!: FormGroup;\n  currentOutput: any;\n  currentLongMessage: string | undefined;\n  isParametersModalShown = false;\n  isOutputModalShown = false;\n  isLongMessageShown = false;\n  isStartConditionShown = false;\n\n  get displayParametersModal(): string {return this.isParametersModalShown ? 'block' : 'none'; }\n  get displayOutputModal(): string {return this.isOutputModalShown ? 'block' : 'none'; }\n  get displayLongMessageModal(): string {return this.isLongMessageShown ? 'block' : 'none'; }\n  get displayStartConditionModal(): string {return this.isStartConditionShown ? 'block' : 'none'; }\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private jobService: JobService) {\n    this.occStatuses = this.jobService.occStatuses;\n    this.occStatusColors = this.jobService.occStatusColors;\n    this.messageTypes = this.jobService.messageTypes;\n  }\n\n  ngOnChanges(): void {\n    if (!this.jobOccurrence) { return; }\n    this.reducedMainForm = this.fb.group({\n      mode: this.jobOccurrence.startCondition.mode,\n      startCondition: this.fb.group({\n        mode: [ {value: this.jobOccurrence.startCondition.mode, disabled: true} ],\n        specificTime: this.jobOccurrence.startCondition.specificTime,\n        cronString: this.jobOccurrence.startCondition.cronString,\n        cronCurrentDate: this.jobOccurrence.startCondition.cronCurrentDate,\n        cronEndDate: this.jobOccurrence.startCondition.cronEndDate,\n        tz: this.jobOccurrence.startCondition.tz\n      }),\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  openParameters(step: Step): void {\n    this.isParametersModalShown = true;\n    this.jobService.getJobProgramDefinition(step.program)\n      .subscribe(programDefinition => {\n        if (programDefinition && programDefinition.parameterDefinitions) {\n          this.currentParamDefinitions = programDefinition.parameterDefinitions;\n        }\n      });\n    this.currentJobStep = this.fb.group({\n      program: step.program,\n      parameters: step.parameters,\n    });\n  }\n\n  closeParameters(): void {\n    this.isParametersModalShown = false;\n  }\n\n  openOutput(step: Step): void {\n    try {\n      this.currentOutput = JSON.parse(step.output);\n    } catch (e) {\n      this.currentOutput = step.output;\n    }\n    this.isOutputModalShown = true;\n  }\n\n  closeOutput(): void {\n    this.isOutputModalShown = false;\n  }\n\n  openLongMessage(log: ApplicationLog): void {\n    this.currentLongMessage = log.message.msgLongText;\n    this.isLongMessageShown = true;\n  }\n\n  closeLongMessage(): void {\n    this.isLongMessageShown = false;\n  }\n\n  openStartCondition(): void {\n    this.isStartConditionShown = true;\n  }\n\n  closeStartCondition(): void {\n    this.isStartConditionShown = false;\n  }\n\n  toLocaleString(dateStr: string | undefined): string {\n    return this.jobService.toLocaleString(dateStr);\n  }\n}\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {SearchHelp, SearchHelpComponent, SearchHelpMethod} from 'jor-angular';\nimport {JobService} from '../../job.service';\nimport {Observable} from 'rxjs';\nimport {MessageService} from 'ui-message-angular';\nimport {ParameterDefinitions} from '../../job-types';\nimport {JobParametersComponent} from '../job-parameters/job-parameters.component';\n\n@Component({\n  selector: 'app-job-steps',\n  templateUrl: './job-steps.component.html',\n  styleUrls: ['./job-steps.component.css']\n})\nexport class JobStepsComponent implements OnInit {\n  @Input() readonly!: boolean;\n  @Input() mainForm!: FormGroup;\n  jobStepFormArray!: FormArray;\n  jobOutputSetting!: FormGroup;\n  currentJobStep!: FormGroup;\n  currentParamDefinitions?: ParameterDefinitions;\n  currentJobProgramDesc?: string;\n  isAddProgramModalShown = false;\n  isNewProgram = true;\n  programSearchHelp!: SearchHelp;\n\n  @ViewChild(JobParametersComponent, { static: false })\n  private jobParametersComponent!: JobParametersComponent;\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent!: SearchHelpComponent;\n\n  get displayAddProgramModal(): string {return this.isAddProgramModalShown ? 'block' : 'none'; }\n  constructor(private fb: FormBuilder,\n              private messageService: MessageService,\n              private jobService: JobService) { }\n\n  ngOnInit(): void {\n    this.jobStepFormArray = this.mainForm.get('steps') as FormArray;\n    this.jobOutputSetting = this.mainForm.get('outputSetting') as FormGroup;\n  }\n\n  castFormGroup(ctrl: AbstractControl): FormGroup {\n    return ctrl as FormGroup;\n  }\n\n  add(): void {\n    this.currentJobStep = this.fb.group({\n      program: '',\n      parameters: ''\n    });\n    this.onChangeProgram();\n    this.isAddProgramModalShown = true;\n    this.isNewProgram = true;\n  }\n\n  onSearchHelp(): void {\n    if (!this.programSearchHelp) {\n      this.programSearchHelp = new SearchHelp();\n      this.programSearchHelp.OBJECT_NAME = 'Data Domain';\n      // tslint:disable-next-line:only-arrow-functions\n      this.programSearchHelp.METHOD = function(jobService: JobService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => jobService.searchJobPrograms(searchTerm);\n      }(this.jobService);\n      this.programSearchHelp.BEHAVIOUR = 'A';\n      this.programSearchHelp.MULTI = false;\n      this.programSearchHelp.FUZZY_SEARCH = true;\n      this.programSearchHelp.FIELDS = [\n        // tslint:disable-next-line:max-line-length\n        {FIELD_NAME: 'name', LIST_HEADER_TEXT: 'Program', IE_FIELD_NAME: 'program', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'description', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.programSearchHelp.READ_ONLY = this.readonly;\n    }\n    // tslint:disable-next-line:only-arrow-functions typedef\n    const afterExportFn = function(context: any) {\n      return () => context.onChangeProgram();\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.programSearchHelp, this.currentJobStep, afterExportFn);\n  }\n\n  onChangeProgram(): void {\n    const programName = this.currentJobStep.get('program')?.value;\n    if (!programName) {\n      this.currentParamDefinitions = {};\n      this.currentJobProgramDesc = '';\n      return;\n    }\n    this.jobService.getJobProgramDefinition(programName)\n      .subscribe(programDefinition => {\n        if (!programDefinition) {\n          this.currentParamDefinitions = {};\n          this.currentJobProgramDesc = '';\n          return;\n        }\n        this.currentJobProgramDesc = programDefinition.description?.DEFAULT;\n        this.currentParamDefinitions = programDefinition.parameterDefinitions;\n      });\n  }\n\n  close(): void {\n    this.currentParamDefinitions = {};\n    this.currentJobProgramDesc = '';\n    this.isAddProgramModalShown = false;\n  }\n\n  confirm(): void {\n    if (!this.currentJobStep.get('program')?.value) {\n      this.messageService.reportMessage('JOB', 'INVALID_OR_MISSING_JOB_PROGRAM', 'E');\n      return;\n    }\n    if (!this.jobParametersComponent.generateParamValues()) { return; }\n    if (this.isNewProgram) {\n      this.jobStepFormArray.push(this.currentJobStep);\n    }\n    this.close();\n  }\n\n  delete(index: number): void {\n    this.jobStepFormArray.removeAt(index);\n    this.jobStepFormArray.markAsDirty();\n  }\n\n  up(index: number): void {\n    if (index > 0) {\n      const jobSteps = this.jobStepFormArray.value;\n      const newJobSteps = this._swap(jobSteps, index - 1, index);\n      this.jobStepFormArray.setValue(newJobSteps);\n      this.jobStepFormArray.markAsDirty();\n    }\n  }\n\n  down(index: number): void {\n    const jobSteps = this.jobStepFormArray.value;\n    if (index < jobSteps.length - 1) {\n      const newJobSteps = this._swap(jobSteps, index, index + 1);\n      this.jobStepFormArray.setValue(newJobSteps);\n      this.jobStepFormArray.markAsDirty();\n    }\n  }\n\n  _swap(arr: any[], index1: number, index2: number): any[] {\n    arr = [...arr];\n    const temp = arr[index1];\n    arr[index1] = arr[index2];\n    arr[index2] = temp;\n    return arr;\n  }\n\n  adjust(index: number): void {\n    this.currentJobStep = this.jobStepFormArray.at(index) as FormGroup;\n    this.onChangeProgram();\n    this.isAddProgramModalShown = true;\n    this.isNewProgram = false;\n  }\n}\n","<div class=\"dk-job-step-main mx-3\">\n  <div class=\"btn-toolbar justify-content-end\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"add()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-plus\"></span> Add</button>\n  </div>\n  <table *ngIf=\"jobStepFormArray\" class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n      <tr>\n        <th class=\"dk-name\">Program</th>\n        <th class=\"dk-actions\">Action</th>\n      </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let stepForm of jobStepFormArray.controls; let i = index\">\n      <td class=\"dk-program\" [formGroup]=\"castFormGroup(stepForm)\" >\n        <input type=\"text\" formControlName=\"program\" readonly class=\"form-control form-control-sm\">\n      </td>\n      <td class=\"dk-actions\">\n        <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"delete(i)\" title=\"Delete\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n        <button class=\"btn btn-sm\" type=\"button\" id=\"up\" [disabled]=\"readonly || i === 0\" (click)=\"up(i)\" title=\"Up\">\n          <span class=\"fas fa-chevron-up\"></span>\n        </button>\n        <button class=\"btn btn-sm\" type=\"button\" id=\"down\" [disabled]=\"readonly || i === jobStepFormArray.length-1\" (click)=\"down(i)\" title=\"Down\">\n          <span class=\"fas fa-chevron-down\"></span>\n        </button>\n        <button class=\"btn btn-sm\" type=\"button\" id=\"adjust\" (click)=\"adjust(i)\" title=\"Adjust\">\n          <span class=\"fas fa-sliders-h\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"form-check form-check-inline\" [formGroup]=\"jobOutputSetting\">\n    <input class=\"form-check-input\" type=\"checkbox\" id=\"console2AppLog\" formControlName=\"console2ApplicationLog\" >\n    <label class=\"form-check-label\" for=\"console2AppLog\">Store console log into application log</label>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"addJobProgram\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isAddProgramModalShown}\"\n     [ngStyle]=\"{'display': displayAddProgramModal}\">\n  <div class=\"modal-dialog modal-xl\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addAuthObjectTitle\">Add Program</h5>\n        <button type=\"button\" class=\"close\" (click)=\"close()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <dk-message></dk-message>\n        <div class=\"row ml-1\">\n          <div *ngIf=\"currentJobStep\" class=\"input-group col-6\" [formGroup]=\"currentJobStep\">\n            <label for=\"newProgram\" class=\"col-form-label form-control-sm\">Program:</label>\n            <input id=\"newProgram\" class=\"form-control form-control-sm\" type=\"text\" formControlName=\"program\"\n                   [readOnly]=\"!isNewProgram\" (change)=\"onChangeProgram()\">\n            <div class=\"input-group-append\" [style]=\"{display: 'block'}\">\n              <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchPermission\"\n                      (click)=\"onSearchHelp()\">\n                <span class=\"fas fa-search\"></span>\n              </button>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <p class=\"text-secondary\">{{currentJobProgramDesc}}</p>\n          </div>\n        </div>\n        <div *ngIf=\"currentParamDefinitions\" class=\"container-fluid dk-scroll-area\">\n          <app-job-parameters [parameterDefinitions]=\"currentParamDefinitions\"\n                              [currentJobStep]=\"currentJobStep\"\n                              [readonly]=\"readonly\">\n          </app-job-parameters>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"close()\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"confirm()\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>\n<dk-app-search-help></dk-app-search-help>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, RelationMeta} from 'jor-angular';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  @Input() mainForm!: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"mt-4 ml-2 row\">\n  <div class=\"form-group col-md-6 col-lg-4\" [formGroup]=\"mainForm\">\n    <label for=\"createdBy\" class=\"col-form-label form-control-sm\">Created by:\n    </label>\n    <input class=\"form-control form-control-sm\" id=\"createdBy\" name=\"createdBy\"\n           formControlName=\"createdBy\" readonly>\n  </div>\n  <div class=\"form-group col-md-6 col-lg-4\" [formGroup]=\"mainForm\">\n    <label for=\"createTime\" class=\"col-form-label form-control-sm\">Create Time:\n    </label>\n    <input class=\"form-control form-control-sm\" id=\"createTime\" name=\"createTime\"\n           formControlName=\"createTime\" readonly>\n  </div>\n  <div class=\"form-group col-md-6 col-lg-4\" [formGroup]=\"mainForm\">\n    <label for=\"lastChangedBy\" class=\"col-form-label form-control-sm\">Last Changed by:\n    </label>\n    <input class=\"form-control form-control-sm\" id=\"lastChangedBy\" name=\"lastChangedBy\"\n           formControlName=\"lastChangedBy\" readonly>\n  </div>\n  <div class=\"form-group col-md-6 col-lg-4\" [formGroup]=\"mainForm\">\n    <label for=\"lastChangeTime\" class=\"col-form-label form-control-sm\">Last Change Time:\n    </label>\n    <input class=\"form-control form-control-sm\" id=\"lastChangeTime\" name=\"lastChangeTime\"\n           formControlName=\"lastChangeTime\" readonly>\n  </div>\n</form>\n","export const msgStore = [\n  { msgCat: 'JOB',\n    msgName: 'GENERAL',\n    msgText: {\n      EN: {shortText: '%s',\n        longText: 'dummy'}\n    }\n  },\n  { msgCat: 'JOB',\n    msgName: 'AT_LEAST_ONE_JOB_MODE',\n    msgText: {\n      EN: {shortText: 'You need choose at least one job mode',\n           longText: 'dummy'}\n    }\n  },\n  { msgCat: 'JOB',\n    msgName: 'AT_LEAST_ONE_JOB_STATUS',\n    msgText: {\n      EN: {shortText: 'You need choose at least one job status',\n        longText: 'dummy'}\n    }\n  },\n  { msgCat: 'JOB',\n    msgName: 'JOB_EXISTS',\n    msgText: {\n      EN: {shortText: 'Job %s already exists',\n        longText: 'dummy'}\n    }\n  },\n  { msgCat: 'JOB',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {shortText: 'Job contains invalid inputs, correct it before doing next actions',\n        longText: 'dummy'}\n    }\n  },\n  { msgCat: 'JOB',\n    msgName: 'NO_CHANGE',\n    msgText: {\n      EN: {shortText: 'The data has no change',\n        longText: 'dummy'}\n    }\n  },\n  { msgCat: 'JOB',\n    msgName: 'INVALID_OR_MISSING_JOB_PROGRAM',\n    msgText: {\n      EN: {shortText: 'The job program is missing or invalid',\n        longText: 'dummy'}\n    }\n  },\n  { msgCat: 'JOB',\n    msgName: 'INVALID_PARAMETER_VALUE',\n    msgText: {\n      EN: {shortText: 'Invalid parameter value',\n        longText: 'dummy'}\n    }\n  },\n  { msgCat: 'JOB',\n    msgName: 'NO_STEPS',\n    msgText: {\n      EN: {shortText: 'You must at least assign one job step',\n        longText: 'dummy'}\n    }\n  }\n];\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport {environment} from '../environments/environment';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {formatDate} from '@angular/common';\nimport {Observable, of} from 'rxjs';\nimport {Job, JobOccurrence, JobProgram, StartCondition} from './job-types';\nimport {catchError} from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobService {\n  jobStatuses = ['Initial', 'Ready', 'Completed'];\n  jobStatusColors = ['text-secondary', 'text-warning', 'text-info'];\n  occStatuses = ['Initial', 'Ready', 'Running', 'Finished', 'Failed', 'Canceled'];\n  occStatusColors = ['text-secondary', 'text-info', 'text-warning', 'text-success', 'text-danger', 'text-muted'];\n  jobModes = ['Immediately', 'Specific-time', 'Recursively', 'Event-based'];\n  messageTypes = {\n    S: { text: 'Success', color: 'text-success' },\n    W: { text: 'Warning', color: 'text-warning' },\n    E: { text: 'Error', color: 'text-danger' },\n    I: { text: 'Information', color: 'text-info' },\n    X: { text: 'Exception', color: 'text-danger' }\n  };\n  private originalHost = environment.originalHost;\n\n  constructor(private http: HttpClient,\n              private messageService: MessageService) { }\n\n  get CurrentTime(): string {\n    return formatDate( new Date(), 'yyyy-MM-dd hh:mm:ss', 'en-US' );\n  }\n\n  toLocaleString(dateStr: string | undefined): string {\n    if (dateStr) {\n      // to support Safari and Firefox, the dateStr format 'yyyy-MM-dd HH:mm:ss' needs to be converted to 'yyyy/MM/dd HH:mm:ss'\n      const dateStrConverted = dateStr.replace(/-/g, '/');\n      return formatDate( new Date(dateStrConverted + ' UTC'), 'yyyy-MM-dd HH:mm:ss', 'en-US')\n    } else {\n      return '';\n    }\n  }\n\n  saveJob(isNew: boolean, jobDefinition: Job): Observable<Message[]> {\n    if (isNew) {\n      return this.http.post<Message[]>(this.originalHost + `/api/jobs`, jobDefinition, httpOptions).pipe(\n        catchError(this.handleError<any>('createJob')));\n    } else {\n      return this.http.put<Message[]>(this.originalHost + `/api/jobs`, jobDefinition, httpOptions).pipe(\n        catchError(this.handleError<any>('changeJob')));\n    }\n  }\n\n  getJob(jobName: string | null): Observable<Job | Message[]> {\n    return this.http.get<Job | Message[]>(this.originalHost + `/api/jobs/${jobName}`, httpOptions).pipe(\n      catchError(this.handleError<any>('getJob')));\n  }\n\n  getJobStatus(jobName: string | null): Observable<number> {\n    return this.http.get<number>(this.originalHost + `/api/jobs/${jobName}/status`, httpOptions).pipe(\n      catchError(this.handleError<any>('getJobStatus')));\n  }\n\n  simulateRecurrences(startCondition: StartCondition): Observable<string[] | Message> {\n    return this.http.post<string[] | Message>(this.originalHost + `/api/simulate/recurrences`, startCondition, httpOptions).pipe(\n      catchError(this.handleError<any>('simulateRecurrences')));\n  }\n\n  scheduleJobs(JobNames: string[]): Observable<Message[]> {\n    return this.http.post<Message[]>(this.originalHost + `/api/jobs/schedule`, JobNames, httpOptions).pipe(\n      catchError(this.handleError<any>('scheduleJobs')));\n  }\n\n  cancelJobs(JobNames: string[]): Observable<Message[]> {\n    return this.http.post<Message[]>(this.originalHost + `/api/jobs/cancel`, JobNames, httpOptions).pipe(\n      catchError(this.handleError<any>('cancelJobs')));\n  }\n\n  searchJobs(jobName: string,\n             status: number[] = [0, 1, 2, 3],\n             mode: number[] = [0, 1, 2, 3],\n             program?: string): Observable<Job[]> {\n    let queryString = '';\n    if (jobName) { queryString += `&name_includes=${jobName}`; }\n    status.forEach( s => queryString += `&status=${s}`);\n    mode.forEach( m => queryString += `&mode=${m}`);\n    if (program) { queryString += `&program=${program}`; }\n    queryString = queryString.replace('&', '?');\n    return this.http.get<Job[]>(this.originalHost + `/api/jobs${queryString}`, httpOptions).pipe(\n      catchError(this.handleError<any>('searchJobs')));\n  }\n\n  searchJobOccurrences(jobName: string, status: number[] = [0, 1, 2, 3, 4, 5],\n                       startDate?: string, endDate?: string): Observable<JobOccurrence[]> {\n    let queryString = '';\n    status.forEach( s => queryString += `&status=${s}`);\n    if (startDate) { queryString += `&startDate=${startDate}`; }\n    if (endDate) { queryString += `&endDate=${endDate}`; }\n    queryString = queryString.replace('&', '?');\n    return this.http.get<JobOccurrence[]>(this.originalHost + `/api/jobs/${jobName}/occurrences` + queryString, httpOptions).pipe(\n      catchError(this.handleError<any>('searchJobOccurrences')));\n  }\n\n  getOccurrence(uuid: string | null): Observable<JobOccurrence | Message[]> {\n    return this.http.get<JobOccurrence | Message[]>(this.originalHost + `/api/occurrences/${uuid}`, httpOptions).pipe(\n      catchError(this.handleError<any>('getOccurrence')));\n  }\n\n  cancelOccurrences(uuids: string[]): Observable<Message[]> {\n    return this.http.post<Message[]>(this.originalHost + `/api/occurrences/cancel`, uuids, httpOptions).pipe(\n      catchError(this.handleError<any>('cancelOccurrences')));\n  }\n\n  searchJobPrograms(nameFilter: string): Observable<JobProgram[]> {\n    return this.http.get<JobProgram[]>(this.originalHost + `/api/jobPrograms?nameFilter=${nameFilter}`, httpOptions).pipe(\n      catchError(this.handleError<any>('searchJobPrograms')));\n  }\n\n  getJobProgramDefinition(name: string): Observable<JobProgram> {\n    return this.http.get<JobProgram>(this.originalHost + `/api/jobPrograms/${name}`, httpOptions).pipe(\n      catchError(this.handleError<any>('getJobProgramDefinition')));\n  }\n  // tslint:disable-next-line:typedef\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      if (error.status === 401) {\n        this.messageService.addMessage('EXCEPTION', 'NOT_AUTHENTICATED_OR_SESSION_EXPIRED', messageType.Exception);\n      } else {\n        this.messageService.addMessage('EXCEPTION', 'GENERIC', messageType.Exception, operation, error.message);\n      }\n\n      // this.router.navigate(['errors']);\n      console.error(operation, error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}