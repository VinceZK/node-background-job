{"version":3,"sources":["./src/app/app.component.css","./src/environments/environment.ts","./src/app/custom.reuse.strategy.ts","./src/app/identity.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./dist/jor-angular/__ivy_ngcc__/fesm2015/jor-angular.js","./src/app/msgStore.ts","./src/app/app-routing.module.ts","./src/main.ts"],"names":[],"mappings":"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EAWV;AACD;AACA;AACA,WAAW,EAKV;AACD;AACA;AACA,WAAW,EAmBV;AACD;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA,WAAW,EAOV;AACD;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA,WAAW,EAOV;AACD;AACA;AACA,WAAW,EAeV;AACD;AACA;AACA,WAAW,EAeV;AACD;AACA;AACA,WAAW,EAiBV;AACD;AACA;AACA,WAAW,EAeV;AACD;AACA;AACA,WAAW,EAeV;AACD;AACA;AACA,WAAW,EAeV;AACD;AACA;AACA,WAAW,EAiCV;AACD;AACA;AACA,WAAW,EAeV;AACD;AACA;AACA,WAAW,EAmCV;AACD;AACA;AACA,WAAW,EAOV;AACD;AACA;AACA,WAAW,EAeV;AACD;AACA;AACA,WAAW,EA2BV;AACD;AACA;AACA,WAAW,EAyBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC;AACjC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,2BAA2B,EAAE;AAC7B,yCAAyC;AACzC;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,0CAA0C,uFAAuF;AACjI;AACA,SAAS;AACT;AACA;AACA;AACA,4DAA4D,qCAAqC;AACjG;AACA;AACA,2CAA2C,wEAAkB,EAAE,8CAA8C,8BAA8B,EAAE,8CAA8C;AAC3L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA,WAAW,EAAE;AACb;AACA,iBAAiB,gEAAW,EAAE,qCAAqC;AACnE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,0BAA0B,MAAM,kEAAkE,EAAE,EAAE;AACtG,aAAa;AACb,0BAA0B,MAAM;AAChC,mGAAmG,EAAE;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+EAA+E,iEAAU;AACzF;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0EAA0E,OAAO,QAAQ,iEAAU;AACnG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qEAAqE,SAAS,QAAQ,iEAAU;AAChG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+FAA+F,iEAAU;AACzG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yEAAyE,aAAa,QAAQ,iEAAU;AACxG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uEAAuE,WAAW,QAAQ,iEAAU;AACpG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8EAA8E,SAAS,QAAQ,iEAAU;AACzG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6FAA6F,iEAAU;AACvG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4FAA4F,iEAAU;AACtG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4EAA4E,aAAa,QAAQ,iEAAU;AAC3G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iFAAiF,KAAK,QAAQ,iEAAU;AACxG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4EAA4E,SAAS,aAAa,iEAAU;AAC5G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2GAA2G,iEAAU;AACrH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8EAA8E,KAAK,QAAQ,iEAAU;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yEAAyE,WAAW,aAAa,iEAAU;AAC3G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sGAAsG,iEAAU;AAChH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kFAAkF,KAAK,QAAQ,iEAAU;AACzG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6EAA6E,eAAe,QAAQ,iEAAU;AAC9G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6EAA6E,eAAe,aAAa,iEAAU;AACnH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8GAA8G,iEAAU;AACxH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,0EAA0E,KAAK,QAAQ,iEAAU;AACjG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qEAAqE,OAAO,QAAQ,iEAAU;AAC9F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qEAAqE,OAAO,aAAa,iEAAU;AACnG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8FAA8F,iEAAU;AACxG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kFAAkF,KAAK,QAAQ,iEAAU;AACzG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6EAA6E,UAAU,QAAQ,iEAAU;AACzG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,6EAA6E,UAAU,aAAa,iEAAU;AAC9G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yGAAyG,iEAAU;AACnH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iFAAiF,KAAK,QAAQ,iEAAU;AACxG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4EAA4E,SAAS,QAAQ,iEAAU;AACvG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4EAA4E,SAAS,aAAa,iEAAU;AAC5G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uGAAuG,iEAAU;AACjH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,iFAAiF,KAAK,QAAQ,iEAAU;AACxG;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4EAA4E,aAAa,QAAQ,iEAAU;AAC3G;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4EAA4E,aAAa,aAAa,iEAAU;AAChH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2GAA2G,iEAAU;AACrH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4EAA4E,UAAU,QAAQ,iEAAU;AACxG;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,iCAAiC;AACjC;AACA,+EAA+E,8DAAW;AAC1F;AACA;AACA,uEAAuE,8DAAW;AAClF;AACA;AACA,mBAAmB,+CAAE,aAAa,EAAE;AACpC,SAAS;AACT;AACA;AACA,wDAAwD,iCAAiC,sDAAe,CAAC,+DAAiB,GAAG,sDAAe,CAAC,iEAAqB,GAAG;AACrK;AACA;AACA,KAAK,OAAO,+DAAU,EAAE;AACxB,KAAK,OAAO,iEAAc;AAC1B;AACA,yCAAyC,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,CAAC,+DAAU,GAAG,8DAAQ,CAAC,iEAAc,GAAG,EAAE,4CAA4C;AACjO,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,+DAAiB,EAAE,GAAG,OAAO,iEAAqB,EAAE,EAAE,EAAE,QAAQ,EAAE;AACxG,WAAW,EAqBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,WAAW,EAmBV;AACD;AACA;AACA,WAAW,EAuBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kCAAkC,uDAAuD;AACzF;AACA,gBAAgB;AAChB;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,iDAAiD,EAAE;AACnD;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gDAAgD;AAChD,+FAA+F;AAC/F;AACA;AACA,gDAAgD;AAChD,+FAA+F;AAC/F;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,4CAA4C,uEAAuE;AACnH,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,iDAAiD,EAAE;AACnD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,8BAA8B;AAC9B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AAC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;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAqCV;AACD;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,kCAAkC,yDAAyD;AAC3F,mEAAmE,0DAAG;AACtE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,iEAAU;AACvB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,sEAAsE,wCAAwC,sDAAe,iBAAiB;AAC9I;AACA;AACA,KAAK;AACL;AACA,gDAAgD,wEAAkB,EAAE,mDAAmD,iCAAiC,8DAAQ,iBAAiB,EAAE,mDAAmD;AACtO,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,sBAAsB,EAAE,EAAE,QAAQ,EAAE;AACnE,WAAW,EAMV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,wDAAwD,kCAAkC;AAC1F,6CAA6C,4BAA4B;AACzE;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,gCAAgC,0DAAW;AAC3C;AACA,sCAAsC,yDAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,wDAAS;AAC5B;AACA;AACA,4EAA4E,2CAA2C,sDAAe,iBAAiB,sDAAe,wBAAwB;AAC9L;AACA;AACA,KAAK,sBAAsB;AAC3B,KAAK;AACL;AACA,mDAAmD,wEAAkB,EAAE,sDAAsD,oCAAoC,8DAAQ,iBAAiB,8DAAQ,wBAAwB,EAAE,sDAAsD;AAClR,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,sBAAsB,GAAG,6BAA6B,EAAE,EAAE,QAAQ,EAAE;AACnG,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,oEAAoE;AACvF;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,6DAA6D;AACnF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,wCAAwC;AAC1G,0BAA0B,+DAAwB,EAAE,qHAAqH;AACzK,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,WAAW,2IAA2I,aAAa,kEAA2B,wiFAAwiF;AAC7uF,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,KAAK;AACL,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,mEAA2B,EAAE,iEAAyB,EAAE,wDAAe,EAAE,oDAAW,EAAE,4DAAmB,uBAAuB,mEAA2B,EAAE,8DAAsB,EAAE,8DAAsB,EAAE,iEAAyB,EAAE,+DAAuB,EAAE,kEAA0B,EAAE,2EAAmC,EAAE,yEAAiC,EAAE,uDAAc,EAAE,6DAAqB,EAAE,8EAAsC,iBAAiB;AACzd;AACA;AACA;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,2BAA2B,OAAO,uDAAS,+BAA+B,gBAAgB,IAAI;AAC9F;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,8uHAA8uH,WAAW,wIAAwI,cAAc;AAC/4H;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B,yCAAyC,gBAAgB;AACzD,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAgBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,0EAA0E,4CAA4C;AACtH,8BAA8B,+DAAwB,EAAE,gFAAgF,iHAAiH,yTAAyT;AACljB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,wDAAiB;AACzB,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,gEAAyB;AACjC,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,mEAA2B,EAAE,iEAAyB,EAAE,oDAAW,qCAAqC;AAC9H;AACA;AACA;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,gPAAgP,wBAAwB;AACxQ;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,oEAAoE;AACvF;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,6CAA6C;AACzH,+BAA+B,+DAAwB,EAAE,kFAAkF,iHAAiH,0TAA0T;AACtjB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,wDAAiB;AACzB,QAAQ,oDAAa;AACrB,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,gEAAyB;AACjC,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,+DAAwB;AAChC,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,mEAA2B,EAAE,iEAAyB,EAAE,oDAAW,qCAAqC;AAC9H;AACA;AACA;AACA,wBAAwB,OAAO,mDAAK,EAAE;AACtC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,2NAA2N,wBAAwB,yJAAyJ,cAAc;AAC1Z;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EASV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,8BAA8B,mDAAmD;AACjF;AACA,gBAAgB;AAChB;AACA,6BAA6B,kDAAkD;AAC/E;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,6CAA6C;AACzH,+BAA+B,+DAAwB,EAAE,kFAAkF,yLAAyL,sjDAAsjD;AAC13D,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB;AACzB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,wDAAiB;AACzB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,gFAAgF,8BAA8B,EAAE;AACzI,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,gFAAgF,8BAA8B,EAAE;AACzI,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB,YAAY,6DAAsB,6CAA6C,6DAAsB;AAC9H,QAAQ,uDAAgB;AACxB,QAAQ,+DAAwB;AAChC,QAAQ,uDAAgB;AACxB,QAAQ,+DAAwB;AAChC,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,eAAe,mEAA2B,EAAE,iEAAyB,EAAE,uDAAc,EAAE,4DAAoB,EAAE,oDAAW,EAAE,uDAAc,EAAE,uDAAc,4FAA4F,YAAY,cAAc,gBAAgB,mBAAmB,4BAA4B,eAAe,eAAe,WAAW,kCAAkC,cAAc,IAAI;AACjb;AACA;AACA;AACA,yBAAyB,OAAO,mDAAK,EAAE;AACvC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,mDAAK,EAAE;AACrC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,kVAAkV,wBAAwB,gOAAgO,48BAA48B,2BAA2B,sBAAsB,8BAA8B,yXAAyX,4oBAA4oB,0BAA0B,sBAAsB,6BAA6B,iOAAiO,YAAY,mIAAmI,yFAAyF,kBAAkB;AAClpG,0CAA0C,YAAY,cAAc,gBAAgB,mBAAmB,SAAS,eAAe,eAAe,WAAW,eAAe,cAAc;AACtL,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EAuBV;;AAED;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,oEAAoE,yCAAyC;AAC7G,2BAA2B,+DAAwB,EAAE,0IAA0I,EAAE,mDAAmD,sBAAsB;AAC1Q;AACA;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,iEAAiE;AACjE,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;AACA;AACA;AACA,wBAAwB,8DAAuB,EAAE,yBAAyB;AAC1E,wBAAwB,8DAAuB,EAAE,gDAAgD,sCAAsC,EAAE;AACzI,YAAY,4DAAY;AACxB,YAAY,qEAAgB;AAC5B,YAAY,0DAAW;AACvB,YAAY,kEAAmB;AAC/B,YAAY;AACZ,cAAc,oDAAoD,gEAAyB,oBAAoB,4BAA4B,iJAAiJ,EAAE,wBAAwB,SAAS,4DAAY;AAC3U,QAAQ,qEAAgB;AACxB,QAAQ,0DAAW;AACnB,QAAQ,kEAAmB,EAAE,EAAE,wBAAwB,4HAA4H,EAAE,EAAE,EAAE,EAAE;AAC3L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC,oBAAoB,qEAAgB;AACpC,oBAAoB,0DAAW;AAC/B,oBAAoB,kEAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEA;AACA;AACA;AACA,cAAc,uHAAuH;AACrI;;AAEwtB;;AAExtB,uC;;;;;;;;;;;;ACplGA;AAAA;AAAO,MAAM,QAAQ,GAAG;IACtB,EAAE,MAAM,EAAE,WAAW;QACnB,OAAO,EAAE,SAAS;QAClB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,mCAAmC;gBAC9C,QAAQ,EAAE,KAAK,EAAC;SACtB;KACF;IACD,EAAE,MAAM,EAAE,WAAW;QACnB,OAAO,EAAE,iBAAiB;QAC1B,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,yBAAyB;gBACvC,QAAQ,EAAE,+DAA+D,EAAC;SAC7E;KACF;IACD,EAAE,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,WAAW;QACpB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,sCAAsC,EAAE,QAAQ,EAAE,EAAE,EAAC;SACtE;KACF;IACD,EAAE,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,YAAY;QACrB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,oCAAoC,EAAE,QAAQ,EAAE,EAAE,EAAC;SACpE;KACF;IACD,EAAE,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,cAAc;QACvB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,2BAA2B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC3D;KACF;IACD,EAAE,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,gBAAgB;QACzB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,6BAA6B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC7D;KACF;IACD,EAAE,MAAM,EAAE,cAAc;QACtB,OAAO,EAAE,2BAA2B;QACpC,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,8BAA8B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC9D;KACF;IACD,EAAE,MAAM,EAAE,cAAc;QACtB,OAAO,EAAE,+BAA+B;QACxC,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,kCAAkC,EAAE,QAAQ,EAAE,EAAE,EAAC;SAClE;KACF;IACD,EAAE,MAAM,EAAE,cAAc;QACtB,OAAO,EAAE,gBAAgB;QACzB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,uBAAuB,EAAE,QAAQ,EAAE,EAAE,EAAC;SACvD;KACF;IACD,EAAE,MAAM,EAAE,cAAc;QACtB,OAAO,EAAE,2BAA2B;QACpC,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,yCAAyC,EAAE,QAAQ,EAAE,EAAE,EAAC;SACzE;KACF;IACD,EAAE,MAAM,EAAE,cAAc;QACtB,OAAO,EAAE,6BAA6B;QACtC,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,0CAA0C,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC1E;KACF;IACD,EAAE,MAAM,EAAE,cAAc;QACtB,OAAO,EAAE,wBAAwB;QACjC,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,2BAA2B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC3D;KACF;IACD,EAAE,MAAM,EAAE,cAAc;QACtB,OAAO,EAAE,6BAA6B;QACtC,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,iCAAiC,EAAE,QAAQ,EAAE,EAAE,EAAC;SACjE;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,WAAW;QACpB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,sCAAsC,EAAE,QAAQ,EAAE,EAAE,EAAC;SACtE;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,cAAc;QACvB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,gCAAgC,EAAE,QAAQ,EAAE,EAAE,EAAC;SAChE;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,mBAAmB;QAC5B,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,2BAA2B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC3D;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,mBAAmB;QAC5B,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,2BAA2B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC3D;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,YAAY;QACrB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,oBAAoB,EAAE,QAAQ,EAAE,EAAE,EAAC;SACpD;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,qBAAqB;QAC9B,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,wBAAwB,EAAE,QAAQ,EAAE,EAAE,EAAC;SACxD;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,8BAA8B;QACvC,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,8DAA8D,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC9F;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,yCAAyC;QAClD,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,6DAA6D,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC7F;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,gBAAgB;QACzB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,wBAAwB,EAAE,QAAQ,EAAE,EAAE,EAAC;SACxD;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,oBAAoB;QAC7B,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,4BAA4B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC5D;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,kCAAkC;QAC3C,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,oDAAoD,EAAE,QAAQ,EAAE,EAAE,EAAC;SACpF;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,oBAAoB;QAC7B,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,4BAA4B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC5D;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,mBAAmB;QAC5B,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,2BAA2B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC3D;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,0BAA0B;QACnC,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,sCAAsC,EAAE,QAAQ,EAAE,EAAE,EAAC;SACtE;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,mBAAmB;QAC5B,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,2BAA2B,EAAE,QAAQ,EAAE,EAAE,EAAC;SAC3D;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,0BAA0B;QACnC,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,sCAAsC,EAAE,QAAQ,EAAE,EAAE,EAAC;SACtE;KACF;IACD,EAAE,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,aAAa;QACtB,OAAO,EAAE;YACP,EAAE,EAAE,EAAC,SAAS,EAAE,oFAAoF,EAAE,QAAQ,EAAE,EAAE,EAAC;SACpH;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACvLuC;AACY;AAErD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,uPAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE;IAClG,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAG,GAAG,EAAE,CAAC,iPAA8B,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE;IAChG,EAAE,IAAI,EAAE,EAAE,EAAI,UAAU,EAAE,cAAc,EAAE,SAAS,EAAE,MAAM,EAAE;CAC9D,CAAC;IAQW,gBAAgB,SAAhB,gBAAgB;CAAI;AAApB,gBAAgB;IAN5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;SAC7B;QACD,OAAO,EAAE,CAAE,4DAAY,CAAE;KAC1B,CAAC;GACW,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;ACf7B;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nexport const environment = {\n  production: false,\n  originalHost: 'http://localhost:3000'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * The custom route reuse strategy inherits the \"RouteReuseStrategy\" to achieve a very usual case,\n * which by default, Angular doesn't support.\n * 1. Search for items based on filter conditions.\n * 2. Navigate to one of the item to the detail page(component).\n * 3. Navigate back to searched item list without re-initializing the search&list component again.\n * This requires the Angular route to save the search&list component, and restore it whenever back.\n * The detail solution is described in following thread:\n * https://stackoverflow.com/questions/41280471/how-to-implement-routereusestrategy-shoulddetach-for-specific-routes-in-angular\n */\nimport {ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy} from '@angular/router';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class CustomReuseStrategy implements RouteReuseStrategy {\n  routesToCache: string[] = ['list'];\n  storedRouteHandles = new Map<string, DetachedRouteHandle>();\n\n  /**\n   * When navigation from a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the current route should be stored.\n   * @param route\n   */\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('detaching', route);\n    return this.routesToCache.indexOf(route.routeConfig.path) > -1;\n  }\n\n  /**\n   * If the current route need to be stored, that is shouldDetach return true,\n   * then on this method, you can implement a way to store routes. Usually in a Map.\n   * @param route\n   * @param handle\n   */\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    // console.log('store', route);\n    this.storedRouteHandles.set(route.routeConfig.path, handle);\n  }\n\n  /**\n   * When navigation to a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the target component can be get from a reuse buffer.\n   * @param route\n   */\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldAttach', route);\n    return this.storedRouteHandles.has(route.routeConfig.path);\n  }\n\n  /**\n   * If shouldAttach return true, then this method is invoke to retrieve the component from the buffer.\n   * @param route\n   */\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    return this.storedRouteHandles.get(route.routeConfig.path);\n  }\n\n  /**\n   * By default, Angular doesn't re-initializing the same component if the navigation is not to\n   * a different one. For example, you switch different entity ID in the same entity type detail page.\n   * In this way, shouldReuseRoute should return true to avoid executing other methods in this Class.\n   * However, if you navigate from search&list component to entity detail component, then the method should return false.\n   * So that other methods can be executed to decide whether the search&list component should be stored for future reuse.\n   * @param future\n   * @param curr\n   */\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldReuseRoute, future:', future, 'current:', curr);\n    return future.routeConfig === curr.routeConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {formatDate} from '@angular/common';\nimport {Session} from 'ui-logon-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdentityService {\n  private session: Session;\n\n  constructor() {\n  }\n\n  setSession( data: any ) {\n    this.session = <Session>data;\n  }\n\n  get Session(): Session {\n    if (this.session) { return this. session; }\n    const defaultSession = new Session();\n    defaultSession.USER_ID = 'DH001';\n    defaultSession.LANGUAGE = 'EN';\n    return defaultSession;\n  }\n\n  get CurrentTime(): string {\n    return formatDate( new Date(), 'yyyy-MM-dd hh:mm:ss', 'en-US' );\n  }\n}\n","import { Component } from '@angular/core';\nimport {EntityService} from 'jor-angular';\nimport {environment} from '../environments/environment';\nimport {MessageService} from 'ui-message-angular';\nimport {msgStore} from './msgStore';\nimport {LogonService} from 'ui-logon-angular';\nimport {IdentityService} from './identity.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor( private entityService: EntityService,\n               private identityService: IdentityService,\n               private messageService: MessageService,\n               private logonService: LogonService) {\n    this.entityService.setOriginalHost(environment.originalHost);\n    this.logonService.setHost(environment.originalHost);\n    this.logonService.session().subscribe( data => {\n      this.identityService.setSession( data );\n      this.messageService.setMessageStore(msgStore, this.identityService.Session.LANGUAGE);\n    });\n  }\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\";","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport {RouteReuseStrategy} from '@angular/router';\nimport {CustomReuseStrategy} from './custom.reuse.strategy';\nimport {JorAngularModule} from 'jor-angular';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserModule,\n    JorAngularModule\n  ],\n  providers: [\n    {provide: RouteReuseStrategy, useClass: CustomReuseStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Injectable, ɵɵdefineInjectable, ɵɵinject, Component, Input, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { messageType, MessageService } from 'ui-message-angular';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/entity.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from 'ui-message-angular';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction SearchHelpComponent_div_10_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25);\n    ɵngcc0.ɵɵelementStart(1, \"input\", 26);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function SearchHelpComponent_div_10_div_1_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.fuzzySearchTerm = $event; })(\"keyup\", function SearchHelpComponent_div_10_div_1_Template_input_keyup_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ctx_r10.enterSearch($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r6.fuzzySearchTerm);\n} }\nfunction SearchHelpComponent_div_10_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 27);\n    ɵngcc0.ɵɵelementStart(1, \"label\", 28);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"input\", 29);\n    ɵngcc0.ɵɵlistener(\"keyup\", function SearchHelpComponent_div_10_div_3_Template_input_keyup_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(2); return ctx_r12.enterSearch($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const filterField_r11 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"for\", filterField_r11.FIELD_NAME);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", filterField_r11.LABEL_TEXT || filterField_r11.FIELD_NAME, \":\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"id\", filterField_r11.FIELD_NAME);\n    ɵngcc0.ɵɵpropertyInterpolate(\"name\", filterField_r11.FIELD_NAME);\n    ɵngcc0.ɵɵpropertyInterpolate(\"formControlName\", filterField_r11.FIELD_NAME);\n    ɵngcc0.ɵɵproperty(\"readonly\", filterField_r11.FILTER_DISP_ONLY);\n} }\nfunction SearchHelpComponent_div_10_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(1, SearchHelpComponent_div_10_div_1_Template, 2, 1, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 21);\n    ɵngcc0.ɵɵtemplate(3, SearchHelpComponent_div_10_div_3_Template, 4, 6, \"div\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"div\", 23);\n    ɵngcc0.ɵɵelementStart(5, \"button\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function SearchHelpComponent_div_10_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.search(); });\n    ɵngcc0.ɵɵtext(6, \" Search \");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.searchHelp && ctx_r0.searchHelp.FUZZY_SEARCH);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"formGroup\", ctx_r0.filterFieldsFormGroup);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.filterFields);\n} }\nfunction SearchHelpComponent_button_11_Template(rf, ctx) { if (rf & 1) {\n    const _r17 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 30);\n    ɵngcc0.ɵɵlistener(\"click\", function SearchHelpComponent_button_11_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.showFilter(); });\n    ɵngcc0.ɵɵtext(1, \"Show Filter\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction SearchHelpComponent_button_12_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 30);\n    ɵngcc0.ɵɵlistener(\"click\", function SearchHelpComponent_button_12_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.hideFilter(); });\n    ɵngcc0.ɵɵtext(1, \"Hide Filter\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction SearchHelpComponent_input_17_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 31);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function SearchHelpComponent_input_17_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.isSelectAllChecked = $event; })(\"click\", function SearchHelpComponent_input_17_Template_input_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.selectAll(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngModel\", ctx_r3.isSelectAllChecked);\n} }\nfunction SearchHelpComponent_th_18_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const listField_r23 = ctx.$implicit;\n    ɵngcc0.ɵɵstyleProp(\"display\", listField_r23.FIELD_NAME === \"INSTANCE_GUID\" ? \"none\" : \"table-cell\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", listField_r23.LIST_HEADER_TEXT || listField_r23.FIELD_NAME, \" \");\n} }\nfunction SearchHelpComponent_tr_20_input_2_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 34);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function SearchHelpComponent_tr_20_input_2_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(2); return ctx_r29.selectedIndex = $event; })(\"dblclick\", function SearchHelpComponent_tr_20_input_2_Template_input_dblclick_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r31 = ɵngcc0.ɵɵnextContext(2); return ctx_r31.confirmSelection(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const i_r25 = ɵngcc0.ɵɵnextContext().index;\n    const ctx_r26 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", i_r25)(\"ngModel\", ctx_r26.selectedIndex);\n} }\nfunction SearchHelpComponent_tr_20_input_3_Template(rf, ctx) { if (rf & 1) {\n    const _r35 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 35);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function SearchHelpComponent_tr_20_input_3_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r35); const item_r24 = ɵngcc0.ɵɵnextContext().$implicit; return item_r24.SELECTED = $event; });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r24 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"ngModel\", item_r24.SELECTED);\n} }\nfunction SearchHelpComponent_tr_20_td_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const listField_r37 = ctx.$implicit;\n    const item_r24 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵstyleProp(\"display\", listField_r37.FIELD_NAME === \"INSTANCE_GUID\" ? \"none\" : \"table-cell\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", item_r24[listField_r37.FIELD_NAME], \" \");\n} }\nfunction SearchHelpComponent_tr_20_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵelementStart(1, \"td\");\n    ɵngcc0.ɵɵtemplate(2, SearchHelpComponent_tr_20_input_2_Template, 1, 2, \"input\", 32);\n    ɵngcc0.ɵɵtemplate(3, SearchHelpComponent_tr_20_input_3_Template, 1, 1, \"input\", 33);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, SearchHelpComponent_tr_20_td_4_Template, 2, 3, \"td\", 14);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.searchHelp.MULTI);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.searchHelp.MULTI);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.listFields);\n} }\nconst _c0 = function (a0) { return { \"show\": a0 }; };\nconst _c1 = function (a0) { return { \"display\": a0 }; };\nfunction AttributeComponent_div_2_input_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 16);\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r9.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r9.attributeControl.name)(\"id\", ctx_r9.attributeControl.key)(\"maxlength\", ctx_r9.attributeControl.maxLength)(\"pattern\", ctx_r9.attributeControl.pattern)(\"readonly\", ctx_r9.isReadonly);\n} }\nfunction AttributeComponent_div_2_input_2_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 17);\n    ɵngcc0.ɵɵlistener(\"keyup\", function AttributeComponent_div_2_input_2_Template_input_keyup_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.onKeyup(ctx_r13.attributeControl.name); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r10.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r10.attributeControl.name)(\"id\", ctx_r10.attributeControl.key)(\"maxlength\", ctx_r10.attributeControl.maxLength)(\"readonly\", ctx_r10.isReadonly);\n} }\nfunction AttributeComponent_div_2_input_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 18);\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r11.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r11.attributeControl.name)(\"id\", ctx_r11.attributeControl.key)(\"pattern\", ctx_r11.attributeControl.pattern)(\"readonly\", ctx_r11.isReadonly);\n} }\nfunction AttributeComponent_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 20);\n    ɵngcc0.ɵɵlistener(\"click\", function AttributeComponent_div_2_div_4_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.onSearchHelp(ctx_r15.attributeControl); });\n    ɵngcc0.ɵɵelement(2, \"span\", 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AttributeComponent_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, AttributeComponent_div_2_input_1_Template, 1, 7, \"input\", 12);\n    ɵngcc0.ɵɵtemplate(2, AttributeComponent_div_2_input_2_Template, 1, 6, \"input\", 13);\n    ɵngcc0.ɵɵtemplate(3, AttributeComponent_div_2_input_3_Template, 1, 6, \"input\", 14);\n    ɵngcc0.ɵɵtemplate(4, AttributeComponent_div_2_div_4_Template, 3, 0, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"text\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"text_capital\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"integer\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.attributeControl.searchHelpId || ctx_r0.attributeControl.domainRelationId);\n} }\nfunction AttributeComponent_input_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 22);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r1.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r1.attributeControl.name)(\"id\", ctx_r1.attributeControl.key)(\"step\", ctx_r1.attributeControl.step)(\"placeholder\", ctx_r1.attributeControl.placeholder)(\"pattern\", ctx_r1.attributeControl.pattern)(\"readonly\", ctx_r1.isReadonly);\n} }\nfunction AttributeComponent_input_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 23);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r2.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r2.attributeControl.name)(\"id\", ctx_r2.attributeControl.key);\n} }\nfunction AttributeComponent_input_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 24);\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r3.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r3.attributeControl.name)(\"id\", ctx_r3.attributeControl.key)(\"readonly\", ctx_r3.isReadonly);\n} }\nfunction AttributeComponent_input_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 25);\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r4.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r4.attributeControl.name)(\"id\", ctx_r4.attributeControl.key)(\"readonly\", ctx_r4.isReadonly);\n} }\nfunction AttributeComponent_input_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 26);\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r5.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r5.attributeControl.name)(\"id\", ctx_r5.attributeControl.key)(\"readonly\", ctx_r5.isReadonly);\n} }\nfunction AttributeComponent_input_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 27);\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r6.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r6.attributeControl.name)(\"id\", ctx_r6.attributeControl.key)(\"readonly\", ctx_r6.isReadonly);\n} }\nfunction AttributeComponent_select_9_option_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 30);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const opt_r18 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", opt_r18.key);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(opt_r18.value);\n} }\nfunction AttributeComponent_select_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"select\", 28);\n    ɵngcc0.ɵɵtemplate(1, AttributeComponent_select_9_option_1_Template, 2, 2, \"option\", 29);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r7.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"formControlName\", ctx_r7.attributeControl.name)(\"id\", ctx_r7.attributeControl.key);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r7.attributeControl.dropdownList);\n} }\nfunction AttributeComponent_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ng-invalid\", ctx_r8.invalid);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r8.errorMessage, \" \");\n} }\nfunction AttributeFormComponent_strong_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\", 4);\n    ɵngcc0.ɵɵtext(1, \"*\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AttributeForm2Component_strong_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\", 5);\n    ɵngcc0.ɵɵtext(1, \"*\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AttributeTableComponent_th_5_strong_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\", 18);\n    ɵngcc0.ɵɵtext(1, \"*\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AttributeTableComponent_th_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, AttributeTableComponent_th_5_strong_2_Template, 2, 0, \"strong\", 17);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const attributeControl_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", attributeControl_r3.label, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", attributeControl_r3.primaryKey);\n} }\nfunction AttributeTableComponent_tr_7_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 25);\n} }\nfunction AttributeTableComponent_tr_7_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 26);\n} }\nfunction AttributeTableComponent_tr_7_td_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\");\n    ɵngcc0.ɵɵelement(1, \"dk-app-attribute\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const attributeControl_r10 = ctx.$implicit;\n    const formGroup_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"attributeControl\", attributeControl_r10)(\"isSmallSize\", ctx_r9.isSmallSize)(\"formGroup\", formGroup_r5)(\"readonly\", ctx_r9.readonly);\n} }\nfunction AttributeTableComponent_tr_7_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵelementStart(1, \"td\", 19);\n    ɵngcc0.ɵɵelementStart(2, \"button\", 20);\n    ɵngcc0.ɵɵlistener(\"click\", function AttributeTableComponent_tr_7_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r13); const i_r6 = ctx.index; const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.openDetailModal(i_r6); });\n    ɵngcc0.ɵɵtemplate(3, AttributeTableComponent_tr_7_span_3_Template, 1, 0, \"span\", 21);\n    ɵngcc0.ɵɵtemplate(4, AttributeTableComponent_tr_7_span_4_Template, 1, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function AttributeTableComponent_tr_7_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r13); const i_r6 = ctx.index; const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.deleteRelationInstance(i_r6); });\n    ɵngcc0.ɵɵelement(6, \"span\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(7, AttributeTableComponent_tr_7_td_7_Template, 2, 4, \"td\", 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.readonly);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.readonly);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r1.readonly);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.attributeControls);\n} }\nfunction AttributeTableComponent_div_8_dk_app_attribute_form_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"dk-app-attribute-form\", 32);\n} if (rf & 2) {\n    const attributeControl_r16 = ctx.$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"readonly\", ctx_r15.readonly)(\"isSmallSize\", ctx_r15.isSmallSize)(\"attributeControl\", attributeControl_r16)(\"formGroup\", ctx_r15.currentFormGroup);\n} }\nfunction AttributeTableComponent_div_8_Template(rf, ctx) { if (rf & 1) {\n    const _r18 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 29);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(4, \"h5\", 30);\n    ɵngcc0.ɵɵtext(5, \"Line Detail\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(6, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function AttributeTableComponent_div_8_Template_button_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17.closeDetailModal(); });\n    ɵngcc0.ɵɵelementStart(7, \"span\", 13);\n    ɵngcc0.ɵɵtext(8, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"div\", 14);\n    ɵngcc0.ɵɵtemplate(10, AttributeTableComponent_div_8_dk_app_attribute_form_10_Template, 1, 4, \"dk-app-attribute-form\", 31);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(11, \"div\", 15);\n    ɵngcc0.ɵɵelementStart(12, \"button\", 16);\n    ɵngcc0.ɵɵlistener(\"click\", function AttributeTableComponent_div_8_Template_button_click_12_listener() { ɵngcc0.ɵɵrestoreView(_r18); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.closeDetailModal(); });\n    ɵngcc0.ɵɵtext(13, \"OK\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c0, ctx_r2.isDetailModalShown))(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(7, _c1, ctx_r2.displayDetailModal));\n    ɵngcc0.ɵɵadvance(10);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.attributeControls);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r2.isSmallSize);\n} }\nclass Entity {\n}\nif (false) {\n    /** @type {?} */\n    Entity.prototype.ENTITY_ID;\n    /** @type {?} */\n    Entity.prototype.INSTANCE_GUID;\n    /** @type {?} */\n    Entity.prototype.relationships;\n    /* Skipping unhandled member: [key: string]: any;*/\n}\nclass Relationship {\n}\nif (false) {\n    /** @type {?} */\n    Relationship.prototype.RELATIONSHIP_ID;\n    /** @type {?} */\n    Relationship.prototype.SELF_ROLE_ID;\n    /** @type {?} */\n    Relationship.prototype.values;\n}\nclass RelationshipInstance {\n}\nif (false) {\n    /** @type {?} */\n    RelationshipInstance.prototype.action;\n    /** @type {?} */\n    RelationshipInstance.prototype.RELATIONSHIP_INSTANCE_GUID;\n    /** @type {?} */\n    RelationshipInstance.prototype.VALID_FROM;\n    /** @type {?} */\n    RelationshipInstance.prototype.VALID_TO;\n    /** @type {?} */\n    RelationshipInstance.prototype.PARTNER_INSTANCES;\n    /* Skipping unhandled member: [key: string]: any;*/\n}\nclass PartnerInstance {\n}\nif (false) {\n    /** @type {?} */\n    PartnerInstance.prototype.ENTITY_ID;\n    /** @type {?} */\n    PartnerInstance.prototype.ROLE_ID;\n    /** @type {?} */\n    PartnerInstance.prototype.INSTANCE_GUID;\n    /* Skipping unhandled member: [key: string]: any;*/\n}\nclass PartnerRole {\n}\nif (false) {\n    /** @type {?} */\n    PartnerRole.prototype.ENTITY_ID;\n    /** @type {?} */\n    PartnerRole.prototype.ROLE_ID;\n}\nclass EntityMeta {\n}\nif (false) {\n    /** @type {?} */\n    EntityMeta.prototype.ENTITY_ID;\n    /** @type {?} */\n    EntityMeta.prototype.ENTITY_DESC;\n    /** @type {?} */\n    EntityMeta.prototype.VERSION_NO;\n    /** @type {?} */\n    EntityMeta.prototype.ROLES;\n}\nclass Attribute {\n}\nif (false) {\n    /** @type {?} */\n    Attribute.prototype.ATTR_GUID;\n    /** @type {?} */\n    Attribute.prototype.RELATION_ID;\n    /** @type {?} */\n    Attribute.prototype.ATTR_NAME;\n    /** @type {?} */\n    Attribute.prototype.ATTR_DESC;\n    /** @type {?} */\n    Attribute.prototype.DATA_ELEMENT;\n    /** @type {?} */\n    Attribute.prototype.SEARCH_HELP_ID;\n    /** @type {?} */\n    Attribute.prototype.SEARCH_HELP_EXPORT_FIELD;\n    /** @type {?} */\n    Attribute.prototype.DOMAIN_ID;\n    /** @type {?} */\n    Attribute.prototype.DOMAIN_TYPE;\n    /** @type {?} */\n    Attribute.prototype.REG_EXPR;\n    /** @type {?} */\n    Attribute.prototype.DOMAIN_ENTITY_ID;\n    /** @type {?} */\n    Attribute.prototype.DOMAIN_RELATION_ID;\n    /** @type {?} */\n    Attribute.prototype.LABEL_TEXT;\n    /** @type {?} */\n    Attribute.prototype.LIST_HEADER_TEXT;\n    /** @type {?} */\n    Attribute.prototype.DATA_TYPE;\n    /** @type {?} */\n    Attribute.prototype.DATA_LENGTH;\n    /** @type {?} */\n    Attribute.prototype.DECIMAL;\n    /** @type {?} */\n    Attribute.prototype.CAPITAL_ONLY;\n    /** @type {?} */\n    Attribute.prototype.UNSIGNED;\n    /** @type {?} */\n    Attribute.prototype.ORDER;\n    /** @type {?} */\n    Attribute.prototype.PRIMARY_KEY;\n    /** @type {?} */\n    Attribute.prototype.AUTO_INCREMENT;\n}\nclass Role {\n}\nif (false) {\n    /** @type {?} */\n    Role.prototype.ROLE_ID;\n    /** @type {?} */\n    Role.prototype.ROLE_DESC;\n    /** @type {?} */\n    Role.prototype.CONDITIONAL_ATTR;\n    /** @type {?} */\n    Role.prototype.CONDITIONAL_VALUE;\n    /** @type {?} */\n    Role.prototype.RELATIONS;\n    /** @type {?} */\n    Role.prototype.RELATIONSHIPS;\n}\nclass RoleRelation {\n}\nif (false) {\n    /** @type {?} */\n    RoleRelation.prototype.RELATION_ID;\n    /** @type {?} */\n    RoleRelation.prototype.RELATION_DESC;\n    /** @type {?} */\n    RoleRelation.prototype.CARDINALITY;\n}\nclass RelationshipMeta {\n}\nif (false) {\n    /** @type {?} */\n    RelationshipMeta.prototype.RELATIONSHIP_ID;\n    /** @type {?} */\n    RelationshipMeta.prototype.RELATIONSHIP_DESC;\n    /** @type {?} */\n    RelationshipMeta.prototype.VALID_PERIOD;\n    /** @type {?} */\n    RelationshipMeta.prototype.SINGLETON;\n    /** @type {?} */\n    RelationshipMeta.prototype.CREATE_BY;\n    /** @type {?} */\n    RelationshipMeta.prototype.CREATE_TIME;\n    /** @type {?} */\n    RelationshipMeta.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    RelationshipMeta.prototype.LAST_CHANGE_TIME;\n    /** @type {?} */\n    RelationshipMeta.prototype.INVOLVES;\n}\nclass Involve {\n}\nif (false) {\n    /** @type {?} */\n    Involve.prototype.ROLE_ID;\n    /** @type {?} */\n    Involve.prototype.ROLE_DESC;\n    /** @type {?} */\n    Involve.prototype.CARDINALITY;\n    /** @type {?} */\n    Involve.prototype.DIRECTION;\n}\nclass RelationMeta {\n}\nif (false) {\n    /** @type {?} */\n    RelationMeta.prototype.RELATION_ID;\n    /** @type {?} */\n    RelationMeta.prototype.RELATION_DESC;\n    /** @type {?} */\n    RelationMeta.prototype.VERSION_NO;\n    /** @type {?} */\n    RelationMeta.prototype.ATTRIBUTES;\n    /** @type {?} */\n    RelationMeta.prototype.ASSOCIATIONS;\n}\nclass Association {\n}\nif (false) {\n    /** @type {?} */\n    Association.prototype.ASSOCIATION_NAME;\n    /** @type {?} */\n    Association.prototype.RIGHT_RELATION_ID;\n    /** @type {?} */\n    Association.prototype.CARDINALITY;\n    /** @type {?} */\n    Association.prototype.FOREIGN_KEY_CHECK;\n    /** @type {?} */\n    Association.prototype.FIELDS_MAPPING;\n}\nclass FieldsMappingPair {\n}\nif (false) {\n    /** @type {?} */\n    FieldsMappingPair.prototype.LEFT_FIELD;\n    /** @type {?} */\n    FieldsMappingPair.prototype.RIGHT_FIELD;\n}\nclass EntityRelation {\n}\nif (false) {\n    /** @type {?} */\n    EntityRelation.prototype.RELATION_ID;\n    /** @type {?} */\n    EntityRelation.prototype.RELATION_DESC;\n    /** @type {?} */\n    EntityRelation.prototype.CARDINALITY;\n    /** @type {?} */\n    EntityRelation.prototype.ROLE_ID;\n    /** @type {?} */\n    EntityRelation.prototype.CONDITIONAL_ATTR;\n    /** @type {?} */\n    EntityRelation.prototype.CONDITIONAL_VALUE;\n    /** @type {?} */\n    EntityRelation.prototype.EMPTY;\n    /** @type {?} */\n    EntityRelation.prototype.DISABLED;\n    /** @type {?} */\n    EntityRelation.prototype.ATTRIBUTES;\n}\nclass Selection {\n}\nif (false) {\n    /** @type {?} */\n    Selection.prototype.RELATION_ID;\n    /** @type {?} */\n    Selection.prototype.FIELD_NAME;\n    /** @type {?} */\n    Selection.prototype.OPERATOR;\n    /** @type {?} */\n    Selection.prototype.LOW;\n    /** @type {?} */\n    Selection.prototype.HIGH;\n}\nclass Projection {\n}\nif (false) {\n    /** @type {?} */\n    Projection.prototype.RELATION_ID;\n    /** @type {?} */\n    Projection.prototype.FIELD_NAME;\n    /** @type {?} */\n    Projection.prototype.ALIAS;\n}\nclass QueryObject {\n}\nif (false) {\n    /** @type {?} */\n    QueryObject.prototype.ENTITY_ID;\n    /** @type {?} */\n    QueryObject.prototype.RELATION_ID;\n    /** @type {?} */\n    QueryObject.prototype.PROJECTION;\n    /** @type {?} */\n    QueryObject.prototype.FILTER;\n    /** @type {?} */\n    QueryObject.prototype.SORT;\n}\nclass Sort {\n}\nif (false) {\n    /** @type {?} */\n    Sort.prototype.FIELD_NAME;\n    /** @type {?} */\n    Sort.prototype.RELATION_ID;\n    /** @type {?} */\n    Sort.prototype.ORDER;\n}\nclass EntityType {\n}\nif (false) {\n    /** @type {?} */\n    EntityType.prototype.ENTITY_ID;\n    /** @type {?} */\n    EntityType.prototype.ENTITY_DESC;\n    /** @type {?} */\n    EntityType.prototype.VERSION_NO;\n    /** @type {?} */\n    EntityType.prototype.CREATE_BY;\n    /** @type {?} */\n    EntityType.prototype.CREATE_TIME;\n    /** @type {?} */\n    EntityType.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    EntityType.prototype.LAST_CHANGE_TIME;\n}\nclass Relation {\n}\nif (false) {\n    /** @type {?} */\n    Relation.prototype.RELATION_ID;\n    /** @type {?} */\n    Relation.prototype.RELATION_DESC;\n    /** @type {?} */\n    Relation.prototype.VERSION_NO;\n    /** @type {?} */\n    Relation.prototype.CREATE_BY;\n    /** @type {?} */\n    Relation.prototype.CREATE_TIME;\n    /** @type {?} */\n    Relation.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    Relation.prototype.LAST_CHANGE_TIME;\n}\nclass RelationshipH {\n}\nif (false) {\n    /** @type {?} */\n    RelationshipH.prototype.RELATIONSHIP_ID;\n    /** @type {?} */\n    RelationshipH.prototype.RELATIONSHIP_DESC;\n    /** @type {?} */\n    RelationshipH.prototype.VALID_PERIOD;\n    /** @type {?} */\n    RelationshipH.prototype.VERSION_NO;\n    /** @type {?} */\n    RelationshipH.prototype.CREATE_BY;\n    /** @type {?} */\n    RelationshipH.prototype.CREATE_TIME;\n    /** @type {?} */\n    RelationshipH.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    RelationshipH.prototype.LAST_CHANGE_TIME;\n}\nclass RoleH {\n}\nif (false) {\n    /** @type {?} */\n    RoleH.prototype.ROLE_ID;\n    /** @type {?} */\n    RoleH.prototype.ROLE_DESC;\n    /** @type {?} */\n    RoleH.prototype.VERSION_NO;\n    /** @type {?} */\n    RoleH.prototype.CREATE_BY;\n    /** @type {?} */\n    RoleH.prototype.CREATE_TIME;\n    /** @type {?} */\n    RoleH.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    RoleH.prototype.LAST_CHANGE_TIME;\n}\nclass RoleMeta {\n}\nif (false) {\n    /** @type {?} */\n    RoleMeta.prototype.ROLE_ID;\n    /** @type {?} */\n    RoleMeta.prototype.ROLE_DESC;\n    /** @type {?} */\n    RoleMeta.prototype.CREATE_BY;\n    /** @type {?} */\n    RoleMeta.prototype.CREATE_TIME;\n    /** @type {?} */\n    RoleMeta.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    RoleMeta.prototype.LAST_CHANGE_TIME;\n    /** @type {?} */\n    RoleMeta.prototype.RELATIONS;\n}\nclass DataElementH {\n}\nif (false) {\n    /** @type {?} */\n    DataElementH.prototype.ELEMENT_ID;\n    /** @type {?} */\n    DataElementH.prototype.ELEMENT_DESC;\n    /** @type {?} */\n    DataElementH.prototype.VERSION_NO;\n    /** @type {?} */\n    DataElementH.prototype.CREATE_BY;\n    /** @type {?} */\n    DataElementH.prototype.CREATE_TIME;\n    /** @type {?} */\n    DataElementH.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    DataElementH.prototype.LAST_CHANGE_TIME;\n}\nclass DataElementMeta {\n}\nif (false) {\n    /** @type {?} */\n    DataElementMeta.prototype.ELEMENT_ID;\n    /** @type {?} */\n    DataElementMeta.prototype.ELEMENT_DESC;\n    /** @type {?} */\n    DataElementMeta.prototype.LABEL_TEXT;\n    /** @type {?} */\n    DataElementMeta.prototype.LIST_HEADER_TEXT;\n    /** @type {?} */\n    DataElementMeta.prototype.DOMAIN_ID;\n    /** @type {?} */\n    DataElementMeta.prototype.DATA_TYPE;\n    /** @type {?} */\n    DataElementMeta.prototype.DATA_LENGTH;\n    /** @type {?} */\n    DataElementMeta.prototype.DECIMAL;\n    /** @type {?} */\n    DataElementMeta.prototype.SEARCH_HELP_ID;\n    /** @type {?} */\n    DataElementMeta.prototype.SEARCH_HELP_EXPORT_FIELD;\n    /** @type {?} */\n    DataElementMeta.prototype.PARAMETER_ID;\n    /** @type {?} */\n    DataElementMeta.prototype.VERSION_NO;\n    /** @type {?} */\n    DataElementMeta.prototype.CREATE_BY;\n    /** @type {?} */\n    DataElementMeta.prototype.CREATE_TIME;\n    /** @type {?} */\n    DataElementMeta.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    DataElementMeta.prototype.LAST_CHANGE_TIME;\n}\nclass DataDomainH {\n}\nif (false) {\n    /** @type {?} */\n    DataDomainH.prototype.DOMAIN_ID;\n    /** @type {?} */\n    DataDomainH.prototype.DOMAIN_DESC;\n    /** @type {?} */\n    DataDomainH.prototype.VERSION_NO;\n    /** @type {?} */\n    DataDomainH.prototype.CREATE_BY;\n    /** @type {?} */\n    DataDomainH.prototype.CREATE_TIME;\n    /** @type {?} */\n    DataDomainH.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    DataDomainH.prototype.LAST_CHANGE_TIME;\n}\nclass DataDomainMeta {\n}\nif (false) {\n    /** @type {?} */\n    DataDomainMeta.prototype.DOMAIN_ID;\n    /** @type {?} */\n    DataDomainMeta.prototype.DOMAIN_DESC;\n    /** @type {?} */\n    DataDomainMeta.prototype.DATA_TYPE;\n    /** @type {?} */\n    DataDomainMeta.prototype.DATA_LENGTH;\n    /** @type {?} */\n    DataDomainMeta.prototype.DOMAIN_TYPE;\n    /** @type {?} */\n    DataDomainMeta.prototype.DECIMAL;\n    /** @type {?} */\n    DataDomainMeta.prototype.UNSIGNED;\n    /** @type {?} */\n    DataDomainMeta.prototype.CAPITAL_ONLY;\n    /** @type {?} */\n    DataDomainMeta.prototype.REG_EXPR;\n    /** @type {?} */\n    DataDomainMeta.prototype.ENTITY_ID;\n    /** @type {?} */\n    DataDomainMeta.prototype.RELATION_ID;\n    /** @type {?} */\n    DataDomainMeta.prototype.DOMAIN_VALUES;\n    /** @type {?} */\n    DataDomainMeta.prototype.VERSION_NO;\n    /** @type {?} */\n    DataDomainMeta.prototype.CREATE_BY;\n    /** @type {?} */\n    DataDomainMeta.prototype.CREATE_TIME;\n    /** @type {?} */\n    DataDomainMeta.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    DataDomainMeta.prototype.LAST_CHANGE_TIME;\n}\nclass DataDomainValue {\n}\nif (false) {\n    /** @type {?} */\n    DataDomainValue.prototype.LOW_VALUE;\n    /** @type {?} */\n    DataDomainValue.prototype.LOW_VALUE_TEXT;\n    /** @type {?} */\n    DataDomainValue.prototype.HIGH_VALUE;\n}\nclass SearchHelpH {\n}\nif (false) {\n    /** @type {?} */\n    SearchHelpH.prototype.SEARCH_HELP_ID;\n    /** @type {?} */\n    SearchHelpH.prototype.SEARCH_HELP_DESC;\n    /** @type {?} */\n    SearchHelpH.prototype.VERSION_NO;\n    /** @type {?} */\n    SearchHelpH.prototype.CREATE_BY;\n    /** @type {?} */\n    SearchHelpH.prototype.CREATE_TIME;\n    /** @type {?} */\n    SearchHelpH.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    SearchHelpH.prototype.LAST_CHANGE_TIME;\n}\nclass SearchHelpMeta {\n}\nif (false) {\n    /** @type {?} */\n    SearchHelpMeta.prototype.SEARCH_HELP_ID;\n    /** @type {?} */\n    SearchHelpMeta.prototype.SEARCH_HELP_DESC;\n    /** @type {?} */\n    SearchHelpMeta.prototype.VERSION_NO;\n    /** @type {?} */\n    SearchHelpMeta.prototype.BEHAVIOUR;\n    /** @type {?} */\n    SearchHelpMeta.prototype.ENTITY_ID;\n    /** @type {?} */\n    SearchHelpMeta.prototype.RELATION_ID;\n    /** @type {?} */\n    SearchHelpMeta.prototype.MULTI;\n    /** @type {?} */\n    SearchHelpMeta.prototype.FUZZY_SEARCH;\n    /** @type {?} */\n    SearchHelpMeta.prototype.FIELDS;\n    /** @type {?} */\n    SearchHelpMeta.prototype.CREATE_BY;\n    /** @type {?} */\n    SearchHelpMeta.prototype.CREATE_TIME;\n    /** @type {?} */\n    SearchHelpMeta.prototype.LAST_CHANGE_BY;\n    /** @type {?} */\n    SearchHelpMeta.prototype.LAST_CHANGE_TIME;\n}\nclass SearchHelpFieldMeta {\n}\nif (false) {\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.RELATION_ID;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.FIELD_NAME;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.FIELD_DESC;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.LABEL_TEXT;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.LIST_HEADER_TEST;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.IMPORT;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.EXPORT;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.IE_FIELD_NAME;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.LIST_POSITION;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.FILTER_POSITION;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.FILTER_DISP_ONLY;\n    /** @type {?} */\n    SearchHelpFieldMeta.prototype.DEFAULT_VALUE;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ui-mapper.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass UiMapperService {\n    constructor() { }\n    /**\n     * Map a FormGroup to a JOR relation(with cardinality [0..1] and [1..1]) for adding or updating.\n     * @param {?} formGroup\n     * @param {?} keys\n     * @param {?=} isNew\n     * @return {?}\n     */\n    composeChangedRelation(formGroup, keys, isNew = true) {\n        if (!formGroup.dirty || !keys || Object.keys(keys).length === 0) {\n            return {};\n        }\n        /** @type {?} */\n        const changedRelation = { action: isNew ? 'add' : 'update' };\n        Object.keys(keys).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => changedRelation[key] = keys[key] || formGroup.value[key]));\n        Object.keys(formGroup.controls).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            /** @type {?} */\n            const control = formGroup.get(key);\n            if (control.dirty) {\n                changedRelation[key] = control.value;\n            }\n        }));\n        return changedRelation;\n    }\n    /**\n     * Map a FormArray to JOR relation(with cardinality [0..n] or [1..n]) for adding, updating, or deletion.\n     * @param {?} formArray\n     * @param {?} originalArray\n     * @param {?} keys\n     * @return {?}\n     */\n    composeChangedRelationArray(formArray, originalArray, keys) {\n        if (!formArray.dirty || !keys || Object.keys(keys).length === 0) {\n            return [];\n        }\n        if (!originalArray) {\n            originalArray = [];\n        }\n        /** @type {?} */\n        const changedRelationArray = [];\n        formArray.controls.forEach((/**\n         * @param {?} formGroup\n         * @return {?}\n         */\n        formGroup => {\n            if (formGroup.dirty) {\n                /** @type {?} */\n                const changedRelation = {};\n                changedRelationArray.push(changedRelation);\n                /** @type {?} */\n                const index = originalArray.findIndex((/**\n                 * @param {?} element\n                 * @return {?}\n                 */\n                element => {\n                    /** @type {?} */\n                    let found = true;\n                    Object.keys(keys).forEach((/**\n                     * @param {?} key\n                     * @return {?}\n                     */\n                    key => {\n                        if (keys[key]) {\n                            return;\n                        }\n                        found = found && (element[key] === formGroup.value[key]);\n                    }));\n                    return found;\n                }));\n                changedRelation['action'] = index === -1 ? 'add' : 'update';\n                Object.keys(keys).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                key => changedRelation[key] = keys[key] || formGroup.value[key]));\n                Object.keys(formGroup['controls']).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                key => {\n                    /** @type {?} */\n                    const control = formGroup.get(key);\n                    if (control.dirty) {\n                        changedRelation[key] = control.value;\n                    }\n                }));\n            }\n        }));\n        originalArray.forEach((/**\n         * @param {?} originalRelation\n         * @return {?}\n         */\n        originalRelation => {\n            /** @type {?} */\n            const index = formArray.controls.findIndex((/**\n             * @param {?} element\n             * @return {?}\n             */\n            element => {\n                /** @type {?} */\n                let found = true;\n                Object.keys(keys).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                key => {\n                    if (keys[key]) {\n                        return;\n                    }\n                    found = found && (element.value[key] === originalRelation[key]);\n                }));\n                return found;\n            }));\n            if (index === -1) {\n                /** @type {?} */\n                const deletedRelation = { action: 'delete' };\n                Object.keys(keys).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                key => deletedRelation[key] = keys[key] || originalRelation[key]));\n                changedRelationArray.push(deletedRelation);\n            }\n        }));\n        return changedRelationArray;\n    }\n    /**\n     * Map a FormArray to JOR relationships for adding, updating, or deletion.\n     * @param {?} relationshipID\n     * @param {?} partnerRoles\n     * @param {?} formArray\n     * @param {?} originalArray\n     * @param {?} nonRelationshipAttributes\n     * @return {?}\n     */\n    composeChangedRelationship(relationshipID, partnerRoles, formArray, originalArray, nonRelationshipAttributes) {\n        if (!formArray.dirty) {\n            return null;\n        }\n        /** @type {?} */\n        const relationship = {\n            RELATIONSHIP_ID: relationshipID,\n            values: []\n        };\n        formArray.controls.forEach((/**\n         * @param {?} formGroup\n         * @return {?}\n         */\n        formGroup => {\n            if (formGroup.dirty) {\n                /** @type {?} */\n                const changedRelationshipValue = {};\n                relationship.values.push(changedRelationshipValue);\n                if (formGroup.value['RELATIONSHIP_INSTANCE_GUID']) {\n                    changedRelationshipValue['action'] = 'update';\n                    changedRelationshipValue['RELATIONSHIP_INSTANCE_GUID'] = formGroup.value['RELATIONSHIP_INSTANCE_GUID'];\n                }\n                else {\n                    changedRelationshipValue['action'] = 'add';\n                    changedRelationshipValue['PARTNER_INSTANCES'] = [];\n                    partnerRoles.forEach((/**\n                     * @param {?} partnerRole\n                     * @return {?}\n                     */\n                    partnerRole => changedRelationshipValue['PARTNER_INSTANCES'].push({\n                        ENTITY_ID: partnerRole.ENTITY_ID,\n                        ROLE_ID: partnerRole.ROLE_ID,\n                        INSTANCE_GUID: formGroup.value[partnerRole.ROLE_ID + '_INSTANCE_GUID']\n                    })));\n                }\n                Object.keys(formGroup['controls']).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                key => {\n                    if (nonRelationshipAttributes.includes(key) || key.substr(-13) === 'INSTANCE_GUID') {\n                        return;\n                    }\n                    /** @type {?} */\n                    const control = formGroup.get(key);\n                    if (control.dirty) {\n                        changedRelationshipValue[key] = control.value;\n                    }\n                }));\n            }\n        }));\n        originalArray.forEach((/**\n         * @param {?} original\n         * @return {?}\n         */\n        original => {\n            if (formArray.controls.findIndex((/**\n             * @param {?} formGroup\n             * @return {?}\n             */\n            formGroup => formGroup.value['RELATIONSHIP_INSTANCE_GUID'] === original['RELATIONSHIP_INSTANCE_GUID'])) === -1) {\n                relationship.values.push({ action: 'delete', RELATIONSHIP_INSTANCE_GUID: original['RELATIONSHIP_INSTANCE_GUID'] });\n            }\n        }));\n        return relationship.values.length === 0 ? null : relationship;\n    }\n}\nUiMapperService.ɵfac = function UiMapperService_Factory(t) { return new (t || UiMapperService)(); };\n/** @nocollapse */\nUiMapperService.ctorParameters = () => [];\n/** @nocollapse */ UiMapperService.ɵprov = ɵɵdefineInjectable({ factory: function UiMapperService_Factory() { return new UiMapperService(); }, token: UiMapperService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UiMapperService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/entity.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\nclass EntityService {\n    /**\n     * @param {?} http\n     * @param {?} messageService\n     */\n    constructor(http, messageService) {\n        this.http = http;\n        this.messageService = messageService;\n        this.originalHost = '';\n        this.fakeUUIDs = [];\n        this.messageService.setMessageStore([\n            { msgCat: 'EXCEPTION', msgName: 'GENERIC',\n                msgText: { EN: { shortText: 'Exception Occurs in Operation: %s', longText: '%s2' } } },\n            { msgCat: 'EXCEPTION', msgName: 'SESSION_EXPIRED',\n                msgText: { EN: { shortText: 'Your session is expired',\n                        longText: 'Your session is expired, please <a href=\"/logon\">re-logon</a>' } } }\n        ], 'EN');\n    }\n    /**\n     * @param {?} host\n     * @return {?}\n     */\n    setOriginalHost(host) {\n        this.originalHost = host;\n    }\n    /**\n     * @param {?} msgStore\n     * @param {?} language\n     * @return {?}\n     */\n    setMessageStore(msgStore, language) {\n        this.messageService.setMessageStore(msgStore, language);\n    }\n    /**\n     * List all entity IDs in the system\n     * @return {?}\n     */\n    listEntityID() {\n        return this.http.get(this.originalHost + `/api/entity/EntityIDs`).pipe(catchError(this.handleError('listEntityID')));\n    }\n    /**\n     * List entity IDs by a given role ID\n     * @param {?} roleID\n     * @return {?}\n     */\n    listEntityIDbyRole(roleID) {\n        return this.http.get(this.originalHost + `/api/entity/EntityIDs/${roleID}`).pipe(catchError(this.handleError('listEntityIDbyRole')));\n    }\n    /**\n     * Return the entity meta for a given entity ID\n     * @param {?} entityID\n     * @return {?}\n     */\n    getEntityMeta(entityID) {\n        return this.http.get(this.originalHost + `/api/entity/meta/${entityID}`).pipe(catchError(this.handleError('getEntityMeta')));\n    }\n    /**\n     * Return a list of entity objects according to the description of a given query object\n     * @param {?} queryObject\n     * @return {?}\n     */\n    searchEntities(queryObject) {\n        return this.http.post(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(catchError(this.handleError('searchEntities')));\n    }\n    /**\n     * Return an entity instance for a given entity instance GUID\n     * @param {?} instanceGUID\n     * @return {?}\n     */\n    getEntityInstance(instanceGUID) {\n        return this.http.get(this.originalHost + `/api/entity/instance/${instanceGUID}`).pipe(catchError(this.handleError('getEntityInstance')));\n    }\n    /**\n     * Return a relation's meta data for a given relation ID\n     * @param {?} relationID\n     * @return {?}\n     */\n    getRelationMeta(relationID) {\n        return this.http.get(this.originalHost + `/api/relation/meta/${relationID}`).pipe(catchError(this.handleError('getRelationMeta')));\n    }\n    /**\n     * Return all relations' meta data for a given entity ID\n     * @param {?} entityID\n     * @return {?}\n     */\n    getRelationMetaOfEntity(entityID) {\n        return this.http.get(this.originalHost + `/api/relation/meta/entity/${entityID}`).pipe(catchError(this.handleError('getRelationMetaOfEntity')));\n    }\n    /**\n     * Create a new entity instance\n     * @param {?} instance\n     * @return {?}\n     */\n    createEntityInstance(instance) {\n        return this.http.post(this.originalHost + `/api/entity`, instance, httpOptions).pipe(catchError(this.handleError('createEntityInstance')));\n    }\n    /**\n     * Change an existing entity instance\n     * @param {?} instance\n     * @return {?}\n     */\n    changeEntityInstance(instance) {\n        return this.http.put(this.originalHost + `/api/entity`, instance, httpOptions).pipe(catchError(this.handleError('changeEntityInstance')));\n    }\n    /**\n     * Delete an entity instance from a given instance GUID\n     * @param {?} instanceGUID\n     * @return {?}\n     */\n    deleteEntityInstance(instanceGUID) {\n        return this.http.delete(this.originalHost + `/api/entity/instance/${instanceGUID}`).pipe(catchError(this.handleError('deleteEntityInstance')));\n    }\n    /**\n     * Return entity types(IDs) for a given search term\n     * @param {?} term\n     * @return {?}\n     */\n    listEntityType(term) {\n        return this.http.get(this.originalHost + `/api/model/entity-types?term=${term}`).pipe(catchError(this.handleError('listEntityType')));\n    }\n    /**\n     * Return the description of a given entity type(ID)\n     * @param {?} entityID\n     * @return {?}\n     */\n    getEntityTypeDesc(entityID) {\n        return this.http.get(this.originalHost + `/api/model/entity-types/${entityID}/desc`).pipe(catchError(this.handleError('getEntityTypeDesc')));\n    }\n    /**\n     * Save an entity type after changing or creation\n     * @param {?} entityType\n     * @return {?}\n     */\n    saveEntityType(entityType) {\n        return this.http.post(this.originalHost + `/api/model/entity-types`, entityType, httpOptions).pipe(catchError(this.handleError('saveEntityType')));\n    }\n    /**\n     * Return a list of relations in the system according to the search term\n     * @param {?} term\n     * @return {?}\n     */\n    listRelation(term) {\n        return this.http.get(this.originalHost + `/api/model/relations?term=${term}`).pipe(catchError(this.handleError('listRelation')));\n    }\n    /**\n     * Return the description of a given relation ID\n     * @param {?} relationID\n     * @return {?}\n     */\n    getRelationDesc(relationID) {\n        return this.http.get(this.originalHost + `/api/model/relations/${relationID}/desc`).pipe(catchError(this.handleError('getRelationDesc')));\n    }\n    /**\n     * Save a relation after changing or creation\n     * @param {?} relation\n     * @return {?}\n     */\n    saveRelation(relation) {\n        return this.http.post(this.originalHost + `/api/model/relations`, relation, httpOptions).pipe(catchError(this.handleError('saveRelation')));\n    }\n    /**\n     * Return a list of relationships in the system according to the search term\n     * @param {?} term\n     * @return {?}\n     */\n    listRelationship(term) {\n        return this.http.get(this.originalHost + `/api/model/relationships?term=${term}`).pipe(catchError(this.handleError('listRelationship')));\n    }\n    /**\n     * Return a relationship definition from a given relationship ID\n     * @param {?} relationshipID\n     * @return {?}\n     */\n    getRelationship(relationshipID) {\n        return this.http.get(this.originalHost + `/api/model/relationships/${relationshipID}`).pipe(catchError(this.handleError('getRelationship')));\n    }\n    /**\n     * Return the description of a given relationship ID\n     * @param {?} relationshipID\n     * @return {?}\n     */\n    getRelationshipDesc(relationshipID) {\n        return this.http.get(this.originalHost + `/api/model/relationships/${relationshipID}/desc`).pipe(catchError(this.handleError('getRelationshipDesc')));\n    }\n    /**\n     * Save a relationship after changing or creation\n     * @param {?} relationship\n     * @return {?}\n     */\n    saveRelationship(relationship) {\n        return this.http.post(this.originalHost + `/api/model/relationships`, relationship, httpOptions).pipe(catchError(this.handleError('saveRelationship')));\n    }\n    /**\n     * Return a list of roles in the system according to the search term\n     * @param {?} term\n     * @return {?}\n     */\n    listRole(term) {\n        return this.http.get(this.originalHost + `/api/model/roles?term=${term}`).pipe(catchError(this.handleError('listRole')));\n    }\n    /**\n     * Return a role definition from a given role ID\n     * @param {?} roleID\n     * @return {?}\n     */\n    getRole(roleID) {\n        return this.http.get(this.originalHost + `/api/model/roles/${roleID}`).pipe(catchError(this.handleError('getRole')));\n    }\n    /**\n     * Return the description of a given role ID\n     * @param {?} roleID\n     * @return {?}\n     */\n    getRoleDesc(roleID) {\n        return this.http.get(this.originalHost + `/api/model/roles/${roleID}/desc`).pipe(catchError(this.handleError('getRoleDesc')));\n    }\n    /**\n     * Save a role after changing or creation\n     * @param {?} role\n     * @return {?}\n     */\n    saveRole(role) {\n        return this.http.post(this.originalHost + `/api/model/roles`, role, httpOptions).pipe(catchError(this.handleError('saveRole')));\n    }\n    /**\n     * Return a list of data elements in the system according to the search term\n     * @param {?} term\n     * @return {?}\n     */\n    listDataElement(term) {\n        return this.http.get(this.originalHost + `/api/model/data-elements?term=${term}`).pipe(catchError(this.handleError('listDataElement')));\n    }\n    /**\n     * Return a data element definition from a given element ID\n     * @param {?} elementID\n     * @return {?}\n     */\n    getDataElement(elementID) {\n        return this.http.get(this.originalHost + `/api/model/data-elements/${elementID}`).pipe(catchError(this.handleError('getDataElement')));\n    }\n    /**\n     * Return the description of a given data element ID\n     * @param {?} elementID\n     * @return {?}\n     */\n    getDataElementDesc(elementID) {\n        return this.http.get(this.originalHost + `/api/model/data-elements/${elementID}/desc`).pipe(catchError(this.handleError('getDataElementDesc')));\n    }\n    /**\n     * Save a data element after changing or creation\n     * @param {?} element\n     * @return {?}\n     */\n    saveDataElement(element) {\n        return this.http.post(this.originalHost + `/api/model/data-elements`, element, httpOptions).pipe(catchError(this.handleError('saveDataElement')));\n    }\n    /**\n     * Return a list of data domains in the system according to the search term\n     * @param {?} term\n     * @return {?}\n     */\n    listDataDomain(term) {\n        return this.http.get(this.originalHost + `/api/model/data-domains?term=${term}`).pipe(catchError(this.handleError('listDataDomain')));\n    }\n    /**\n     * Return a data domain definition from a given domain ID\n     * @param {?} domainID\n     * @return {?}\n     */\n    getDataDomain(domainID) {\n        return this.http.get(this.originalHost + `/api/model/data-domains/${domainID}`).pipe(catchError(this.handleError('getDataDomain')));\n    }\n    /**\n     * Return the description of a given data domain ID\n     * @param {?} domainID\n     * @return {?}\n     */\n    getDataDomainDesc(domainID) {\n        return this.http.get(this.originalHost + `/api/model/data-domains/${domainID}/desc`).pipe(catchError(this.handleError('getDataDomainDesc')));\n    }\n    /**\n     * Save a data domain after changing or creation\n     * @param {?} domain\n     * @return {?}\n     */\n    saveDataDomain(domain) {\n        return this.http.post(this.originalHost + `/api/model/data-domains`, domain, httpOptions).pipe(catchError(this.handleError('saveDataDomain')));\n    }\n    /**\n     * Return a list of search helps in the system according to the search term\n     * @param {?} term\n     * @return {?}\n     */\n    listSearchHelp(term) {\n        return this.http.get(this.originalHost + `/api/model/search-helps?term=${term}`).pipe(catchError(this.handleError('listSearchHelp')));\n    }\n    /**\n     * Return a search help definition from a given domain ID\n     * @param {?} searchHelpID\n     * @return {?}\n     */\n    getSearchHelp(searchHelpID) {\n        return this.http.get(this.originalHost + `/api/model/search-helps/${searchHelpID}`).pipe(catchError(this.handleError('getSearchHelp')));\n    }\n    /**\n     * Return the description of a given search help ID\n     * @param {?} searchHelpID\n     * @return {?}\n     */\n    getSearchHelpDesc(searchHelpID) {\n        return this.http.get(this.originalHost + `/api/model/search-helps/${searchHelpID}/desc`).pipe(catchError(this.handleError('getSearchHelpDesc')));\n    }\n    /**\n     * Save a search help after changing or creation\n     * @param {?} searchHelp\n     * @return {?}\n     */\n    saveSearchHelp(searchHelp) {\n        return this.http.post(this.originalHost + `/api/model/search-helps`, searchHelp, httpOptions).pipe(catchError(this.handleError('saveSearchHelp')));\n    }\n    /**\n     * Get data element meta\n     * @param {?} elementID\n     * @return {?}\n     */\n    getElementMeta(elementID) {\n        return this.http.get(this.originalHost + `/api/model/element-meta/${elementID}`).pipe(catchError(this.handleError('getElementMeta')));\n    }\n    /**\n     * Return a fake relationship ID before saving\n     * @return {?}\n     */\n    generateFakeRelationshipUUID() {\n        /** @type {?} */\n        const nextPosition = this.fakeUUIDs.length + 1;\n        /** @type {?} */\n        const fakeUUID = 'NewRelationship_' + nextPosition;\n        this.fakeUUIDs.push(fakeUUID);\n        return fakeUUID;\n    }\n    /**\n     * @private\n     * @template T\n     * @param {?=} operation\n     * @param {?=} result\n     * @return {?}\n     */\n    handleError(operation = 'operation', result) {\n        return (/**\n         * @param {?} error\n         * @return {?}\n         */\n        (error) => {\n            // TODO: send the error to remote logging infrastructure\n            console.error(error); // log to console instead\n            if (error.status === 401) {\n                this.messageService.addMessage('EXCEPTION', 'SESSION_EXPIRED', messageType.Exception);\n            }\n            else {\n                this.messageService.addMessage('EXCEPTION', 'GENERIC', messageType.Exception, operation, error.message);\n            }\n            // Let the app keep running by returning an empty result.\n            return of((/** @type {?} */ (result)));\n        });\n    }\n}\nEntityService.ɵfac = function EntityService_Factory(t) { return new (t || EntityService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient), ɵngcc0.ɵɵinject(ɵngcc2.MessageService)); };\n/** @nocollapse */\nEntityService.ctorParameters = () => [\n    { type: HttpClient },\n    { type: MessageService }\n];\n/** @nocollapse */ EntityService.ɵprov = ɵɵdefineInjectable({ factory: function EntityService_Factory() { return new EntityService(ɵɵinject(HttpClient), ɵɵinject(MessageService)); }, token: EntityService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EntityService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc1.HttpClient }, { type: ɵngcc2.MessageService }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    EntityService.prototype.originalHost;\n    /**\n     * @type {?}\n     * @private\n     */\n    EntityService.prototype.fakeUUIDs;\n    /**\n     * @type {?}\n     * @private\n     */\n    EntityService.prototype.http;\n    /**\n     * @type {?}\n     * @private\n     */\n    EntityService.prototype.messageService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/search-help/search-help.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SearchHelp {\n}\nif (false) {\n    /** @type {?} */\n    SearchHelp.prototype.OBJECT_NAME;\n    /** @type {?} */\n    SearchHelp.prototype.METHOD;\n    /** @type {?} */\n    SearchHelp.prototype.BEHAVIOUR;\n    /** @type {?} */\n    SearchHelp.prototype.MULTI;\n    /** @type {?} */\n    SearchHelp.prototype.FUZZY_SEARCH;\n    /** @type {?} */\n    SearchHelp.prototype.READ_ONLY;\n    /** @type {?} */\n    SearchHelp.prototype.ENTITY_ID;\n    /** @type {?} */\n    SearchHelp.prototype.RELATION_ID;\n    /** @type {?} */\n    SearchHelp.prototype.FIELDS;\n}\nclass SearchHelpField {\n}\nif (false) {\n    /** @type {?} */\n    SearchHelpField.prototype.RELATION_ID;\n    /** @type {?} */\n    SearchHelpField.prototype.FIELD_NAME;\n    /** @type {?} */\n    SearchHelpField.prototype.LABEL_TEXT;\n    /** @type {?} */\n    SearchHelpField.prototype.LIST_HEADER_TEXT;\n    /** @type {?} */\n    SearchHelpField.prototype.IMPORT;\n    /** @type {?} */\n    SearchHelpField.prototype.EXPORT;\n    /** @type {?} */\n    SearchHelpField.prototype.IE_FIELD_NAME;\n    /** @type {?} */\n    SearchHelpField.prototype.LIST_POSITION;\n    /** @type {?} */\n    SearchHelpField.prototype.FILTER_POSITION;\n    /** @type {?} */\n    SearchHelpField.prototype.FILTER_DISP_ONLY;\n    /** @type {?} */\n    SearchHelpField.prototype.DEFAULT_VALUE;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/search-help/search-help.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SearchHelpComponent {\n    /**\n     * @param {?} fb\n     * @param {?} entityService\n     */\n    constructor(fb, entityService) {\n        this.fb = fb;\n        this.entityService = entityService;\n        this.isSearchHelpModalShown = false;\n        this.isFilterShown = false;\n        this.isSelectAllChecked = false;\n        this.selectedIndex = -1;\n        this.filterFields = [];\n        this.listFields = [];\n        this.listData = [];\n        this.preSearchHelpParas = {};\n    }\n    /**\n     * @return {?}\n     */\n    get displaySearchHelpModal() { return this.isSearchHelpModalShown ? 'block' : 'none'; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.filterFieldsFormGroup = this.fb.group({});\n    }\n    /**\n     * Open an search help dialog with free style\n     * @param {?} searchHelp\n     * @param {?} exportControl\n     * @param {?=} afterExportFn\n     * @return {?}\n     */\n    openSearchHelpModal(searchHelp, exportControl, afterExportFn) {\n        if (this.searchHelp !== searchHelp) {\n            this.listData = [];\n            this.searchHelp = searchHelp;\n            this.filterFieldsFormGroup = this.fb.group({});\n            this.filterFields = this.searchHelp.FIELDS.filter((/**\n             * @param {?} fieldMeta\n             * @return {?}\n             */\n            fieldMeta => fieldMeta.FILTER_POSITION));\n            this.filterFields.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => a.FILTER_POSITION - b.FILTER_POSITION));\n            this.filterFields.forEach((/**\n             * @param {?} fieldMeta\n             * @return {?}\n             */\n            fieldMeta => {\n                if (fieldMeta.IMPORT) {\n                    /** @type {?} */\n                    const ieFieldName = fieldMeta.IE_FIELD_NAME || fieldMeta.FIELD_NAME;\n                    if (exportControl.get(ieFieldName)) {\n                        fieldMeta.DEFAULT_VALUE = exportControl.get(ieFieldName).value;\n                    }\n                }\n                this.filterFieldsFormGroup.addControl(fieldMeta.FIELD_NAME, this.fb.control(fieldMeta.DEFAULT_VALUE));\n            }));\n            this.listFields = this.searchHelp.FIELDS.filter((/**\n             * @param {?} fieldMeta\n             * @return {?}\n             */\n            fieldMeta => fieldMeta.LIST_POSITION));\n            this.listFields.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => a.LIST_POSITION - b.LIST_POSITION));\n        }\n        this.exportControl = exportControl;\n        this.afterExportFn = afterExportFn;\n        if (this.searchHelp.BEHAVIOUR === 'A') {\n            this.search();\n            this.isFilterShown = false;\n        }\n        else {\n            this.isFilterShown = true;\n        }\n        this.isSearchHelpModalShown = true;\n    }\n    /**\n     * Open a search help dialog based on the given entity and one of its relation\n     * @param {?} entityID\n     * @param {?} relationID\n     * @param {?} exportControl\n     * @param {?} readonly\n     * @param {?=} exportField\n     * @param {?=} domainID\n     * @param {?=} afterExportFn\n     * @return {?}\n     */\n    openSearchHelpModalByEntity(entityID, relationID, exportControl, readonly, exportField, domainID, afterExportFn) {\n        /** @type {?} */\n        const currentSearchHelpParas = {\n            'entityID': entityID,\n            'relationID': relationID,\n            'exportField': exportField,\n            'domainID': domainID\n        };\n        if (this._isPreviousSearchHelp(currentSearchHelpParas)) {\n            this.searchHelp.READ_ONLY = readonly;\n            this.openSearchHelpModal(this.searchHelp, exportControl, afterExportFn);\n        }\n        else {\n            this.listData = [];\n            this.preSearchHelpParas = currentSearchHelpParas;\n            /** @type {?} */\n            const searchHelp = new SearchHelp();\n            searchHelp.OBJECT_NAME = entityID;\n            searchHelp.METHOD = (/**\n             * @param {?} entityService\n             * @return {?}\n             */\n            function (entityService) {\n                return (/**\n                 * @param {?} searchTerm\n                 * @return {?}\n                 */\n                (searchTerm) => entityService.searchEntities(searchTerm));\n            })(this.entityService);\n            searchHelp.BEHAVIOUR = 'M';\n            searchHelp.MULTI = false;\n            searchHelp.FUZZY_SEARCH = false;\n            searchHelp.FIELDS = [];\n            searchHelp.READ_ONLY = readonly;\n            searchHelp.ENTITY_ID = entityID;\n            searchHelp.RELATION_ID = relationID;\n            this.entityService.getRelationMeta(relationID)\n                .subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const relationMeta = (/** @type {?} */ (data));\n                relationMeta.ATTRIBUTES.forEach((/**\n                 * @param {?} attribute\n                 * @return {?}\n                 */\n                attribute => searchHelp.FIELDS.push({\n                    FIELD_NAME: attribute.ATTR_NAME,\n                    LABEL_TEXT: attribute.LABEL_TEXT,\n                    LIST_HEADER_TEXT: attribute.LIST_HEADER_TEXT,\n                    IE_FIELD_NAME: exportField && domainID && domainID === attribute.DOMAIN_ID ? exportField : null,\n                    IMPORT: attribute.PRIMARY_KEY || attribute.DOMAIN_ID === domainID,\n                    EXPORT: attribute.PRIMARY_KEY || attribute.DOMAIN_ID === domainID,\n                    LIST_POSITION: attribute.ORDER,\n                    FILTER_POSITION: attribute.ORDER\n                })));\n                searchHelp.FIELDS.push({\n                    FIELD_NAME: 'INSTANCE_GUID',\n                    LIST_HEADER_TEXT: 'GUID',\n                    IMPORT: false,\n                    EXPORT: true,\n                    LIST_POSITION: 999,\n                    FILTER_POSITION: 0\n                });\n                this.openSearchHelpModal(searchHelp, exportControl, afterExportFn);\n            }));\n        }\n    }\n    /**\n     * Open a search help dialog based on the given search help\n     * @param {?} searchHelpID\n     * @param {?} searchHelpExportField\n     * @param {?} exportField\n     * @param {?} exportControl\n     * @param {?} readonly\n     * @param {?=} afterExportFn\n     * @return {?}\n     */\n    openSearchHelpModalBySearchHelp(searchHelpID, searchHelpExportField, exportField, exportControl, readonly, afterExportFn) {\n        /** @type {?} */\n        const currentSearchHelpParas = {\n            'searchHelpID': searchHelpID,\n            'searchHelpExportField': searchHelpExportField,\n            'exportField': exportField\n        };\n        if (this._isPreviousSearchHelp(currentSearchHelpParas)) {\n            this.searchHelp.READ_ONLY = readonly;\n            this.openSearchHelpModal(this.searchHelp, exportControl, afterExportFn);\n        }\n        else {\n            this.listData = [];\n            this.preSearchHelpParas = currentSearchHelpParas;\n            /** @type {?} */\n            const searchHelp = new SearchHelp();\n            this.entityService.getSearchHelp(searchHelpID)\n                .subscribe((/**\n             * @param {?} searchHelpMeta\n             * @return {?}\n             */\n            (searchHelpMeta) => {\n                searchHelp.OBJECT_NAME = searchHelpMeta.SEARCH_HELP_DESC + '(' + searchHelpMeta.SEARCH_HELP_ID + ')';\n                searchHelp.METHOD = (/**\n                 * @param {?} entityService\n                 * @return {?}\n                 */\n                function (entityService) {\n                    return (/**\n                     * @param {?} searchTerm\n                     * @return {?}\n                     */\n                    (searchTerm) => entityService.searchEntities(searchTerm));\n                })(this.entityService);\n                searchHelp.BEHAVIOUR = searchHelpMeta.BEHAVIOUR;\n                searchHelp.MULTI = searchHelpMeta.MULTI;\n                searchHelp.FUZZY_SEARCH = searchHelpMeta.FUZZY_SEARCH;\n                searchHelp.READ_ONLY = readonly;\n                searchHelp.ENTITY_ID = searchHelpMeta.ENTITY_ID;\n                searchHelp.RELATION_ID = searchHelpMeta.RELATION_ID;\n                searchHelp.FIELDS = searchHelpMeta.FIELDS;\n                /** @type {?} */\n                const searchHelpField = searchHelp.FIELDS.find((/**\n                 * @param {?} field\n                 * @return {?}\n                 */\n                field => (field.IE_FIELD_NAME || field.FIELD_NAME) === searchHelpExportField));\n                searchHelpField.IE_FIELD_NAME = exportField;\n                searchHelpField.EXPORT = true;\n                searchHelpField.IMPORT = true;\n                searchHelp.FIELDS.push({\n                    FIELD_NAME: 'INSTANCE_GUID',\n                    LIST_HEADER_TEXT: 'GUID',\n                    IMPORT: false,\n                    EXPORT: true,\n                    LIST_POSITION: 999,\n                    FILTER_POSITION: 0\n                });\n                this.openSearchHelpModal(searchHelp, exportControl, afterExportFn);\n            }));\n        }\n    }\n    /**\n     * @param {?} currentSearchHelpParas\n     * @return {?}\n     */\n    _isPreviousSearchHelp(currentSearchHelpParas) {\n        return JSON.stringify(this.preSearchHelpParas) === JSON.stringify(currentSearchHelpParas);\n    }\n    /**\n     * @return {?}\n     */\n    search() {\n        /** @type {?} */\n        let searchTerm;\n        if (this.searchHelp.FUZZY_SEARCH) {\n            searchTerm = this.fuzzySearchTerm || '';\n        }\n        else {\n            searchTerm = new QueryObject();\n            searchTerm.ENTITY_ID = this.searchHelp.ENTITY_ID;\n            searchTerm.RELATION_ID = this.searchHelp.RELATION_ID;\n            searchTerm.FILTER = [];\n            this.filterFields.forEach((/**\n             * @param {?} fieldMeta\n             * @return {?}\n             */\n            fieldMeta => {\n                /** @type {?} */\n                const fieldValue = this.filterFieldsFormGroup.get(fieldMeta.FIELD_NAME).value;\n                if (fieldValue) {\n                    if (fieldValue.includes('*') || fieldValue.includes('%')) {\n                        searchTerm.FILTER.push({ RELATION_ID: fieldMeta.RELATION_ID,\n                            FIELD_NAME: fieldMeta.FIELD_NAME, OPERATOR: 'CN', LOW: fieldValue });\n                    }\n                    else {\n                        searchTerm.FILTER.push({ RELATION_ID: fieldMeta.RELATION_ID,\n                            FIELD_NAME: fieldMeta.FIELD_NAME, OPERATOR: 'EQ', LOW: fieldValue });\n                    }\n                }\n            }));\n            searchTerm.PROJECTION = [];\n            this.listFields.forEach((/**\n             * @param {?} fieldMeta\n             * @return {?}\n             */\n            fieldMeta => {\n                searchTerm.PROJECTION.push({ RELATION_ID: fieldMeta.RELATION_ID, FIELD_NAME: fieldMeta.FIELD_NAME });\n            }));\n        }\n        this.listData = [];\n        this.isSelectAllChecked = false;\n        if (typeof this.searchHelp.METHOD === 'function') {\n            /** @type {?} */\n            const searchHelpMethod = (/** @type {?} */ (this.searchHelp.METHOD));\n            searchHelpMethod(searchTerm).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => this._generateSearchList(data)));\n        }\n        else if (Array.isArray(this.searchHelp.METHOD)) {\n            this._generateSearchList(this.searchHelp.METHOD);\n        }\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    _generateSearchList(data) {\n        data.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => {\n            /** @type {?} */\n            const listItem = { SELECTED: '' };\n            this.listFields.forEach((/**\n             * @param {?} field\n             * @return {?}\n             */\n            field => listItem[field.FIELD_NAME] = item[field.FIELD_NAME]));\n            this.listData.push(listItem);\n        }));\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    enterSearch($event) {\n        if ($event.keyCode === 13) {\n            this.search();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    showFilter() {\n        this.isFilterShown = true;\n    }\n    /**\n     * @return {?}\n     */\n    hideFilter() {\n        this.isFilterShown = false;\n    }\n    /**\n     * @return {?}\n     */\n    selectAll() {\n        this.isSelectAllChecked = !this.isSelectAllChecked;\n        this.listData.forEach((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => data.SELECTED = !data.SELECTED));\n    }\n    /**\n     * @return {?}\n     */\n    confirmSelection() {\n        // TODO: Currently, only single selection is supported. Multiple selection in later time\n        if (this.searchHelp.READ_ONLY) {\n            return;\n        }\n        this.listFields.forEach((/**\n         * @param {?} listField\n         * @return {?}\n         */\n        listField => {\n            if (this.exportControl instanceof FormGroup) {\n                /** @type {?} */\n                const exportControl = (/** @type {?} */ (this.exportControl));\n                /** @type {?} */\n                const ieFieldName = listField.IE_FIELD_NAME || listField.FIELD_NAME;\n                /** @type {?} */\n                const exportFieldControl = exportControl.get(ieFieldName);\n                if (listField.EXPORT && exportFieldControl) {\n                    exportFieldControl.setValue(this.listData[this.selectedIndex][listField.FIELD_NAME]);\n                    exportFieldControl.markAsDirty();\n                }\n            }\n            else {\n                if (listField.EXPORT) {\n                    this.exportControl[listField.FIELD_NAME] = this.listData[this.selectedIndex][listField.FIELD_NAME];\n                }\n            }\n        }));\n        if (this.afterExportFn) {\n            this.afterExportFn();\n        }\n        this.listData = [];\n        this.isSearchHelpModalShown = false;\n    }\n    /**\n     * @return {?}\n     */\n    closeSearchHelpModal() {\n        this.isSearchHelpModalShown = false;\n    }\n}\nSearchHelpComponent.ɵfac = function SearchHelpComponent_Factory(t) { return new (t || SearchHelpComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormBuilder), ɵngcc0.ɵɵdirectiveInject(EntityService)); };\nSearchHelpComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SearchHelpComponent, selectors: [[\"dk-app-search-help\"]], decls: 26, vars: 15, consts: [[\"id\", \"searchHelp\", \"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", \"fade\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-centered\", \"modal-lg\"], [1, \"modal-content\", \"dk-search-help-content\"], [1, \"modal-header\", \"dk-search-help-header\"], [\"id\", \"addRelationship\", 1, \"modal-title\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [\"class\", \"card mb-2\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-link float-right\", 3, \"click\", 4, \"ngIf\"], [1, \"table\", \"table-bordered\", \"table-sm\", \"table-hover\", \"dk-search-table\"], [1, \"thead-light\"], [\"scope\", \"col\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", \"click\", 4, \"ngIf\"], [3, \"display\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\", \"dk-search-help-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"card\", \"mb-2\"], [\"class\", \"mt-2 mx-2 row\", 4, \"ngIf\"], [1, \"mt-2\", \"mx-2\", \"row\", 3, \"formGroup\"], [\"class\", \"col-6 form-group row\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-2\"], [\"type\", \"button\", \"id\", \"search\", 1, \"btn\", \"btn-sm\", \"btn-primary\", \"float-right\", \"mr-2\", 3, \"click\"], [1, \"mt-2\", \"mx-2\", \"row\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"keyup\"], [1, \"col-6\", \"form-group\", \"row\"], [1, \"col-6\", \"col-form-label\", \"col-form-label-sm\", \"text-right\", 3, \"for\"], [\"type\", \"text\", 1, \"col-6\", \"form-control\", \"form-control-sm\", 3, \"id\", \"name\", \"formControlName\", \"readonly\", \"keyup\"], [\"type\", \"button\", 1, \"btn\", \"btn-link\", \"float-right\", 3, \"click\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", \"click\"], [\"type\", \"radio\", \"name\", \"selectedIndex\", 3, \"value\", \"ngModel\", \"ngModelChange\", \"dblclick\", 4, \"ngIf\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"type\", \"radio\", \"name\", \"selectedIndex\", 3, \"value\", \"ngModel\", \"ngModelChange\", \"dblclick\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"]], template: function SearchHelpComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"h6\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function SearchHelpComponent_Template_button_click_6_listener() { return ctx.closeSearchHelpModal(); });\n        ɵngcc0.ɵɵelementStart(7, \"span\", 6);\n        ɵngcc0.ɵɵtext(8, \"\\u00D7\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(10, SearchHelpComponent_div_10_Template, 7, 3, \"div\", 8);\n        ɵngcc0.ɵɵtemplate(11, SearchHelpComponent_button_11_Template, 2, 0, \"button\", 9);\n        ɵngcc0.ɵɵtemplate(12, SearchHelpComponent_button_12_Template, 2, 0, \"button\", 9);\n        ɵngcc0.ɵɵelementStart(13, \"table\", 10);\n        ɵngcc0.ɵɵelementStart(14, \"thead\", 11);\n        ɵngcc0.ɵɵelementStart(15, \"tr\");\n        ɵngcc0.ɵɵelementStart(16, \"th\", 12);\n        ɵngcc0.ɵɵtemplate(17, SearchHelpComponent_input_17_Template, 1, 1, \"input\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(18, SearchHelpComponent_th_18_Template, 2, 3, \"th\", 14);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(19, \"tbody\");\n        ɵngcc0.ɵɵtemplate(20, SearchHelpComponent_tr_20_Template, 5, 3, \"tr\", 15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(21, \"div\", 16);\n        ɵngcc0.ɵɵelementStart(22, \"button\", 17);\n        ɵngcc0.ɵɵlistener(\"click\", function SearchHelpComponent_Template_button_click_22_listener() { return ctx.closeSearchHelpModal(); });\n        ɵngcc0.ɵɵtext(23, \"Cancel\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(24, \"button\", 18);\n        ɵngcc0.ɵɵlistener(\"click\", function SearchHelpComponent_Template_button_click_24_listener() { return ctx.confirmSelection(); });\n        ɵngcc0.ɵɵtext(25, \"Confirm\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c0, ctx.isSearchHelpModalShown))(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(13, _c1, ctx.displaySearchHelpModal));\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate2(\"\", ctx.searchHelp == null ? null : ctx.searchHelp.OBJECT_NAME, \" (\", ctx.listData.length, \")\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isFilterShown);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isFilterShown);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isFilterShown);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.searchHelp == null ? null : ctx.searchHelp.MULTI);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.listFields);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.listData);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.searchHelp == null ? null : ctx.searchHelp.READ_ONLY);\n    } }, directives: [ɵngcc4.NgClass, ɵngcc4.NgStyle, ɵngcc4.NgIf, ɵngcc4.NgForOf, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.FormControlName, ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.RadioControlValueAccessor], styles: [\".dk-search-help-header[_ngcontent-%COMP%]{background-color:#e9ecef;padding:.3rem .5rem}.dk-search-help-footer[_ngcontent-%COMP%]{padding:.5rem}.dk-search-table[_ngcontent-%COMP%]{border:none;display:block;max-height:20rem;overflow:scroll;white-space:nowrap}.dk-search-help-content[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.4);box-shadow:8px 5px 5px rgba(0,0,0,.2)}.dk-search-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{position:-webkit-sticky;position:sticky;top:0;z-index:2}\"] });\n/** @nocollapse */\nSearchHelpComponent.ctorParameters = () => [\n    { type: FormBuilder },\n    { type: EntityService }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchHelpComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dk-app-search-help',\n                template: \"<div class=\\\"modal fade\\\" id=\\\"searchHelp\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n     [ngClass]=\\\"{'show': isSearchHelpModalShown}\\\" [ngStyle]=\\\"{'display': displaySearchHelpModal}\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content dk-search-help-content\\\">\\n      <div class=\\\"modal-header dk-search-help-header\\\">\\n        <h6 class=\\\"modal-title\\\" id=\\\"addRelationship\\\">{{searchHelp?.OBJECT_NAME}} ({{listData.length}})</h6>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeSearchHelpModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"modal-body\\\">\\n        <div *ngIf=\\\"isFilterShown\\\" class=\\\"card mb-2\\\">\\n          <div *ngIf=\\\"searchHelp && searchHelp.FUZZY_SEARCH\\\" class=\\\"mt-2 mx-2 row\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" [(ngModel)]=\\\"fuzzySearchTerm\\\" (keyup)=\\\"enterSearch($event)\\\">\\n          </div>\\n          <div class=\\\"mt-2 mx-2 row\\\" [formGroup]=\\\"filterFieldsFormGroup\\\">\\n            <div *ngFor=\\\"let filterField of filterFields\\\" class=\\\"col-6 form-group row\\\">\\n              <label for=\\\"{{filterField.FIELD_NAME}}\\\" class=\\\"col-6 col-form-label col-form-label-sm text-right\\\">\\n                {{filterField.LABEL_TEXT || filterField.FIELD_NAME}}:</label>\\n              <input id=\\\"{{filterField.FIELD_NAME}}\\\" name=\\\"{{filterField.FIELD_NAME}}\\\" formControlName=\\\"{{filterField.FIELD_NAME}}\\\"\\n                     type=\\\"text\\\" class=\\\"col-6 form-control form-control-sm\\\" [readonly]=\\\"filterField.FILTER_DISP_ONLY\\\" (keyup)=\\\"enterSearch($event)\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"mb-2\\\">\\n            <button type=\\\"button\\\" id=\\\"search\\\" class=\\\"btn btn-sm btn-primary float-right mr-2\\\" (click)=\\\"search()\\\">\\n              Search\\n            </button>\\n          </div>\\n        </div>\\n\\n        <button *ngIf=\\\"!isFilterShown\\\" type=\\\"button\\\" class=\\\"btn btn-link float-right\\\" (click)=\\\"showFilter()\\\">Show Filter</button>\\n        <button *ngIf=\\\"isFilterShown\\\" type=\\\"button\\\" class=\\\"btn btn-link float-right\\\" (click)=\\\"hideFilter()\\\">Hide Filter</button>\\n\\n        <table class=\\\"table table-bordered table-sm table-hover dk-search-table\\\">\\n          <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">\\n              <input *ngIf=\\\"searchHelp?.MULTI\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"isSelectAllChecked\\\" (click)=\\\"selectAll()\\\">\\n            </th>\\n            <th *ngFor=\\\"let listField of listFields\\\"\\n                [style.display]=\\\"listField.FIELD_NAME === 'INSTANCE_GUID' ? 'none' : 'table-cell'\\\">\\n              {{listField.LIST_HEADER_TEXT || listField.FIELD_NAME}}\\n            </th>\\n          </tr>\\n          </thead>\\n\\n          <tbody>\\n          <tr *ngFor=\\\"let item of listData; let i = index\\\">\\n            <td>\\n              <input *ngIf=\\\"!searchHelp.MULTI\\\" type=\\\"radio\\\" name=\\\"selectedIndex\\\" [value]=\\\"i\\\" [(ngModel)]=\\\"selectedIndex\\\" (dblclick)=\\\"confirmSelection()\\\">\\n              <input *ngIf=\\\"searchHelp.MULTI\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"item.SELECTED\\\">\\n            </td>\\n            <td *ngFor=\\\"let listField of listFields\\\"\\n                [style.display]=\\\"listField.FIELD_NAME === 'INSTANCE_GUID' ? 'none' : 'table-cell'\\\">\\n              {{item[listField.FIELD_NAME]}}\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <div class=\\\"modal-footer dk-search-help-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"closeSearchHelpModal()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"confirmSelection()\\\" [disabled]=\\\"searchHelp?.READ_ONLY\\\">Confirm</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                styles: [\".dk-search-help-header{background-color:#e9ecef;padding:.3rem .5rem}.dk-search-help-footer{padding:.5rem}.dk-search-table{border:none;display:block;max-height:20rem;overflow:scroll;white-space:nowrap}.dk-search-help-content{border:1px solid rgba(0,0,0,.4);box-shadow:8px 5px 5px rgba(0,0,0,.2)}.dk-search-table th{position:-webkit-sticky;position:sticky;top:0;z-index:2}\"]\n            }]\n    }], function () { return [{ type: ɵngcc3.FormBuilder }, { type: EntityService }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    SearchHelpComponent.prototype.isSearchHelpModalShown;\n    /** @type {?} */\n    SearchHelpComponent.prototype.isFilterShown;\n    /** @type {?} */\n    SearchHelpComponent.prototype.isSelectAllChecked;\n    /** @type {?} */\n    SearchHelpComponent.prototype.searchHelp;\n    /** @type {?} */\n    SearchHelpComponent.prototype.fuzzySearchTerm;\n    /** @type {?} */\n    SearchHelpComponent.prototype.selectedIndex;\n    /** @type {?} */\n    SearchHelpComponent.prototype.filterFields;\n    /** @type {?} */\n    SearchHelpComponent.prototype.listFields;\n    /** @type {?} */\n    SearchHelpComponent.prototype.filterFieldsFormGroup;\n    /** @type {?} */\n    SearchHelpComponent.prototype.exportControl;\n    /** @type {?} */\n    SearchHelpComponent.prototype.afterExportFn;\n    /** @type {?} */\n    SearchHelpComponent.prototype.listData;\n    /** @type {?} */\n    SearchHelpComponent.prototype.preSearchHelpParas;\n    /**\n     * @type {?}\n     * @private\n     */\n    SearchHelpComponent.prototype.fb;\n    /**\n     * @type {?}\n     * @private\n     */\n    SearchHelpComponent.prototype.entityService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/attribute/attribute-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AttributeBase {\n    constructor() {\n        this.dropdownList = [];\n    }\n}\nif (false) {\n    /** @type {?} */\n    AttributeBase.prototype.controlType;\n    /** @type {?} */\n    AttributeBase.prototype.key;\n    /** @type {?} */\n    AttributeBase.prototype.name;\n    /** @type {?} */\n    AttributeBase.prototype.label;\n    /** @type {?} */\n    AttributeBase.prototype.list_label;\n    /** @type {?} */\n    AttributeBase.prototype.relationId;\n    /** @type {?} */\n    AttributeBase.prototype.maxLength;\n    /** @type {?} */\n    AttributeBase.prototype.step;\n    /** @type {?} */\n    AttributeBase.prototype.domainId;\n    /** @type {?} */\n    AttributeBase.prototype.placeholder;\n    /** @type {?} */\n    AttributeBase.prototype.pattern;\n    /** @type {?} */\n    AttributeBase.prototype.domainEntityId;\n    /** @type {?} */\n    AttributeBase.prototype.domainRelationId;\n    /** @type {?} */\n    AttributeBase.prototype.searchHelpId;\n    /** @type {?} */\n    AttributeBase.prototype.searchHelpExportField;\n    /** @type {?} */\n    AttributeBase.prototype.primaryKey;\n    /** @type {?} */\n    AttributeBase.prototype.autoIncrement;\n    /** @type {?} */\n    AttributeBase.prototype.dropdownList;\n}\nclass DropdownList {\n}\nif (false) {\n    /** @type {?} */\n    DropdownList.prototype.key;\n    /** @type {?} */\n    DropdownList.prototype.value;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/attribute/attribute-validators.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// noinspection JSAnnotator\nclass DomainValueValidator {\n    /**\n     * @param {?} entityService\n     */\n    constructor(entityService) {\n        this.entityService = entityService;\n    }\n    /**\n     * @param {?} ctrl\n     * @return {?}\n     */\n    validate(ctrl) {\n        /** @type {?} */\n        const queryObject = new QueryObject();\n        // queryObject.ENTITY_ID = entityID;\n        // queryObject.RELATION_ID = relationID;\n        // queryObject.FILTER = [{FIELD_NAME: searchField, OPERATOR: 'EQ', LOW: ctrl.value}];\n        return this.entityService.searchEntities(queryObject).pipe(map((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            if (data['msgName']) {\n                return { message: data['msgName']['msgShortText'] };\n            }\n            else {\n                if (data.length === 0) {\n                    return { message: 'Value is invalid' };\n                }\n                else {\n                    return null;\n                }\n            }\n        })), catchError((/**\n         * @return {?}\n         */\n        () => null)));\n    }\n}\nDomainValueValidator.ɵfac = function DomainValueValidator_Factory(t) { return new (t || DomainValueValidator)(ɵngcc0.ɵɵinject(EntityService)); };\n/** @nocollapse */\nDomainValueValidator.ctorParameters = () => [\n    { type: EntityService }\n];\n/** @nocollapse */ DomainValueValidator.ɵprov = ɵɵdefineInjectable({ factory: function DomainValueValidator_Factory() { return new DomainValueValidator(ɵɵinject(EntityService)); }, token: DomainValueValidator, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DomainValueValidator, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: EntityService }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomainValueValidator.prototype.entityService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/attribute/attribute-control.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AttributeControlService {\n    /**\n     * @param {?} entityService\n     * @param {?} domainValueValidator\n     */\n    constructor(entityService, domainValueValidator) {\n        this.entityService = entityService;\n        this.domainValueValidator = domainValueValidator;\n    }\n    /**\n     * @param {?} attributes\n     * @return {?}\n     */\n    toAttributeControl(attributes) {\n        /** @type {?} */\n        const attributeControls = [];\n        if (!attributes) {\n            return attributeControls;\n        }\n        attributes.forEach((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => attributeControls.push(this.toSingleAttributeControl(attribute))));\n        return attributeControls;\n    }\n    /**\n     * @param {?} attribute\n     * @return {?}\n     */\n    toSingleAttributeControl(attribute) {\n        /** @type {?} */\n        const attributeControl = new AttributeBase();\n        attributeControl.key = attribute.ATTR_GUID;\n        attributeControl.name = attribute.ATTR_NAME;\n        attributeControl.label = attribute.LABEL_TEXT;\n        attributeControl.list_label = attribute.LIST_HEADER_TEXT;\n        attributeControl.relationId = attribute.RELATION_ID;\n        attributeControl.searchHelpId = attribute.SEARCH_HELP_ID;\n        attributeControl.searchHelpExportField = attribute.SEARCH_HELP_EXPORT_FIELD;\n        attributeControl.domainId = attribute.DOMAIN_ID;\n        attributeControl.domainEntityId = attribute.DOMAIN_ENTITY_ID;\n        attributeControl.domainRelationId = attribute.DOMAIN_RELATION_ID;\n        switch (attribute.DATA_TYPE) {\n            case 1: // Char\n                if (attribute.CAPITAL_ONLY) {\n                    attributeControl.controlType = 'text_capital';\n                    // onkeyup=\"this.value = this.value.toUpperCase();\"\n                }\n                else {\n                    if (attribute.DOMAIN_TYPE === 3) {\n                        attributeControl.controlType = 'dropdown';\n                        this._generateDropdownList(attribute.DOMAIN_ID, attributeControl);\n                    }\n                    else {\n                        attributeControl.controlType = 'text';\n                        attributeControl.pattern = attribute.REG_EXPR;\n                    }\n                }\n                attributeControl.maxLength = attribute.DATA_LENGTH;\n                attributeControl.primaryKey = attribute.PRIMARY_KEY;\n                break;\n            case 2: // Integer\n                if (attribute.DOMAIN_TYPE === 3) {\n                    attributeControl.controlType = 'dropdown';\n                    this._generateDropdownList(attribute.DOMAIN_ID, attributeControl);\n                }\n                else {\n                    attributeControl.controlType = 'integer';\n                    if (attribute.UNSIGNED) {\n                        attributeControl.pattern = '^\\\\d+([^.,])?$';\n                    }\n                    attributeControl.autoIncrement = attribute.AUTO_INCREMENT;\n                }\n                attributeControl.primaryKey = attribute.PRIMARY_KEY;\n                break;\n            case 3: // Boolean\n                attributeControl.controlType = 'checkbox';\n                break;\n            case 4: // Decimal\n                attributeControl.controlType = 'decimal';\n                this._setDecimalPattern(attributeControl, attribute);\n                break;\n            case 5: // String\n                attributeControl.controlType = 'textarea';\n                break;\n            case 6: // Binary\n                attributeControl.controlType = 'file';\n                break;\n            case 7: // Date\n                attributeControl.controlType = 'date';\n                break;\n            case 8: // Timestamp\n                attributeControl.controlType = 'timestamp';\n                break;\n            default:\n                attributeControl.controlType = 'text';\n        }\n        return attributeControl;\n    }\n    /**\n     * @param {?} domainID\n     * @param {?} attributeControl\n     * @return {?}\n     */\n    _generateDropdownList(domainID, attributeControl) {\n        this.entityService.getDataDomain(domainID)\n            .subscribe((/**\n         * @param {?} dataDomain\n         * @return {?}\n         */\n        dataDomain => dataDomain['DOMAIN_VALUES'].forEach((/**\n         * @param {?} domainValue\n         * @return {?}\n         */\n        domainValue => {\n            attributeControl.dropdownList.push({\n                key: domainValue['LOW_VALUE'],\n                value: domainValue['LOW_VALUE_TEXT'] || domainValue['LOW_VALUE']\n            });\n        }))));\n    }\n    /**\n     * @param {?} attributeControl\n     * @param {?} attribute\n     * @return {?}\n     */\n    _setDecimalPattern(attributeControl, attribute) {\n        /** @type {?} */\n        const zeroPadding = '0000000000000000000000000000000000000';\n        attributeControl.step = '0.' + zeroPadding.substr(0, attribute.DECIMAL - 1) + '1';\n        attributeControl.placeholder = '0.' + zeroPadding.substr(0, attribute.DECIMAL - 1) + '0';\n        /** @type {?} */\n        const integerPlace = attribute.DATA_LENGTH - attribute.DECIMAL;\n        attributeControl.pattern = attribute.UNSIGNED ? '^(' : '^(\\\\-?';\n        attributeControl.pattern += integerPlace ? '\\\\d{1,' + integerPlace.toString() + '})' : '0)';\n        attributeControl.pattern += '(\\\\.\\\\d{1,' + attribute.DECIMAL + '})?$';\n        attributeControl.maxLength = attribute.DATA_LENGTH;\n    }\n    /**\n     * @param {?} attribute\n     * @param {?} instance\n     * @return {?}\n     */\n    convertToFormControl(attribute, instance) {\n        /** @type {?} */\n        const formControl = new FormControl(instance[attribute.ATTR_NAME] || '');\n        if (attribute.PRIMARY_KEY && !attribute.AUTO_INCREMENT) {\n            formControl.setValidators(Validators.required);\n        }\n        // if (attribute.DOMAIN_TYPE === 2 && !attribute.PRIMARY_KEY) {\n        //   formControl.setAsyncValidators(this.domainValueValidator.validate.bind(this.domainValueValidator));\n        // }\n        return formControl;\n    }\n    /**\n     * @param {?} attributes\n     * @param {?} instance\n     * @param {?=} isDirty\n     * @return {?}\n     */\n    convertToFormGroup(attributes, instance, isDirty) {\n        /** @type {?} */\n        const group = {};\n        attributes.forEach((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => {\n            group[attribute.ATTR_NAME] = this.convertToFormControl(attribute, instance);\n            if (instance[attribute.ATTR_NAME] && isDirty) {\n                group[attribute.ATTR_NAME].markAsDirty();\n            }\n        }));\n        return new FormGroup(group);\n    }\n}\nAttributeControlService.ɵfac = function AttributeControlService_Factory(t) { return new (t || AttributeControlService)(ɵngcc0.ɵɵinject(EntityService), ɵngcc0.ɵɵinject(DomainValueValidator)); };\n/** @nocollapse */\nAttributeControlService.ctorParameters = () => [\n    { type: EntityService },\n    { type: DomainValueValidator }\n];\n/** @nocollapse */ AttributeControlService.ɵprov = ɵɵdefineInjectable({ factory: function AttributeControlService_Factory() { return new AttributeControlService(ɵɵinject(EntityService), ɵɵinject(DomainValueValidator)); }, token: AttributeControlService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AttributeControlService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: EntityService }, { type: DomainValueValidator }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AttributeControlService.prototype.entityService;\n    /**\n     * @type {?}\n     * @private\n     */\n    AttributeControlService.prototype.domainValueValidator;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/attribute/attribute.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AttributeComponent {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const fieldCtrl = this.formGroup.get(this.attributeControl.name);\n        switch (this.attributeControl.controlType) {\n            case 'timestamp':\n                if (!this.readonly && !fieldCtrl.value) {\n                    /** @type {?} */\n                    const currentTimestamp = new Date();\n                    fieldCtrl.setValue(currentTimestamp.getFullYear() + '-' + ('0' + (currentTimestamp.getMonth() + 1)).slice(-2) + '-'\n                        + ('0' + currentTimestamp.getDate()).slice(-2) + ' ' + ('0' + currentTimestamp.getHours()).slice(-2) +\n                        ':' + ('0' + currentTimestamp.getMinutes()).slice(-2) + ':' + ('0' + currentTimestamp.getSeconds()).slice(-2));\n                    fieldCtrl.markAsDirty();\n                }\n                break;\n            case 'date':\n                if (!this.readonly && !fieldCtrl.value) {\n                    /** @type {?} */\n                    const currentDate = new Date();\n                    fieldCtrl.setValue(currentDate.getFullYear() + '-' + ('0' + (currentDate.getMonth() + 1)).slice(-2) + '-'\n                        + ('0' + currentDate.getDate()).slice(-2));\n                    fieldCtrl.markAsDirty();\n                }\n                break;\n            default:\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        if (this.attributeControl.controlType === 'dropdown' ||\n            this.attributeControl.controlType === 'checkbox') {\n            this.readonly ? this.formGroup.get(this.attributeControl.name).disable() :\n                this.formGroup.get(this.attributeControl.name).enable();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get invalid() { return this.formGroup.controls[this.attributeControl.name].invalid; }\n    /**\n     * @return {?}\n     */\n    get errorMessage() {\n        /** @type {?} */\n        const fieldCtrl = this.formGroup.get(this.attributeControl.name);\n        if (fieldCtrl.getError('pattern')) {\n            return 'The pattern is not correct';\n        }\n        else if (fieldCtrl.getError('required')) {\n            return 'Required';\n        }\n        else if (fieldCtrl.getError('message')) {\n            return fieldCtrl.getError('message');\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isReadonly() { return this.readonly || this.attributeControl.autoIncrement; }\n    /**\n     * @param {?} attributeName\n     * @return {?}\n     */\n    onKeyup(attributeName) {\n        /** @type {?} */\n        const fieldCtrl = this.formGroup.get(attributeName);\n        fieldCtrl.setValue(fieldCtrl.value.toUpperCase());\n    }\n    /**\n     * @param {?} attributeControl\n     * @return {?}\n     */\n    onSearchHelp(attributeControl) {\n        if (attributeControl.searchHelpId) {\n            this.searchHelpComponent.openSearchHelpModalBySearchHelp(attributeControl.searchHelpId, attributeControl.searchHelpExportField, attributeControl.name, this.formGroup, this.readonly);\n        }\n        else {\n            this.searchHelpComponent.openSearchHelpModalByEntity(attributeControl.domainEntityId, attributeControl.domainRelationId, this.formGroup, this.readonly, attributeControl.name, attributeControl.domainId);\n        }\n    }\n}\nAttributeComponent.ɵfac = function AttributeComponent_Factory(t) { return new (t || AttributeComponent)(); };\nAttributeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AttributeComponent, selectors: [[\"dk-app-attribute\"]], viewQuery: function AttributeComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(SearchHelpComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchHelpComponent = _t.first);\n    } }, inputs: { attributeControl: \"attributeControl\", formGroup: \"formGroup\", readonly: \"readonly\", isSmallSize: \"isSmallSize\", noErrorMsg: \"noErrorMsg\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 12, vars: 11, consts: [[3, \"formGroup\"], [3, \"ngSwitch\"], [\"class\", \"input-group\", 4, \"ngIf\"], [\"type\", \"number\", \"class\", \"form-control\", 3, \"form-control-sm\", \"formControlName\", \"id\", \"step\", \"placeholder\", \"pattern\", \"readonly\", 4, \"ngSwitchCase\"], [\"type\", \"checkbox\", \"class\", \"mb-1 ml-1\", 3, \"form-control-sm\", \"formControlName\", \"id\", 4, \"ngSwitchCase\"], [\"type\", \"textarea\", \"class\", \"form-control\", 3, \"form-control-sm\", \"formControlName\", \"id\", \"readonly\", 4, \"ngSwitchCase\"], [\"type\", \"file\", \"class\", \"form-control\", 3, \"form-control-sm\", \"formControlName\", \"id\", \"readonly\", 4, \"ngSwitchCase\"], [\"type\", \"date\", \"class\", \"form-control\", 3, \"form-control-sm\", \"formControlName\", \"id\", \"readonly\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"class\", \"form-control\", 3, \"form-control-sm\", \"formControlName\", \"id\", \"readonly\", 4, \"ngSwitchCase\"], [\"class\", \"form-control\", 3, \"form-control-sm\", \"formControlName\", \"id\", 4, \"ngSwitchCase\"], [\"class\", \"dk-invalid-feedback\", 3, \"ng-invalid\", 4, \"ngIf\"], [1, \"input-group\"], [\"type\", \"text\", \"class\", \"form-control\", 3, \"form-control-sm\", \"formControlName\", \"id\", \"maxlength\", \"pattern\", \"readonly\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"class\", \"form-control\", 3, \"form-control-sm\", \"formControlName\", \"id\", \"maxlength\", \"readonly\", \"keyup\", 4, \"ngSwitchCase\"], [\"type\", \"number\", \"class\", \"form-control\", 3, \"form-control-sm\", \"formControlName\", \"id\", \"pattern\", \"readonly\", 4, \"ngSwitchCase\"], [\"class\", \"input-group-append\", 4, \"ngIf\"], [\"type\", \"text\", 1, \"form-control\", 3, \"formControlName\", \"id\", \"maxlength\", \"pattern\", \"readonly\"], [\"type\", \"text\", 1, \"form-control\", 3, \"formControlName\", \"id\", \"maxlength\", \"readonly\", \"keyup\"], [\"type\", \"number\", 1, \"form-control\", 3, \"formControlName\", \"id\", \"pattern\", \"readonly\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", \"btn-sm\", 3, \"click\"], [1, \"fas\", \"fa-search\"], [\"type\", \"number\", 1, \"form-control\", 3, \"formControlName\", \"id\", \"step\", \"placeholder\", \"pattern\", \"readonly\"], [\"type\", \"checkbox\", 1, \"mb-1\", \"ml-1\", 3, \"formControlName\", \"id\"], [\"type\", \"textarea\", 1, \"form-control\", 3, \"formControlName\", \"id\", \"readonly\"], [\"type\", \"file\", 1, \"form-control\", 3, \"formControlName\", \"id\", \"readonly\"], [\"type\", \"date\", 1, \"form-control\", 3, \"formControlName\", \"id\", \"readonly\"], [\"type\", \"text\", 1, \"form-control\", 3, \"formControlName\", \"id\", \"readonly\"], [1, \"form-control\", 3, \"formControlName\", \"id\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"dk-invalid-feedback\"]], template: function AttributeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, AttributeComponent_div_2_Template, 5, 4, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, AttributeComponent_input_3_Template, 1, 8, \"input\", 3);\n        ɵngcc0.ɵɵtemplate(4, AttributeComponent_input_4_Template, 1, 4, \"input\", 4);\n        ɵngcc0.ɵɵtemplate(5, AttributeComponent_input_5_Template, 1, 5, \"input\", 5);\n        ɵngcc0.ɵɵtemplate(6, AttributeComponent_input_6_Template, 1, 5, \"input\", 6);\n        ɵngcc0.ɵɵtemplate(7, AttributeComponent_input_7_Template, 1, 5, \"input\", 7);\n        ɵngcc0.ɵɵtemplate(8, AttributeComponent_input_8_Template, 1, 5, \"input\", 8);\n        ɵngcc0.ɵɵtemplate(9, AttributeComponent_select_9_Template, 2, 5, \"select\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, AttributeComponent_div_10_Template, 2, 3, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(11, \"dk-app-search-help\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.attributeControl.controlType);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.attributeControl.controlType === \"text\" || ctx.attributeControl.controlType === \"text_capital\" || ctx.attributeControl.controlType === \"integer\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"decimal\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"textarea\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"file\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"timestamp\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"dropdown\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.noErrorMsg);\n    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgSwitch, ɵngcc4.NgIf, ɵngcc4.NgSwitchCase, SearchHelpComponent, ɵngcc3.DefaultValueAccessor, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc3.MaxLengthValidator, ɵngcc3.PatternValidator, ɵngcc3.NumberValueAccessor, ɵngcc3.CheckboxControlValueAccessor, ɵngcc3.SelectControlValueAccessor, ɵngcc4.NgForOf, ɵngcc3.NgSelectOption, ɵngcc3.ɵangular_packages_forms_forms_x], styles: [\"\"] });\n/** @nocollapse */\nAttributeComponent.ctorParameters = () => [];\nAttributeComponent.propDecorators = {\n    attributeControl: [{ type: Input }],\n    formGroup: [{ type: Input }],\n    readonly: [{ type: Input }],\n    isSmallSize: [{ type: Input }],\n    noErrorMsg: [{ type: Input }],\n    searchHelpComponent: [{ type: ViewChild, args: [SearchHelpComponent, { static: false },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AttributeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dk-app-attribute',\n                template: \"<div [formGroup]=\\\"formGroup\\\">\\n  <div [ngSwitch]=\\\"attributeControl.controlType\\\">\\n    <div *ngIf=\\\"attributeControl.controlType === 'text' ||\\n                attributeControl.controlType === 'text_capital' ||\\n                attributeControl.controlType === 'integer'\\\" class=\\\"input-group\\\">\\n      <input *ngSwitchCase=\\\"'text'\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n             [class.form-control-sm] = \\\"isSmallSize\\\"\\n             [formControlName]=\\\"attributeControl.name\\\"\\n             [id]=\\\"attributeControl.key\\\"\\n             [maxlength]=\\\"attributeControl.maxLength\\\"\\n             [pattern]=\\\"attributeControl.pattern\\\"\\n             [readonly]=\\\"isReadonly\\\" >\\n      <input *ngSwitchCase=\\\"'text_capital'\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n             [class.form-control-sm] = \\\"isSmallSize\\\"\\n             [formControlName]=\\\"attributeControl.name\\\"\\n             [id]=\\\"attributeControl.key\\\"\\n             [maxlength]=\\\"attributeControl.maxLength\\\"\\n             (keyup)=\\\"onKeyup(attributeControl.name)\\\"\\n             [readonly]=\\\"isReadonly\\\" >\\n      <input *ngSwitchCase=\\\"'integer'\\\" type=\\\"number\\\" class=\\\"form-control\\\"\\n             [class.form-control-sm] = \\\"isSmallSize\\\"\\n             [formControlName]=\\\"attributeControl.name\\\"\\n             [id]=\\\"attributeControl.key\\\"\\n             [pattern]=\\\"attributeControl.pattern\\\"\\n             [readonly]=\\\"isReadonly\\\" >\\n      <div *ngIf=\\\"attributeControl.searchHelpId || attributeControl.domainRelationId\\\" class=\\\"input-group-append\\\">\\n        <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" (click)=\\\"onSearchHelp(attributeControl)\\\">\\n          <span class=\\\"fas fa-search\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <input *ngSwitchCase=\\\"'decimal'\\\" type=\\\"number\\\" class=\\\"form-control\\\"\\n           [class.form-control-sm] = \\\"isSmallSize\\\"\\n           [formControlName]=\\\"attributeControl.name\\\"\\n           [id]=\\\"attributeControl.key\\\"\\n           [step]=\\\"attributeControl.step\\\"\\n           [placeholder]=\\\"attributeControl.placeholder\\\"\\n           [pattern]=\\\"attributeControl.pattern\\\"\\n           [readonly]=\\\"isReadonly\\\" >\\n    <input *ngSwitchCase=\\\"'checkbox'\\\" type=\\\"checkbox\\\" class=\\\"mb-1 ml-1\\\"\\n           [class.form-control-sm] = \\\"isSmallSize\\\"\\n           [formControlName]=\\\"attributeControl.name\\\"\\n           [id]=\\\"attributeControl.key\\\">\\n    <input *ngSwitchCase=\\\"'textarea'\\\" type=\\\"textarea\\\" class=\\\"form-control\\\"\\n           [class.form-control-sm] = \\\"isSmallSize\\\"\\n           [formControlName]=\\\"attributeControl.name\\\"\\n           [id]=\\\"attributeControl.key\\\"\\n           [readonly]=\\\"isReadonly\\\" >\\n    <input *ngSwitchCase=\\\"'file'\\\" type=\\\"file\\\" class=\\\"form-control\\\"\\n           [class.form-control-sm] = \\\"isSmallSize\\\"\\n           [formControlName]=\\\"attributeControl.name\\\"\\n           [id]=\\\"attributeControl.key\\\"\\n           [readonly]=\\\"isReadonly\\\" >\\n    <input *ngSwitchCase=\\\"'date'\\\" type=\\\"date\\\" class=\\\"form-control\\\"\\n           [class.form-control-sm] = \\\"isSmallSize\\\"\\n           [formControlName]=\\\"attributeControl.name\\\"\\n           [id]=\\\"attributeControl.key\\\"\\n           [readonly]=\\\"isReadonly\\\" >\\n    <input *ngSwitchCase=\\\"'timestamp'\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n           [class.form-control-sm] = \\\"isSmallSize\\\"\\n           [formControlName]=\\\"attributeControl.name\\\"\\n           [id]=\\\"attributeControl.key\\\"\\n           [readonly]=\\\"isReadonly\\\" >\\n    <select *ngSwitchCase=\\\"'dropdown'\\\" class=\\\"form-control\\\"\\n            [class.form-control-sm] = \\\"isSmallSize\\\"\\n            [formControlName]=\\\"attributeControl.name\\\"\\n            [id]=\\\"attributeControl.key\\\">\\n      <option *ngFor=\\\"let opt of attributeControl.dropdownList\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n    </select>\\n  </div>\\n\\n  <div *ngIf=\\\"!noErrorMsg\\\" [class.ng-invalid]=\\\"invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n    {{errorMessage}}\\n  </div>\\n</div>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\",\n                styles: [\"\"]\n            }]\n    }], function () { return []; }, { attributeControl: [{\n            type: Input\n        }], formGroup: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], isSmallSize: [{\n            type: Input\n        }], noErrorMsg: [{\n            type: Input\n        }], searchHelpComponent: [{\n            type: ViewChild,\n            args: [SearchHelpComponent, { static: false }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    AttributeComponent.prototype.attributeControl;\n    /** @type {?} */\n    AttributeComponent.prototype.formGroup;\n    /** @type {?} */\n    AttributeComponent.prototype.readonly;\n    /** @type {?} */\n    AttributeComponent.prototype.isSmallSize;\n    /** @type {?} */\n    AttributeComponent.prototype.noErrorMsg;\n    /**\n     * @type {?}\n     * @private\n     */\n    AttributeComponent.prototype.searchHelpComponent;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/attribute/attribute-form/attribute-form.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AttributeFormComponent {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nAttributeFormComponent.ɵfac = function AttributeFormComponent_Factory(t) { return new (t || AttributeFormComponent)(); };\nAttributeFormComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AttributeFormComponent, selectors: [[\"dk-app-attribute-form\"]], inputs: { attributeControl: \"attributeControl\", formGroup: \"formGroup\", readonly: \"readonly\", isSmallSize: \"isSmallSize\" }, decls: 6, vars: 10, consts: [[1, \"form-group\", \"row\", 3, \"formGroup\"], [1, \"col-4\", \"col-form-label\", \"text-right\"], [\"class\", \"primaryKey\", 4, \"ngIf\"], [1, \"col-8\", 3, \"attributeControl\", \"formGroup\", \"isSmallSize\", \"readonly\"], [1, \"primaryKey\"]], template: function AttributeFormComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"label\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵtemplate(3, AttributeFormComponent_strong_3_Template, 2, 0, \"strong\", 2);\n        ɵngcc0.ɵɵtext(4, \": \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(5, \"dk-app-attribute\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.attributeControl.key);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.attributeControl.label, \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.attributeControl.primaryKey);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"attributeControl\", ctx.attributeControl)(\"formGroup\", ctx.formGroup)(\"isSmallSize\", ctx.isSmallSize)(\"readonly\", ctx.readonly);\n    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgIf, AttributeComponent], styles: [\"\"] });\n/** @nocollapse */\nAttributeFormComponent.ctorParameters = () => [];\nAttributeFormComponent.propDecorators = {\n    attributeControl: [{ type: Input }],\n    formGroup: [{ type: Input }],\n    readonly: [{ type: Input }],\n    isSmallSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AttributeFormComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dk-app-attribute-form',\n                template: \"<div class=\\\"form-group row\\\" [formGroup]=\\\"formGroup\\\">\\n  <label class=\\\"col-4 col-form-label text-right\\\"\\n         [class.form-control-sm]=\\\"isSmallSize\\\"\\n         [attr.for]=\\\"attributeControl.key\\\">\\n    {{attributeControl.label}}<strong *ngIf=\\\"attributeControl.primaryKey\\\" class=\\\"primaryKey\\\">*</strong>:\\n  </label>\\n\\n  <dk-app-attribute class=\\\"col-8\\\" [attributeControl]=\\\"attributeControl\\\" [formGroup]=\\\"formGroup\\\"\\n                 [isSmallSize]=\\\"isSmallSize\\\" [readonly]=\\\"readonly\\\">\\n  </dk-app-attribute>\\n\\n</div>\\n\",\n                styles: [\"\"]\n            }]\n    }], function () { return []; }, { attributeControl: [{\n            type: Input\n        }], formGroup: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], isSmallSize: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    AttributeFormComponent.prototype.attributeControl;\n    /** @type {?} */\n    AttributeFormComponent.prototype.formGroup;\n    /** @type {?} */\n    AttributeFormComponent.prototype.readonly;\n    /** @type {?} */\n    AttributeFormComponent.prototype.isSmallSize;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/attribute/attribute-form2/attribute-form2.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AttributeForm2Component {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @return {?}\n     */\n    get invalid() { return this.formGroup.controls[this.attributeControl.name].invalid; }\n    /**\n     * @return {?}\n     */\n    get errorMessage() {\n        /** @type {?} */\n        const fieldCtrl = this.formGroup.get(this.attributeControl.name);\n        if (fieldCtrl.getError('pattern')) {\n            return 'The pattern is not correct';\n        }\n        else if (fieldCtrl.getError('required')) {\n            return 'Required';\n        }\n        else if (fieldCtrl.getError('message')) {\n            return fieldCtrl.getError('message');\n        }\n        else {\n            return null;\n        }\n    }\n}\nAttributeForm2Component.ɵfac = function AttributeForm2Component_Factory(t) { return new (t || AttributeForm2Component)(); };\nAttributeForm2Component.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AttributeForm2Component, selectors: [[\"dk-app-attribute-form2\"]], inputs: { attributeControl: \"attributeControl\", formGroup: \"formGroup\", readonly: \"readonly\", isSmallSize: \"isSmallSize\" }, decls: 8, vars: 14, consts: [[1, \"form-group\", 3, \"formGroup\"], [1, \"col-form-label\"], [\"class\", \"primaryKey\", 4, \"ngIf\"], [1, \"dk-invalid-feedback\"], [3, \"attributeControl\", \"formGroup\", \"isSmallSize\", \"readonly\", \"noErrorMsg\"], [1, \"primaryKey\"]], template: function AttributeForm2Component_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"label\", 1);\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵtemplate(3, AttributeForm2Component_strong_3_Template, 2, 0, \"strong\", 2);\n        ɵngcc0.ɵɵtext(4, \": \");\n        ɵngcc0.ɵɵelementStart(5, \"span\", 3);\n        ɵngcc0.ɵɵtext(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"dk-app-attribute\", 4);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.attributeControl.key);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.attributeControl.label, \"\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.attributeControl.primaryKey);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"ng-invalid\", ctx.invalid);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.errorMessage);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"attributeControl\", ctx.attributeControl)(\"formGroup\", ctx.formGroup)(\"isSmallSize\", ctx.isSmallSize)(\"readonly\", ctx.readonly)(\"noErrorMsg\", true);\n    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgIf, AttributeComponent], styles: [\"\"] });\n/** @nocollapse */\nAttributeForm2Component.ctorParameters = () => [];\nAttributeForm2Component.propDecorators = {\n    attributeControl: [{ type: Input }],\n    formGroup: [{ type: Input }],\n    readonly: [{ type: Input }],\n    isSmallSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AttributeForm2Component, [{\n        type: Component,\n        args: [{\n                selector: 'dk-app-attribute-form2',\n                template: \"<div class=\\\"form-group\\\" [formGroup]=\\\"formGroup\\\">\\n  <label class=\\\"col-form-label\\\"\\n         [class.form-control-sm]=\\\"isSmallSize\\\"\\n         [attr.for]=\\\"attributeControl.key\\\">\\n    {{attributeControl.label}}<strong *ngIf=\\\"attributeControl.primaryKey\\\" class=\\\"primaryKey\\\">*</strong>:\\n    <span [class.ng-invalid]=\\\"invalid\\\" class=\\\"dk-invalid-feedback\\\">{{errorMessage}}</span>\\n  </label>\\n\\n  <dk-app-attribute [attributeControl]=\\\"attributeControl\\\" [formGroup]=\\\"formGroup\\\"\\n                    [isSmallSize]=\\\"isSmallSize\\\" [readonly]=\\\"readonly\\\" [noErrorMsg]=\\\"true\\\">\\n  </dk-app-attribute>\\n\\n</div>\\n\",\n                styles: [\"\"]\n            }]\n    }], function () { return []; }, { attributeControl: [{\n            type: Input\n        }], formGroup: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], isSmallSize: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    AttributeForm2Component.prototype.attributeControl;\n    /** @type {?} */\n    AttributeForm2Component.prototype.formGroup;\n    /** @type {?} */\n    AttributeForm2Component.prototype.readonly;\n    /** @type {?} */\n    AttributeForm2Component.prototype.isSmallSize;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/attribute/attribute-table/attribute-table.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AttributeTableComponent {\n    constructor() {\n        this.isDetailModalShown = false;\n        this.isErrorModalShown = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @return {?}\n     */\n    get displayDetailModal() { return this.isDetailModalShown ? 'block' : 'none'; }\n    /**\n     * @return {?}\n     */\n    get displayErrorModal() { return this.isErrorModalShown ? 'block' : 'none'; }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    openDetailModal(index) {\n        this.currentFormGroup = this.formArray.at(index);\n        this.isDetailModalShown = true;\n    }\n    /**\n     * @return {?}\n     */\n    closeDetailModal() {\n        if (!this.readonly && this.currentFormGroup.dirty) {\n            this.currentFormGroup.setValue(this.currentFormGroup.value); // Or the value won't be updated.\n        }\n        this.isDetailModalShown = false;\n    }\n    /**\n     * @param {?} errorTitle\n     * @param {?} errorDescription\n     * @return {?}\n     */\n    openErrorModal(errorTitle, errorDescription) {\n        this.errorTitle = errorTitle;\n        this.errorDescription = errorDescription;\n        this.isErrorModalShown = true;\n    }\n    /**\n     * @return {?}\n     */\n    closeErrorModal() {\n        this.isErrorModalShown = false;\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    deleteRelationInstance(index = 0) {\n        switch (this.entityRelation.CARDINALITY) {\n            case '[0..n]':\n                this.formArray.removeAt(index);\n                this.formArray.markAsDirty();\n                if (this.formArray.length === 0) {\n                    this.entityRelation.EMPTY = true;\n                }\n                break;\n            case '[1..n]':\n                if (this.formArray.length === 1) {\n                    this.openErrorModal('Deletion Fail', 'The relation requires at lease one entry!');\n                }\n                else {\n                    this.formArray.removeAt(index);\n                    this.formArray.markAsDirty();\n                }\n        }\n    }\n}\nAttributeTableComponent.ɵfac = function AttributeTableComponent_Factory(t) { return new (t || AttributeTableComponent)(); };\nAttributeTableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AttributeTableComponent, selectors: [[\"dk-app-attribute-table\"]], inputs: { attributeControls: \"attributeControls\", formArray: \"formArray\", parentFormGroup: \"parentFormGroup\", entityRelation: \"entityRelation\", isSmallSize: \"isSmallSize\", readonly: \"readonly\" }, decls: 24, vars: 17, consts: [[1, \"table\", \"table-bordered\", \"relation-table\", 3, \"formGroup\"], [1, \"thead-light\"], [\"scope\", \"col\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [3, \"formArrayName\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"modal fade dk-modal-open\", \"id\", \"detailModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"id\", \"errorModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", \"fade\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"error\", 1, \"modal-title\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"primaryKey\", 4, \"ngIf\"], [1, \"primaryKey\"], [1, \"actions\"], [\"type\", \"button\", \"title\", \"Detail\", 1, \"btn\", 3, \"click\"], [\"class\", \"fas fa-search\", 4, \"ngIf\"], [\"class\", \"fas fa-pen\", 4, \"ngIf\"], [\"type\", \"button\", \"title\", \"Delete\", 1, \"btn\", 3, \"disabled\", \"click\"], [1, \"far\", \"fa-trash-alt\"], [1, \"fas\", \"fa-search\"], [1, \"fas\", \"fa-pen\"], [3, \"attributeControl\", \"isSmallSize\", \"formGroup\", \"readonly\"], [\"id\", \"detailModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", 1, \"modal\", \"fade\", \"dk-modal-open\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-lg\"], [\"id\", \"detail\", 1, \"modal-title\"], [3, \"readonly\", \"isSmallSize\", \"attributeControl\", \"formGroup\", 4, \"ngFor\", \"ngForOf\"], [3, \"readonly\", \"isSmallSize\", \"attributeControl\", \"formGroup\"]], template: function AttributeTableComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"thead\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"tr\");\n        ɵngcc0.ɵɵelementStart(3, \"th\", 2);\n        ɵngcc0.ɵɵtext(4, \" Action \");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(5, AttributeTableComponent_th_5_Template, 3, 2, \"th\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"tbody\", 4);\n        ɵngcc0.ɵɵtemplate(7, AttributeTableComponent_tr_7_Template, 8, 8, \"tr\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, AttributeTableComponent_div_8_Template, 14, 9, \"div\", 6);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(11, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(13, \"h5\", 11);\n        ɵngcc0.ɵɵtext(14);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(15, \"button\", 12);\n        ɵngcc0.ɵɵlistener(\"click\", function AttributeTableComponent_Template_button_click_15_listener() { return ctx.closeErrorModal(); });\n        ɵngcc0.ɵɵelementStart(16, \"span\", 13);\n        ɵngcc0.ɵɵtext(17, \"\\u00D7\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(18, \"div\", 14);\n        ɵngcc0.ɵɵelementStart(19, \"p\");\n        ɵngcc0.ɵɵtext(20);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(21, \"div\", 15);\n        ɵngcc0.ɵɵelementStart(22, \"button\", 16);\n        ɵngcc0.ɵɵlistener(\"click\", function AttributeTableComponent_Template_button_click_22_listener() { return ctx.closeErrorModal(); });\n        ɵngcc0.ɵɵtext(23, \"OK\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"table-sm\", ctx.isSmallSize);\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.parentFormGroup);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.attributeControls);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"formArrayName\", ctx.entityRelation.RELATION_ID);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.formArray.controls);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.currentFormGroup);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(13, _c0, ctx.isErrorModalShown))(\"ngStyle\", ɵngcc0.ɵɵpureFunction1(15, _c1, ctx.displayErrorModal));\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.errorTitle);\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵtextInterpolate(ctx.errorDescription);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx.isSmallSize);\n    } }, directives: [ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.NgForOf, ɵngcc3.FormArrayName, ɵngcc4.NgIf, ɵngcc4.NgClass, ɵngcc4.NgStyle, AttributeComponent, AttributeFormComponent], styles: [\".relation-table[_ngcontent-%COMP%]{border:none;display:block;overflow-x:auto;white-space:nowrap}.actions[_ngcontent-%COMP%]{max-width:6rem;min-width:5rem;width:5rem}.dk-modal-open[_ngcontent-%COMP%]{overflow:auto}\"] });\n/** @nocollapse */\nAttributeTableComponent.ctorParameters = () => [];\nAttributeTableComponent.propDecorators = {\n    attributeControls: [{ type: Input }],\n    formArray: [{ type: Input }],\n    parentFormGroup: [{ type: Input }],\n    entityRelation: [{ type: Input }],\n    isSmallSize: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AttributeTableComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dk-app-attribute-table',\n                template: \"<table class=\\\"table table-bordered relation-table\\\"\\n       [class.table-sm]=\\\"isSmallSize\\\"\\n       [formGroup]=\\\"parentFormGroup\\\">\\n  <thead class=\\\"thead-light\\\">\\n  <tr>\\n    <th scope=\\\"col\\\">\\n      Action\\n    </th>\\n    <th scope=\\\"col\\\" *ngFor=\\\"let attributeControl of attributeControls\\\">\\n      {{attributeControl.label}}<strong *ngIf=\\\"attributeControl.primaryKey\\\" class=\\\"primaryKey\\\">*</strong>\\n    </th>\\n  </tr>\\n  </thead>\\n\\n  <tbody [formArrayName]=\\\"entityRelation.RELATION_ID\\\">\\n    <tr *ngFor=\\\"let formGroup of formArray.controls; let i = index\\\">\\n      <td class=\\\"actions\\\">\\n        <button class=\\\"btn\\\" [class.btn-sm]=\\\"isSmallSize\\\" type=\\\"button\\\" (click)=\\\"openDetailModal(i)\\\" title=\\\"Detail\\\">\\n          <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-search\\\"></span>\\n          <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-pen\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" [class.btn-sm]=\\\"isSmallSize\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteRelationInstance(i)\\\" title=\\\"Delete\\\">\\n          <span class=\\\"far fa-trash-alt\\\"></span>\\n        </button>\\n      </td>\\n      <td *ngFor=\\\"let attributeControl of attributeControls\\\">\\n        <dk-app-attribute [attributeControl]=\\\"attributeControl\\\" [isSmallSize] = \\\"isSmallSize\\\"\\n                          [formGroup]=\\\"formGroup\\\" [readonly]=\\\"readonly\\\">\\n\\n        </dk-app-attribute>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<div *ngIf=\\\"currentFormGroup\\\" class=\\\"modal fade dk-modal-open\\\" [ngClass]=\\\"{'show': isDetailModalShown}\\\"\\n     [ngStyle]=\\\"{'display': displayDetailModal}\\\" id=\\\"detailModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"detail\\\">Line Detail</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeDetailModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <dk-app-attribute-form *ngFor=\\\"let attributeControl of attributeControls\\\"\\n                               [readonly]=\\\"readonly\\\" [isSmallSize]=\\\"isSmallSize\\\"\\n                            [attributeControl]=\\\"attributeControl\\\" [formGroup]=\\\"currentFormGroup\\\">\\n        </dk-app-attribute-form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [class.btn-sm]=\\\"isSmallSize\\\" (click)=\\\"closeDetailModal()\\\">OK</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"modal fade\\\" [ngClass]=\\\"{'show': isErrorModalShown}\\\"\\n     [ngStyle]=\\\"{'display': displayErrorModal}\\\" id=\\\"errorModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"error\\\">{{errorTitle}}</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeErrorModal()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>{{errorDescription}}</p>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" [class.btn-sm]=\\\"isSmallSize\\\" (click)=\\\"closeErrorModal()\\\">OK</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\",\n                styles: [\".relation-table{border:none;display:block;overflow-x:auto;white-space:nowrap}.actions{max-width:6rem;min-width:5rem;width:5rem}.dk-modal-open{overflow:auto}\"]\n            }]\n    }], function () { return []; }, { attributeControls: [{\n            type: Input\n        }], formArray: [{\n            type: Input\n        }], parentFormGroup: [{\n            type: Input\n        }], entityRelation: [{\n            type: Input\n        }], isSmallSize: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    AttributeTableComponent.prototype.isDetailModalShown;\n    /** @type {?} */\n    AttributeTableComponent.prototype.currentFormGroup;\n    /** @type {?} */\n    AttributeTableComponent.prototype.isErrorModalShown;\n    /** @type {?} */\n    AttributeTableComponent.prototype.errorTitle;\n    /** @type {?} */\n    AttributeTableComponent.prototype.errorDescription;\n    /** @type {?} */\n    AttributeTableComponent.prototype.attributeControls;\n    /** @type {?} */\n    AttributeTableComponent.prototype.formArray;\n    /** @type {?} */\n    AttributeTableComponent.prototype.parentFormGroup;\n    /** @type {?} */\n    AttributeTableComponent.prototype.entityRelation;\n    /** @type {?} */\n    AttributeTableComponent.prototype.isSmallSize;\n    /** @type {?} */\n    AttributeTableComponent.prototype.readonly;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/jor-angular.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass JorAngularComponent {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nJorAngularComponent.ɵfac = function JorAngularComponent_Factory(t) { return new (t || JorAngularComponent)(); };\nJorAngularComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: JorAngularComponent, selectors: [[\"dk-jor-angular\"]], decls: 0, vars: 0, template: function JorAngularComponent_Template(rf, ctx) { }, styles: [\"@import \\\"/src/assets/css/global.css\\\";\"], encapsulation: 2 });\n/** @nocollapse */\nJorAngularComponent.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JorAngularComponent, [{\n        type: Component,\n        args: [{\n                selector: 'dk-jor-angular',\n                template: \"<!-- html content -->\\n\",\n                encapsulation: ViewEncapsulation.None,\n                styles: [\"@import \\\"/src/assets/css/global.css\\\";\"]\n            }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/jor-angular.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass JorAngularModule {\n}\nJorAngularModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: JorAngularModule });\nJorAngularModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function JorAngularModule_Factory(t) { return new (t || JorAngularModule)(); }, imports: [[\n            CommonModule,\n            HttpClientModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(JorAngularModule, { declarations: function () { return [JorAngularComponent, SearchHelpComponent, AttributeComponent, AttributeFormComponent, AttributeTableComponent, AttributeForm2Component]; }, imports: function () { return [CommonModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [SearchHelpComponent, AttributeComponent, AttributeFormComponent, AttributeForm2Component, AttributeTableComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JorAngularModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    JorAngularComponent,\n                    SearchHelpComponent,\n                    AttributeComponent,\n                    AttributeFormComponent,\n                    AttributeTableComponent,\n                    AttributeForm2Component\n                ],\n                imports: [\n                    CommonModule,\n                    HttpClientModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                exports: [\n                    SearchHelpComponent,\n                    AttributeComponent,\n                    AttributeFormComponent,\n                    AttributeForm2Component,\n                    AttributeTableComponent\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: jor-angular.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { Association, Attribute, AttributeBase, AttributeComponent, AttributeControlService, AttributeForm2Component, AttributeFormComponent, AttributeTableComponent, DataDomainH, DataDomainMeta, DataDomainValue, DataElementH, DataElementMeta, Entity, EntityMeta, EntityRelation, EntityService, EntityType, FieldsMappingPair, Involve, JorAngularModule, PartnerInstance, PartnerRole, Projection, QueryObject, Relation, RelationMeta, Relationship, RelationshipH, RelationshipInstance, RelationshipMeta, Role, RoleH, RoleMeta, RoleRelation, SearchHelp, SearchHelpComponent, SearchHelpField, SearchHelpFieldMeta, SearchHelpH, SearchHelpMeta, Selection, Sort, UiMapperService, DomainValueValidator as ɵa, JorAngularComponent as ɵb };\n\n//# sourceMappingURL=jor-angular.js.map","export const msgStore = [\n  { msgCat: 'EXCEPTION',\n    msgName: 'GENERIC',\n    msgText: {\n      EN: {shortText: 'Exception Occurs in Operation: %s',\n           longText: '%s2'}\n    }\n  },\n  { msgCat: 'EXCEPTION',\n    msgName: 'SESSION_EXPIRED',\n    msgText: {\n      EN: {shortText: 'Your session is expired',\n        longText: 'Your session is expired, please <a href=\"/logon\">re-logon</a>'}\n    }\n  },\n  { msgCat: 'ENTITY',\n    msgName: 'NO_CHANGE',\n    msgText: {\n      EN: {shortText: 'No Change is made, nothing is saved!', longText: ''}\n    }\n  },\n  { msgCat: 'ENTITY',\n    msgName: 'HAS_ERRORS',\n    msgText: {\n      EN: {shortText: 'The form has errors, please check!', longText: ''}\n    }\n  },\n  { msgCat: 'ENTITY',\n    msgName: 'ENTITY_SAVED',\n    msgText: {\n      EN: {shortText: 'Entity instance is saved!', longText: ''}\n    }\n  },\n  { msgCat: 'ENTITY',\n    msgName: 'ENTITY_DELETED',\n    msgText: {\n      EN: {shortText: 'Entity instance is deleted!', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'PARTNER_ENTITY_ID_MISSING',\n    msgText: {\n      EN: {shortText: 'Partner Entity ID is Missing', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'PARTNER_INSTANCE_GUID_MISSING',\n    msgText: {\n      EN: {shortText: 'Partner Instance GUID is Missing', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'VALID_TO_EMPTY',\n    msgText: {\n      EN: {shortText: 'Valid To is Mandatory', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'VALID_FROM_AFTER_VALID_TO',\n    msgText: {\n      EN: {shortText: 'Valid From time must be before Valid To', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'MANDATORY_ATTRIBUTE_MISSING',\n    msgText: {\n      EN: {shortText: 'Mandatory attribute must be given values', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'RELATIONSHIP_MANDATORY',\n    msgText: {\n      EN: {shortText: 'Relationship is mandatory', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'RELATIONSHIP_ALREADY_EXISTS',\n    msgText: {\n      EN: {shortText: 'Relationship %s already exists!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'NO_CHANGE',\n    msgText: {\n      EN: {shortText: 'No Change is made, nothing is saved!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'INVALID_DATA',\n    msgText: {\n      EN: {shortText: 'Data is invalid, please check!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'ENTITY_ID_MISSING',\n    msgText: {\n      EN: {shortText: 'Entity Type ID is missing', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'ENTITY_TYPE_SAVED',\n    msgText: {\n      EN: {shortText: 'Entity Type \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'ROLE_SAVED',\n    msgText: {\n      EN: {shortText: 'Role \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATION_ID_MISSING',\n    msgText: {\n      EN: {shortText: 'Relation ID is missing', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATION_PRIMARY_KEY_MISSING',\n    msgText: {\n      EN: {shortText: 'Relation must have at least one attribute as the primary key', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'MISS_RELATION_ASSOCIATION_FIELD_MAPPING',\n    msgText: {\n      EN: {shortText: 'There are no fields-mappings defined for association \\'%s\\'', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATION_SAVED',\n    msgText: {\n      EN: {shortText: 'Relation \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATIONSHIP_SAVED',\n    msgText: {\n      EN: {shortText: 'Relationship \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATIONSHIP_LACK_INVOLVED_ROLES',\n    msgText: {\n      EN: {shortText: 'A relationship must at least have 2 involved roles', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'DATA_ELEMENT_SAVED',\n    msgText: {\n      EN: {shortText: 'Data element \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'DATA_DOMAIN_SAVED',\n    msgText: {\n      EN: {shortText: 'Data domain \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'MINIMUM_ONE_DOMAIN_VALUE',\n    msgText: {\n      EN: {shortText: 'At least one domain value is needed!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'SEARCH_HELP_SAVED',\n    msgText: {\n      EN: {shortText: 'Search Help \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'MINIMUM_ONE_SEARCH_FIELD',\n    msgText: {\n      EN: {shortText: 'At least one search field is needed!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'UNSAVED_NEW',\n    msgText: {\n      EN: {shortText: 'There is a unsaved new object existing, please save it first, then create another.', longText: ''}\n    }\n  }\n];\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'entity', loadChildren: () => import('./entity/entity.module').then(m => m.EntityModule) },\n  { path: 'model', loadChildren:  () => import('./model/model.module').then( m => m.ModelModule) },\n  { path: '',   redirectTo: '/entity/list', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}