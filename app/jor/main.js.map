{"version":3,"file":"main.js","mappings":"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gEbVb,IaUa;kEbVb,eaUa;8DbVb,yDaUa;gEbVb,IaUa;8DbVb,4DaUa;kEbVb,sEaUa;0DbVb,IaUa;gEbVb,EaUa;kEbVb,kBaUa;8DbVb;AAAA;AAAA,QaUa;kEbVb,gBaUa;0DbVb,YaUa;gEbVb,MaUa;kEbVb,wBaUa;0DbVb,IaUa;gEbVb,IaUa;kEbVb,iCaUa;8DbVb;AAAA;AAAA,QaUa;0DbVb,UaUa;gEbVb,UaUa;AAAA;;AAAA;+DbVb,6BaUa;8DbVb,kCaUa;6DbVb,GaUa;8DbVb,kCaUa;6DbVb,GaUa;8DbVb,iDaUa;6DbVb,GaUa;8DbVb,mCaUa;6DbVb,GaUa;8DbVb,8BaUa;6DbVb,GaUa;8DbVb,oNaUa;6DbVb,GaUa;qEbVb,gBaUa;6DbVb,GaUa;qEbVb,sBaUa;6DbVb,GaUa;+DbVb,2BaUa;AAAA;AAAA;AAAA,eboEbH,kBapEa,EboEbqB,sBapEa,EboEbxI,gEapEa,EboEbA,8DapEa,EboEbyI,oDapEa,EboEbA,iDapEa,EboEbzI,yDapEa,EboEbyI,oDapEa,EboEbA,oDapEa;AAAA;AAAA;;;qHAAAnB,yBAAuB;UALnCrH,oDAKmC;;gBAJxB;AAAwBC;AAAAC;;AAIA;;;AASzBY,qBAAiB;YAAzBiE,gDAAKA;AAAoB;AACjBzS,aAAS;YAAjByS,gDAAKA;AAAY;AACT0D,mBAAe;YAAvB1D,gDAAKA;AAAkB;AACfoD,kBAAc;YAAtBpD,gDAAKA;AAAiB;AACd8B,eAAW;YAAnB9B,gDAAKA;AAAc;AACXzI,YAAQ;YAAhByI,gDAAKA;AAAW;;;;MChBN2D,oBAAmB;AAE9BrX,iBAAiB;;AAEjBuJ,UAAQ,IACP;;AAL6B;;;;;mBAAnB8N;;AAAA;;;AAAAA,0CAAAA,+DAAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;qHAAAA,qBAAmB;UAN/B1I,oDAM+B;;gBALpB;AAAgB2I,qBAGXC,iEAAsBC;AAAA5I;AAAAC;;AAEP;;;;;MC4BnB4I,iBAAgB;;;;;mBAAhBA;;AAAA;;;AAAAA,uCAAAA,8DAAAA;AAAA;AAAA,iBAtBTJ,mBAsBS,EArBT1O,mBAqBS,EApBTmL,kBAoBS,EAnBT8B,sBAmBS,EAlBTI,uBAkBS,EAjBTD,uBAiBS,EAhBTzD,iBAgBS;AAAA,YAbToF,yDAaS,EAZTC,kEAYS,EAXTC,uDAWS,EAVTC,+DAUS;AAAA,YAPTlP,mBAOS,EANTmL,kBAMS,EALT8B,sBAKS,EAJTG,uBAIS,EAHTC,uBAGS;AAAA;AAAA;;AAAAyB,uCAAAA,8DAAAA;AAAA,YAdF,CACPC,yDADO,EAEPC,kEAFO,EAGPC,uDAHO,EAIPC,+DAJO,CAcE;AAAA;;;qHAAAJ,kBAAgB;UAxB5BK,mDAwB4B;AAxBnBlV;AACRmV,kBAAY,EAAE,CACZV,mBADY,EAEZ1O,mBAFY,EAGZmL,kBAHY,EAIZ8B,sBAJY,EAKZI,uBALY,EAMZD,uBANY,EAOZzD,iBAPY,CADN;AAUR0F,aAAO,EAAE,CACPN,yDADO,EAEPC,kEAFO,EAGPC,uDAHO,EAIPC,+DAJO,CAVD;AAgBRI,aAAO,EAAE,CACPtP,mBADO,EAEPmL,kBAFO,EAGP8B,sBAHO,EAIPG,uBAJO,EAKPC,uBALO;AAhBD;AAwBmB;;ACpC7B;;AAEG;;ACFH;;AAEG","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/custom.reuse.strategy.ts","./src/app/identity.service.ts","./src/app/msgStore.ts","./src/environments/environment.ts","./src/main.ts","./projects/jor-angular/src/lib/search-help/search-help.component.html","./projects/jor-angular/src/lib/attribute/attribute.component.html","./projects/jor-angular/src/lib/attribute/attribute-form/attribute-form.component.html","./projects/jor-angular/src/lib/attribute/attribute-form2/attribute-form2.component.html","./projects/jor-angular/src/lib/attribute/attribute-table/attribute-table.component.html","./projects/jor-angular/src/lib/entity.ts","./projects/jor-angular/src/lib/ui-mapper.service.ts","./projects/jor-angular/src/lib/entity.service.ts","./projects/jor-angular/src/lib/search-help/search-help.ts","./projects/jor-angular/src/lib/search-help/search-help.component.ts","./projects/jor-angular/src/lib/attribute/attribute-base.ts","./projects/jor-angular/src/lib/attribute/attribute-validators.ts","./projects/jor-angular/src/lib/attribute/attribute-control.service.ts","./projects/jor-angular/src/lib/datetime.directive.ts","./projects/jor-angular/src/lib/attribute/attribute.component.ts","./projects/jor-angular/src/lib/attribute/attribute-form/attribute-form.component.ts","./projects/jor-angular/src/lib/attribute/attribute-form2/attribute-form2.component.ts","./projects/jor-angular/src/lib/attribute/attribute-table/attribute-table.component.ts","./projects/jor-angular/src/lib/jor-angular.component.ts","./projects/jor-angular/src/lib/jor-angular.module.ts","./projects/jor-angular/src/public_api.ts","./projects/jor-angular/src/jor-angular.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'entity', loadChildren: () => import('./entity/entity.module').then(m => m.EntityModule) },\n  { path: 'model', loadChildren:  () => import('./model/model.module').then( m => m.ModelModule) },\n  { path: '',   redirectTo: '/entity/list', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })\n  ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {EntityService} from 'jor-angular';\nimport {environment} from '../environments/environment';\nimport {MessageService} from 'ui-message-angular';\nimport {msgStore} from './msgStore';\nimport {LogonService} from 'ui-logon-angular';\nimport {IdentityService} from './identity.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor( private entityService: EntityService,\n               private identityService: IdentityService,\n               private messageService: MessageService,\n               private logonService: LogonService) {\n    this.entityService.setOriginalHost(environment.originalHost);\n    this.logonService.setHost(environment.originalHost);\n    this.logonService.session().subscribe( data => {\n      this.identityService.setSession( data );\n      this.messageService.setMessageStore(msgStore, this.identityService.Session.LANGUAGE);\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport {RouteReuseStrategy} from '@angular/router';\nimport {CustomReuseStrategy} from './custom.reuse.strategy';\nimport {JorAngularModule} from 'jor-angular';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserModule,\n    JorAngularModule\n  ],\n  providers: [\n    {provide: RouteReuseStrategy, useClass: CustomReuseStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","/**\n * The custom route reuse strategy inherits the \"RouteReuseStrategy\" to achieve a very usual case,\n * which by default, Angular doesn't support.\n * 1. Search for items based on filter conditions.\n * 2. Navigate to one of the item to the detail page(component).\n * 3. Navigate back to searched item list without re-initializing the search&list component again.\n * This requires the Angular route to save the search&list component, and restore it whenever back.\n * The detail solution is described in following thread:\n * https://stackoverflow.com/questions/41280471/how-to-implement-routereusestrategy-shoulddetach-for-specific-routes-in-angular\n */\nimport {ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy} from '@angular/router';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class CustomReuseStrategy implements RouteReuseStrategy {\n  routesToCache: string[] = ['list'];\n  storedRouteHandles = new Map<string, DetachedRouteHandle>();\n\n  /**\n   * When navigation from a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the current route should be stored.\n   * @param route\n   */\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('detaching', route);\n    return this.routesToCache.indexOf(route.routeConfig.path) > -1;\n  }\n\n  /**\n   * If the current route need to be stored, that is shouldDetach return true,\n   * then on this method, you can implement a way to store routes. Usually in a Map.\n   * @param route\n   * @param handle\n   */\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    // console.log('store', route);\n    this.storedRouteHandles.set(route.routeConfig.path, handle);\n  }\n\n  /**\n   * When navigation to a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the target component can be get from a reuse buffer.\n   * @param route\n   */\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldAttach', route);\n    return this.storedRouteHandles.has(route.routeConfig.path);\n  }\n\n  /**\n   * If shouldAttach return true, then this method is invoke to retrieve the component from the buffer.\n   * @param route\n   */\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    return this.storedRouteHandles.get(route.routeConfig.path);\n  }\n\n  /**\n   * By default, Angular doesn't re-initializing the same component if the navigation is not to\n   * a different one. For example, you switch different entity ID in the same entity type detail page.\n   * In this way, shouldReuseRoute should return true to avoid executing other methods in this Class.\n   * However, if you navigate from search&list component to entity detail component, then the method should return false.\n   * So that other methods can be executed to decide whether the search&list component should be stored for future reuse.\n   * @param future\n   * @param curr\n   */\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldReuseRoute, future:', future, 'current:', curr);\n    return future.routeConfig === curr.routeConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {formatDate} from '@angular/common';\nimport {Session} from 'ui-logon-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IdentityService {\n  private session: Session;\n\n  constructor() {\n  }\n\n  setSession( data: any ) {\n    this.session = <Session>data;\n  }\n\n  get Session(): Session {\n    if (this.session) { return this. session; }\n    const defaultSession = new Session();\n    defaultSession.USER_ID = 'DH001';\n    defaultSession.LANGUAGE = 'EN';\n    return defaultSession;\n  }\n\n  get CurrentTime(): string {\n    return formatDate( new Date(), 'yyyy-MM-dd hh:mm:ss', 'en-US' );\n  }\n}\n","export const msgStore = [\n  { msgCat: 'EXCEPTION',\n    msgName: 'GENERIC',\n    msgText: {\n      EN: {shortText: 'Exception Occurs in Operation: %s',\n           longText: '%s2'}\n    }\n  },\n  { msgCat: 'EXCEPTION',\n    msgName: 'SESSION_EXPIRED',\n    msgText: {\n      EN: {shortText: 'Your session is expired',\n        longText: 'Your session is expired, please <a href=\"/logon\">re-logon</a>'}\n    }\n  },\n  { msgCat: 'ENTITY',\n    msgName: 'NO_CHANGE',\n    msgText: {\n      EN: {shortText: 'No Change is made, nothing is saved!', longText: ''}\n    }\n  },\n  { msgCat: 'ENTITY',\n    msgName: 'HAS_ERRORS',\n    msgText: {\n      EN: {shortText: 'The form has errors, please check!', longText: ''}\n    }\n  },\n  { msgCat: 'ENTITY',\n    msgName: 'ENTITY_SAVED',\n    msgText: {\n      EN: {shortText: 'Entity instance is saved!', longText: ''}\n    }\n  },\n  { msgCat: 'ENTITY',\n    msgName: 'ENTITY_DELETED',\n    msgText: {\n      EN: {shortText: 'Entity instance is deleted!', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'PARTNER_ENTITY_ID_MISSING',\n    msgText: {\n      EN: {shortText: 'Partner Entity ID is Missing', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'PARTNER_INSTANCE_GUID_MISSING',\n    msgText: {\n      EN: {shortText: 'Partner Instance GUID is Missing', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'VALID_TO_EMPTY',\n    msgText: {\n      EN: {shortText: 'Valid To is Mandatory', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'VALID_FROM_AFTER_VALID_TO',\n    msgText: {\n      EN: {shortText: 'Valid From time must be before Valid To', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'MANDATORY_ATTRIBUTE_MISSING',\n    msgText: {\n      EN: {shortText: 'Mandatory attribute must be given values', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'RELATIONSHIP_MANDATORY',\n    msgText: {\n      EN: {shortText: 'Relationship is mandatory', longText: ''}\n    }\n  },\n  { msgCat: 'RELATIONSHIP',\n    msgName: 'RELATIONSHIP_ALREADY_EXISTS',\n    msgText: {\n      EN: {shortText: 'Relationship %s already exists!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'NO_CHANGE',\n    msgText: {\n      EN: {shortText: 'No Change is made, nothing is saved!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'INVALID_DATA',\n    msgText: {\n      EN: {shortText: 'Data is invalid, please check!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'ENTITY_ID_MISSING',\n    msgText: {\n      EN: {shortText: 'Entity Type ID is missing', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'ENTITY_TYPE_SAVED',\n    msgText: {\n      EN: {shortText: 'Entity Type \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'ROLE_SAVED',\n    msgText: {\n      EN: {shortText: 'Role \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATION_ID_MISSING',\n    msgText: {\n      EN: {shortText: 'Relation ID is missing', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATION_PRIMARY_KEY_MISSING',\n    msgText: {\n      EN: {shortText: 'Relation must have at least one attribute as the primary key', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'MISS_RELATION_ASSOCIATION_FIELD_MAPPING',\n    msgText: {\n      EN: {shortText: 'There are no fields-mappings defined for association \\'%s\\'', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATION_SAVED',\n    msgText: {\n      EN: {shortText: 'Relation \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATIONSHIP_SAVED',\n    msgText: {\n      EN: {shortText: 'Relationship \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'RELATIONSHIP_LACK_INVOLVED_ROLES',\n    msgText: {\n      EN: {shortText: 'A relationship must at least have 2 involved roles', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'DATA_ELEMENT_SAVED',\n    msgText: {\n      EN: {shortText: 'Data element \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'DATA_DOMAIN_SAVED',\n    msgText: {\n      EN: {shortText: 'Data domain \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'MINIMUM_ONE_DOMAIN_VALUE',\n    msgText: {\n      EN: {shortText: 'At least one domain value is needed!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'SEARCH_HELP_SAVED',\n    msgText: {\n      EN: {shortText: 'Search Help \"%s\" is saved', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'MINIMUM_ONE_SEARCH_FIELD',\n    msgText: {\n      EN: {shortText: 'At least one search field is needed!', longText: ''}\n    }\n  },\n  { msgCat: 'MODEL',\n    msgName: 'UNSAVED_NEW',\n    msgText: {\n      EN: {shortText: 'There is a unsaved new object existing, please save it first, then create another.', longText: ''}\n    }\n  }\n];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\nexport const environment = {\n  production: false,\n  originalHost: 'http://localhost:3000'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","<div class=\"modal fade\" id=\"searchHelp\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isSearchHelpModalShown}\" [ngStyle]=\"{'display': displaySearchHelpModal}\">\n  <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n    <div class=\"modal-content dk-search-help-content\">\n      <div class=\"modal-header dk-search-help-header\">\n        <h6 class=\"modal-title\" id=\"addRelationship\">{{searchHelp?.OBJECT_NAME}} ({{listData.length}})</h6>\n        <button type=\"button\" class=\"close\" (click)=\"closeSearchHelpModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div *ngIf=\"isFilterShown\" class=\"card mb-2\">\n          <div *ngIf=\"searchHelp && searchHelp.FUZZY_SEARCH\" class=\"mt-2 mx-2 row\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search\" [(ngModel)]=\"fuzzySearchTerm\" (keyup)=\"enterSearch($event)\">\n          </div>\n          <div class=\"mt-2 mx-2 row\" [formGroup]=\"filterFieldsFormGroup\">\n            <div *ngFor=\"let filterField of filterFields\" class=\"col-6 form-group row\">\n              <label for=\"{{filterField.FIELD_NAME}}\" class=\"col-6 col-form-label col-form-label-sm text-right\">\n                {{filterField.LABEL_TEXT || filterField.FIELD_NAME}}:</label>\n              <input id=\"{{filterField.FIELD_NAME}}\" name=\"{{filterField.FIELD_NAME}}\" formControlName=\"{{filterField.FIELD_NAME}}\"\n                     type=\"text\" class=\"col-6 form-control form-control-sm\" [readonly]=\"filterField.FILTER_DISP_ONLY\" (keyup)=\"enterSearch($event)\">\n            </div>\n          </div>\n\n          <div class=\"mb-2\">\n            <button type=\"button\" id=\"search\" class=\"btn btn-sm btn-primary float-right mr-2\" (click)=\"search()\">\n              Search\n            </button>\n          </div>\n        </div>\n\n        <button *ngIf=\"!isFilterShown\" type=\"button\" class=\"btn btn-link float-right\" (click)=\"showFilter()\">Show Filter</button>\n        <button *ngIf=\"isFilterShown\" type=\"button\" class=\"btn btn-link float-right\" (click)=\"hideFilter()\">Hide Filter</button>\n\n        <table class=\"table table-bordered table-sm table-hover dk-search-table\">\n          <thead class=\"thead-light\">\n          <tr>\n            <th scope=\"col\">\n              <input *ngIf=\"searchHelp?.MULTI\" type=\"checkbox\" [(ngModel)]=\"isSelectAllChecked\" (click)=\"selectAll()\">\n            </th>\n            <th *ngFor=\"let listField of listFields\"\n                [style.display]=\"listField.FIELD_NAME === 'INSTANCE_GUID' ? 'none' : 'table-cell'\">\n              {{listField.LIST_HEADER_TEXT || listField.FIELD_NAME}}\n            </th>\n          </tr>\n          </thead>\n\n          <tbody>\n          <tr *ngFor=\"let item of listData; let i = index\">\n            <td>\n              <input *ngIf=\"!searchHelp.MULTI\" type=\"radio\" name=\"selectedIndex\" [value]=\"i\" [(ngModel)]=\"selectedIndex\" (dblclick)=\"confirmSelection()\">\n              <input *ngIf=\"searchHelp.MULTI\" type=\"checkbox\" [(ngModel)]=\"item.SELECTED\">\n            </td>\n            <td *ngFor=\"let listField of listFields\"\n                [style.display]=\"listField.FIELD_NAME === 'INSTANCE_GUID' ? 'none' : 'table-cell'\">\n              {{item[listField.FIELD_NAME]}}\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div class=\"modal-footer dk-search-help-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"closeSearchHelpModal()\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"confirmSelection()\" [disabled]=\"searchHelp?.READ_ONLY\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>\n","<div [formGroup]=\"formGroup\">\n  <div [ngSwitch]=\"attributeControl.controlType\">\n    <div *ngIf=\"attributeControl.controlType === 'text' ||\n                attributeControl.controlType === 'text_capital' ||\n                attributeControl.controlType === 'integer'\" class=\"input-group\">\n      <input *ngSwitchCase=\"'text'\" type=\"text\" class=\"form-control\"\n             [class.form-control-sm] = \"isSmallSize\"\n             [formControlName]=\"attributeControl.name\"\n             [name]=\"attributeControl.key\"\n             [maxlength]=\"attributeControl.maxLength\"\n             [pattern]=\"attributeControl.pattern\"\n             (change) = \"onChange($event)\"\n             [readonly]=\"isReadonly\">\n      <input *ngSwitchCase=\"'text_capital'\" type=\"text\" class=\"form-control\"\n             [class.form-control-sm] = \"isSmallSize\"\n             [formControlName]=\"attributeControl.name\"\n             [name]=\"attributeControl.key\"\n             [maxlength]=\"attributeControl.maxLength\"\n             (keyup)=\"onKeyup(attributeControl.name)\"\n             (change) = \"onChange($event)\"\n             [readonly]=\"isReadonly\" >\n      <input *ngSwitchCase=\"'integer'\" type=\"number\" class=\"form-control\"\n             [class.form-control-sm] = \"isSmallSize\"\n             [formControlName]=\"attributeControl.name\"\n             [name]=\"attributeControl.key\"\n             [pattern]=\"attributeControl.pattern\"\n             (change) = \"onChange($event)\"\n             [readonly]=\"isReadonly\" >\n      <div *ngIf=\"attributeControl.searchHelpId || attributeControl.domainRelationId\" class=\"input-group-append\">\n        <button class=\"btn btn-outline-secondary btn-sm\" type=\"button\" (click)=\"onSearchHelp(attributeControl)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n      </div>\n    </div>\n    <input *ngSwitchCase=\"'decimal'\" type=\"number\" class=\"form-control\"\n           [class.form-control-sm] = \"isSmallSize\"\n           [formControlName]=\"attributeControl.name\"\n           [name]=\"attributeControl.key\"\n           [step]=\"attributeControl.step\"\n           [placeholder]=\"attributeControl.placeholder\"\n           [pattern]=\"attributeControl.pattern\"\n           (change) = \"onChange($event)\"\n           [readonly]=\"isReadonly\" >\n    <input *ngSwitchCase=\"'checkbox'\" type=\"checkbox\" class=\"mb-1 ml-1\"\n           [class.form-control-sm] = \"isSmallSize\"\n           [formControlName]=\"attributeControl.name\"\n           (change) = \"onChange($event)\"\n           [name]=\"attributeControl.key\">\n    <textarea *ngSwitchCase=\"'textarea'\" class=\"form-control\"\n              [class.form-control-sm] = \"isSmallSize\"\n              [formControlName]=\"attributeControl.name\"\n              [name]=\"attributeControl.key\"\n              [rows]=\"attributeControl.rows\"\n              (change) = \"onChange($event)\"\n              [readonly]=\"isReadonly\"></textarea>\n    <input *ngSwitchCase=\"'file'\" type=\"file\" class=\"form-control\"\n           [class.form-control-sm] = \"isSmallSize\"\n           [formControlName]=\"attributeControl.name\"\n           [name]=\"attributeControl.key\"\n           (change) = \"onChange($event)\"\n           [readonly]=\"isReadonly\" >\n    <input *ngSwitchCase=\"'date'\" type=\"date\" class=\"form-control\"\n           [class.form-control-sm] = \"isSmallSize\"\n           [formControlName]=\"attributeControl.name\"\n           [name]=\"attributeControl.key\"\n           (change) = \"onChange($event)\"\n           [readonly]=\"isReadonly\" >\n    <input *ngSwitchCase=\"'timestamp'\" type=\"datetime-local\" class=\"form-control\" step=\"1\"\n           [class.form-control-sm] = \"isSmallSize\"\n           [(localDatetime)] = \"localDatetime\"\n           (dateChange)=\"onDateChange($event)\"\n           [name]=\"attributeControl.key\"\n           (change) = \"onChange($event)\"\n           [readonly]=\"isReadonly\" >\n    <input *ngSwitchCase=\"'password'\" type=\"password\" class=\"form-control\"\n           [class.form-control-sm] = \"isSmallSize\"\n           [formControlName]=\"attributeControl.name\"\n           [name]=\"attributeControl.key\"\n           (change) = \"onChange($event)\"\n           [readonly]=\"isReadonly\" >\n    <select *ngSwitchCase=\"'dropdown'\" class=\"form-control\"\n            [class.form-control-sm] = \"isSmallSize\"\n            [formControlName]=\"attributeControl.name\"\n            [name]=\"attributeControl.key\"\n            (change) = \"onChange($event)\">\n      <option *ngFor=\"let opt of attributeControl.dropdownList\" [value]=\"opt.key\">{{opt.value}}</option>\n    </select>\n  </div>\n\n  <div *ngIf=\"!noErrorMsg\" [class.ng-invalid]=\"invalid\" class=\"dk-invalid-feedback\">\n    {{errorMessage}}\n  </div>\n</div>\n\n<dk-app-search-help></dk-app-search-help>\n","<div class=\"form-group row\" [formGroup]=\"formGroup\">\n  <label class=\"col-4 col-form-label text-right\"\n         [class.form-control-sm]=\"isSmallSize\"\n         [attr.for]=\"attributeControl.key\">\n    {{attributeControl.label}}<strong *ngIf=\"attributeControl.primaryKey\" class=\"primaryKey\">*</strong>:\n  </label>\n\n  <dk-app-attribute class=\"col-8\" [attributeControl]=\"attributeControl\" [formGroup]=\"formGroup\"\n                 [isSmallSize]=\"isSmallSize\" [readonly]=\"readonly\">\n  </dk-app-attribute>\n\n</div>\n","<div class=\"form-group\" [formGroup]=\"formGroup\">\n  <label class=\"col-form-label\"\n         [class.form-control-sm]=\"isSmallSize\"\n         [attr.for]=\"attributeControl.key\">\n    {{attributeControl.label}}<strong *ngIf=\"attributeControl.primaryKey\" class=\"primaryKey\">*</strong>:\n    <span [class.ng-invalid]=\"invalid\" class=\"dk-invalid-feedback\">{{errorMessage}}</span>\n  </label>\n\n  <dk-app-attribute [attributeControl]=\"attributeControl\" [formGroup]=\"formGroup\"\n                    [isSmallSize]=\"isSmallSize\" [readonly]=\"readonly\" [noErrorMsg]=\"true\">\n  </dk-app-attribute>\n\n</div>\n","<table class=\"table table-bordered relation-table\"\n       [class.table-sm]=\"isSmallSize\"\n       [formGroup]=\"parentFormGroup\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th scope=\"col\">\n      Action\n    </th>\n    <th scope=\"col\" *ngFor=\"let attributeControl of attributeControls\">\n      {{attributeControl.label}}<strong *ngIf=\"attributeControl.primaryKey\" class=\"primaryKey\">*</strong>\n    </th>\n  </tr>\n  </thead>\n\n  <tbody [formArrayName]=\"entityRelation.RELATION_ID\">\n    <tr *ngFor=\"let formGroup of formArray.controls; let i = index\">\n      <td class=\"actions\">\n        <button class=\"btn\" [class.btn-sm]=\"isSmallSize\" type=\"button\" (click)=\"openDetailModal(i)\" title=\"Detail\">\n          <span *ngIf=\"readonly\" class=\"fas fa-search\"></span>\n          <span *ngIf=\"!readonly\" class=\"fas fa-pen\"></span>\n        </button>\n        <button class=\"btn\" [class.btn-sm]=\"isSmallSize\" type=\"button\" [disabled]=\"readonly\" (click)=\"deleteRelationInstance(i)\" title=\"Delete\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n      <td *ngFor=\"let attributeControl of attributeControls\">\n        <dk-app-attribute [attributeControl]=\"attributeControl\" [isSmallSize] = \"isSmallSize\"\n                          [formGroup]=\"formGroup\" [readonly]=\"readonly\">\n\n        </dk-app-attribute>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<div *ngIf=\"currentFormGroup\" class=\"modal fade dk-modal-open\" [ngClass]=\"{'show': isDetailModalShown}\"\n     [ngStyle]=\"{'display': displayDetailModal}\" id=\"detailModal\" tabindex=\"-1\" role=\"dialog\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"detail\">Line Detail</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeDetailModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <dk-app-attribute-form *ngFor=\"let attributeControl of attributeControls\"\n                               [readonly]=\"readonly\" [isSmallSize]=\"isSmallSize\"\n                            [attributeControl]=\"attributeControl\" [formGroup]=\"currentFormGroup\">\n        </dk-app-attribute-form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" [class.btn-sm]=\"isSmallSize\" (click)=\"closeDetailModal()\">OK</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" [ngClass]=\"{'show': isErrorModalShown}\"\n     [ngStyle]=\"{'display': displayErrorModal}\" id=\"errorModal\" tabindex=\"-1\" role=\"dialog\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"error\">{{errorTitle}}</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeErrorModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{errorDescription}}</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" [class.btn-sm]=\"isSmallSize\" (click)=\"closeErrorModal()\">OK</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n","export class Entity {\n  ENTITY_ID: string;\n  INSTANCE_GUID: string;\n  [key: string]: any;\n  relationships?: Relationship[];\n}\nexport class Relationship {\n  RELATIONSHIP_ID: string;\n  SELF_ROLE_ID: string;\n  values: RelationshipInstance[];\n}\nexport class RelationshipInstance {\n  action?: string;\n  RELATIONSHIP_INSTANCE_GUID: string;\n  VALID_FROM?: string;\n  VALID_TO?: string;\n  PARTNER_INSTANCES: PartnerInstance[];\n  [key: string]: any;\n}\nexport class PartnerInstance {\n  ENTITY_ID: string;\n  ROLE_ID: string;\n  INSTANCE_GUID: string;\n  [key: string]: any;\n}\nexport class PartnerRole {\n  ENTITY_ID: string;\n  ROLE_ID: string;\n}\nexport class EntityMeta {\n  ENTITY_ID: string;\n  ENTITY_DESC?: string;\n  VERSION_NO: number;\n  ROLES: Role[];\n}\nexport class Attribute {\n  ATTR_GUID?: string;\n  RELATION_ID: string;\n  ATTR_NAME: string;\n  ATTR_DESC?: string;\n  DATA_ELEMENT?: string;\n  SEARCH_HELP_ID?: string;\n  SEARCH_HELP_EXPORT_FIELD?: string;\n  DOMAIN_ID?: string;\n  DOMAIN_TYPE?: number;\n  REG_EXPR?: string;\n  DOMAIN_ENTITY_ID?: string;\n  DOMAIN_RELATION_ID?: string;\n  LABEL_TEXT?: string;\n  LIST_HEADER_TEXT?: string;\n  DATA_TYPE: number;\n  DATA_LENGTH?: number;\n  DECIMAL?: number;\n  CAPITAL_ONLY?: boolean;\n  UNSIGNED?: boolean;\n  ORDER?: number;\n  PRIMARY_KEY?: boolean;\n  AUTO_INCREMENT?: boolean;\n}\nexport class Role {\n  ROLE_ID: string;\n  ROLE_DESC?: string;\n  CONDITIONAL_ATTR?: string;\n  CONDITIONAL_VALUE?: string;\n  RELATIONS: RoleRelation[];\n  RELATIONSHIPS: RelationshipMeta[];\n}\nexport class RoleRelation {\n  RELATION_ID: string;\n  RELATION_DESC?: string;\n  CARDINALITY: string;\n}\nexport class RelationshipMeta {\n  RELATIONSHIP_ID: string;\n  RELATIONSHIP_DESC?: string;\n  VALID_PERIOD?: number;\n  SINGLETON?: boolean;\n  CREATE_BY?: string;\n  CREATE_TIME?: string;\n  LAST_CHANGE_BY?: string;\n  LAST_CHANGE_TIME?: string;\n  INVOLVES: Involve[];\n}\nexport class Involve {\n  ROLE_ID: string;\n  ROLE_DESC?: string;\n  CARDINALITY: string;\n  DIRECTION: string;\n}\nexport class RelationMeta {\n  RELATION_ID: string;\n  RELATION_DESC?: string;\n  VERSION_NO: number;\n  ATTRIBUTES: Attribute[];\n  ASSOCIATIONS?: Association[];\n}\nexport class Association {\n  ASSOCIATION_NAME: string;\n  RIGHT_RELATION_ID: string;\n  CARDINALITY: string;\n  FOREIGN_KEY_CHECK: boolean;\n  FIELDS_MAPPING: FieldsMappingPair[];\n}\nexport class FieldsMappingPair {\n  LEFT_FIELD: string;\n  RIGHT_FIELD: string;\n}\n\nexport class EntityRelation {\n  RELATION_ID: string;\n  RELATION_DESC?: string;\n  CARDINALITY: string;\n  ROLE_ID: string;\n  CONDITIONAL_ATTR: string;\n  CONDITIONAL_VALUE: string;\n  EMPTY: boolean;\n  DISABLED: boolean;\n  ATTRIBUTES: Attribute[];\n}\n\nexport class Selection {\n  RELATION_ID?: string;\n  FIELD_NAME: string;\n  OPERATOR: string;\n  LOW: string;\n  HIGH?: string;\n}\n\nexport class Projection {\n  RELATION_ID?: string;\n  FIELD_NAME: string;\n  ALIAS?: string;\n}\n\nexport class QueryObject {\n  ENTITY_ID: string;\n  RELATION_ID: string;\n  PROJECTION?: Array<string|Projection>;\n  FILTER?: Selection[];\n  SORT?: string[]|Sort[];\n}\n\nexport class Sort {\n  FIELD_NAME: string;\n  RELATION_ID?: string;\n  ORDER?: string;\n}\n\nexport class EntityType {\n  ENTITY_ID: string;\n  ENTITY_DESC?: string;\n  VERSION_NO: number;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class Relation {\n  RELATION_ID: string;\n  RELATION_DESC?: string;\n  VERSION_NO: number;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class RelationshipH {\n  RELATIONSHIP_ID: string;\n  RELATIONSHIP_DESC?: string;\n  VALID_PERIOD: number;\n  VERSION_NO: number;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class RoleH {\n  ROLE_ID: string;\n  ROLE_DESC?: string;\n  VERSION_NO: number;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class RoleMeta {\n  ROLE_ID: string;\n  ROLE_DESC?: string;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n  RELATIONS?: RoleRelation[];\n}\n\nexport class DataElementH {\n  ELEMENT_ID: string;\n  ELEMENT_DESC?: string;\n  VERSION_NO: number;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class DataElementMeta {\n  ELEMENT_ID: string;\n  ELEMENT_DESC?: string;\n  LABEL_TEXT?: string;\n  LIST_HEADER_TEXT?: string;\n  DOMAIN_ID?: string;\n  DATA_TYPE: number;\n  DATA_LENGTH?: number;\n  DECIMAL?: number;\n  SEARCH_HELP_ID?: string;\n  SEARCH_HELP_EXPORT_FIELD?: string;\n  PARAMETER_ID?: string;\n  VERSION_NO: number;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class DataDomainH {\n  DOMAIN_ID: string;\n  DOMAIN_DESC?: string;\n  VERSION_NO: number;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class DataDomainMeta {\n  DOMAIN_ID: string;\n  DOMAIN_DESC?: string;\n  DATA_TYPE: number;\n  DATA_LENGTH?: number;\n  DOMAIN_TYPE: number;\n  DECIMAL?: number;\n  UNSIGNED?: boolean;\n  CAPITAL_ONLY?: boolean;\n  REG_EXPR?: string;\n  ENTITY_ID?: string;\n  RELATION_ID?: string;\n  DOMAIN_VALUES?: DataDomainValue[];\n  VERSION_NO: number;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class DataDomainValue {\n  LOW_VALUE: string;\n  LOW_VALUE_TEXT?: string;\n  HIGH_VALUE?: string;\n}\n\nexport class SearchHelpH {\n  SEARCH_HELP_ID: string;\n  SEARCH_HELP_DESC?: string;\n  VERSION_NO: number;\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class SearchHelpMeta {\n  SEARCH_HELP_ID: string;\n  SEARCH_HELP_DESC?: string;\n  VERSION_NO: number;\n  BEHAVIOUR: string; // A: Auto-Trigger Search, M: Manual-Trigger Search\n  ENTITY_ID?: string;\n  RELATION_ID?: string;\n  MULTI?: boolean;  // Allow multiple value selection\n  FUZZY_SEARCH?: boolean; // Allow fuzzy search\n  FIELDS: SearchHelpFieldMeta[];\n  CREATE_BY: string;\n  CREATE_TIME: string;\n  LAST_CHANGE_BY: string;\n  LAST_CHANGE_TIME: string;\n}\n\nexport class SearchHelpFieldMeta {\n  RELATION_ID?: string;\n  FIELD_NAME: string;\n  FIELD_DESC?: string;\n  LABEL_TEXT?: string;\n  LIST_HEADER_TEST?: string;\n  IMPORT: boolean;\n  EXPORT: boolean;\n  IE_FIELD_NAME?: string; // Import or Export field name.\n  LIST_POSITION: number;\n  FILTER_POSITION: number;\n  FILTER_DISP_ONLY?: boolean;\n  DEFAULT_VALUE?: any;\n}\n","import { Injectable } from '@angular/core';\nimport {FormArray, FormGroup} from '@angular/forms';\nimport {PartnerRole} from './entity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiMapperService {\n\n  constructor() { }\n\n  /**\n   * Map a FormGroup to a JOR relation(with cardinality [0..1] and [1..1]) for adding or updating.\n   * @param formGroup: It must be a flat Angular FormGroup, which means no deep structure.\n   * @param keys: Business primary keys to identify one row in the relation(DB table).\n   * For example: Given {USER_ID: 'DH001'}, it means the relation has the primary key 'USER_ID'.\n   * And it must be filled with a fix value 'DH001'.\n   * However, if the value of the key can be derived from the formGroup, then assign null value to it.\n   * For example: Given {EMAIL: null}, the value of key EMAIL will be derived from formGroup.value['EMAIL'].\n   * @param isNew: Determine whether to update or add the value.\n   *\n   * The return is an object like:\n   * {\n   *     action: 'update', USER_ID: 'DH001', MIDDLE_NAME: \"xxxxxx\"\n   * }\n   */\n  composeChangedRelation(formGroup: FormGroup, keys: {}, isNew: boolean = true): object {\n    if (!formGroup.dirty || !keys || Object.keys(keys).length === 0) {\n      return {};\n    }\n    const changedRelation = {action: isNew ? 'add' : 'update'};\n    Object.keys(keys).forEach( key => changedRelation[key] = keys[key] || formGroup.value[key]);\n    Object.keys(formGroup.controls).forEach( key => {\n      const control = formGroup.get(key);\n      if (control.dirty) { changedRelation[key] = control.value; }\n    });\n    return changedRelation;\n  }\n\n  /**\n   * Map a FormArray to JOR relation(with cardinality [0..n] or [1..n]) for adding, updating, or deletion.\n   * @param formArray: It must be a flat Angular FormArray, which means no deep structure.\n   * @param originalArray: To determine whether an item is for adding, or for updating, or for deletion.\n   * the original array, which shares the same structure with the formArray, is used for comparison.\n   * Tips: You can get the originalArray by calling *FormArray.getRawValue()* right after\n   * the FormArray is constructed from the backend data, usually, in ngOnInit().\n   * @param keys: Business primary keys to identify one row in the formArray and originalArray.\n   * For example: Given {EMAIL: null}, it will use the attribute EMAIL to compare if the same item exists or not.\n   * First it iterates the formArray to whether check EMAIL exists in the originalArray,\n   * if exists, use action 'update', otherwise, use action 'add'.\n   * Then it iterates the originalArray to check EMAIL exists in formArray,\n   * if not exists, then the action is set to 'delete'.\n   *\n   * The return is an array like:\n   * [\n   *   {action: \"update\", EMAIL: \"dh003@hotmail.com\", PRIMARY: 1},\n   *   {action: \"add\", EMAIL: \"dh003@gmail.com\", TYPE: \"work\"},\n   *   {action: \"delete\", EMAIL: \"dh003@darkhouse.com\"}\n   * ]\n   */\n  composeChangedRelationArray(formArray: FormArray, originalArray: object[], keys: {}): object[] {\n    if (!formArray.dirty || !keys || Object.keys(keys).length === 0) {\n      return [];\n    }\n    if (!originalArray) { originalArray = []; }\n    const changedRelationArray = [];\n    formArray.controls.forEach( formGroup => {\n      if (formGroup.dirty) {\n        const changedRelation = {};\n        changedRelationArray.push(changedRelation);\n        const index = originalArray.findIndex(element => {\n          let found = true;\n          Object.keys(keys).forEach(key => {\n            if (keys[key]) {return; }\n            found = found && (element[key] === formGroup.value[key]);\n          });\n          return found;\n        });\n        changedRelation['action'] = index === -1 ? 'add' : 'update';\n        Object.keys(keys).forEach( key => changedRelation[key] = keys[key] || formGroup.value[key]);\n        Object.keys(formGroup['controls']).forEach( key => {\n          const control = formGroup.get(key);\n          if (control.dirty) { changedRelation[key] = control.value; }\n        });\n      }\n    });\n    originalArray.forEach( originalRelation => {\n      const index = formArray.controls.findIndex(element => {\n        let found = true;\n        Object.keys(keys).forEach(key => {\n          if (keys[key]) {return; }\n          found = found && (element.value[key] === originalRelation[key]);\n        });\n        return found;\n      });\n      if (index === -1) {\n        const deletedRelation = {action: 'delete'};\n        Object.keys(keys).forEach( key => deletedRelation[key] = keys[key] || originalRelation[key]);\n        changedRelationArray.push(deletedRelation);\n      }\n    });\n    return changedRelationArray;\n  }\n\n  /**\n   * Map a FormArray to JOR relationships for adding, updating, or deletion.\n   * @param relationshipID: Relationship ID defined in JOR. For example: 'rs_marriage'\n   * @param partnerRoles: Partner roles involved in the relationship.\n   * For example: Given [{ENTITY_ID: 'person', ROLE_ID: 'wife'}], it means the partner is a 'person' with role 'wife'.\n   * In most cases, a relationship only involves 2 roles, like husband and wife.\n   * However, in certain case, there could be more than two. So the partner role is provided as an array.\n   * @param formArray: First, it must be a flat Angular FormArray, which means no deep structure.\n   * Second, it must contain fields: RELATIONSHIP_INSTANCE_GUID and <partner_role_name>_INSTANCE_GUID.\n   * @param originalArray: To determine whether an item is for adding, or for updating, or for deletion.\n   * the original array, which shares the same structure with the formArray, is used for comparison.\n   * Tips: You can get the originalArray by calling *FormArray.getRawValue()* right after\n   * the FormArray is constructed from the backend data, usually, in ngOnInit().\n   * @param nonRelationshipAttributes: Attributes that are not belong to the relationship, but exist in the formArray.\n   * A relationship has its own attributes, for example, rs_marriage has REG_PLACE and COUNTRY.\n   * However, on the UI, you not only want to show the 2 fields, but also the partner's ID, NAME, BIRTHDAY, and so on.\n   * And these attributes should be excluded when adding and changing the relationship.\n   *\n   * The Return will either a null object or a relationship object like:\n   * {\n   *   RELATIONSHIP_ID: \"rs_marriage\",\n   *   values: [\n   *     {action: \"add\", REG_PLACE: \"Shanghai\", COUNTRY: \"China\",\n   *      PARTNER_INSTANCES: [\n   *       {ENTITY_ID: \"person\", ROLE_ID: \"wife\", INSTANCE_GUID: \"391E75B02A1811E981F3C33C6FB0A7C1\"}\n   *     ]},\n   *     {action: \"update\", REG_PLACE: \"Beijing\", RELATIONSHIP_INSTANCE_GUID: \"96DF7F706EE011E9B7B5F7E76DA40E87\"},\n   *     {action: \"delete\", RELATIONSHIP_INSTANCE_GUID: \"96DF7F706EE011E9B7B5F7E76DA40E87\"}\n   *   ]\n   * }\n   */\n  composeChangedRelationship(relationshipID: string, partnerRoles: PartnerRole[], formArray: FormArray,\n                             originalArray: object[], nonRelationshipAttributes: string[]): object {\n    if (!formArray.dirty) {\n      return null;\n    }\n\n    const relationship = {\n      RELATIONSHIP_ID: relationshipID,\n      values: []\n    };\n    formArray.controls.forEach( formGroup => {\n      if (formGroup.dirty) {\n        const changedRelationshipValue = {};\n        relationship.values.push(changedRelationshipValue);\n        if (formGroup.value['RELATIONSHIP_INSTANCE_GUID']) {\n          changedRelationshipValue['action'] = 'update';\n          changedRelationshipValue['RELATIONSHIP_INSTANCE_GUID'] = formGroup.value['RELATIONSHIP_INSTANCE_GUID'];\n        } else {\n          changedRelationshipValue['action'] = 'add';\n          changedRelationshipValue['PARTNER_INSTANCES'] = [];\n          partnerRoles.forEach(partnerRole =>\n            changedRelationshipValue['PARTNER_INSTANCES'].push(\n              {\n                ENTITY_ID: partnerRole.ENTITY_ID,\n                ROLE_ID: partnerRole.ROLE_ID,\n                INSTANCE_GUID: formGroup.value[partnerRole.ROLE_ID + '_INSTANCE_GUID']\n              })\n          );\n        }\n        Object.keys(formGroup['controls']).forEach(key => {\n          if (nonRelationshipAttributes.includes(key) || key.substr(-13) === 'INSTANCE_GUID') {\n            return;\n          }\n          const control = formGroup.get(key);\n          if (control.dirty) {\n            changedRelationshipValue[key] = control.value;\n          }\n        });\n      }\n    });\n    originalArray.forEach(original => {\n      if (formArray.controls.findIndex(\n        formGroup => formGroup.value['RELATIONSHIP_INSTANCE_GUID'] === original['RELATIONSHIP_INSTANCE_GUID']) === -1) {\n        relationship.values.push({action: 'delete', RELATIONSHIP_INSTANCE_GUID: original['RELATIONSHIP_INSTANCE_GUID']});\n      }\n    });\n    return relationship.values.length === 0 ? null : relationship;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {\n  DataDomainH, DataElementH, Entity, EntityMeta, EntityType, QueryObject,\n  Relation, RelationMeta, RelationshipH, RoleH, SearchHelpH\n} from './entity';\nimport {catchError} from 'rxjs/operators';\nimport {MessageService, messageType} from 'ui-message-angular';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntityService {\n  private originalHost = '';\n  private fakeUUIDs = [];\n\n  constructor(private http: HttpClient,\n              private messageService: MessageService) {\n    this.messageService.setMessageStore([\n      { msgCat: 'EXCEPTION', msgName: 'GENERIC',\n        msgText: { EN: {shortText: 'Exception Occurs in Operation: %s', longText: '%s2'}}},\n      { msgCat: 'EXCEPTION', msgName: 'SESSION_EXPIRED',\n        msgText: { EN: {shortText: 'Your session is expired',\n            longText: 'Your session is expired, please <a href=\"/logon\">re-logon</a>'}}}], 'EN');\n  }\n\n  setOriginalHost(host: string) {\n    this.originalHost = host;\n  }\n\n  setMessageStore(msgStore: any, language: string) {\n    this.messageService.setMessageStore(msgStore, language);\n  }\n\n  /**\n   * List all entity IDs in the system\n   */\n  listEntityID(): Observable<string[] | {}> {\n    return this.http.get<any>(this.originalHost + `/api/entity/EntityIDs`).pipe(\n      catchError(this.handleError<any>('listEntityID')));\n  }\n\n  /**\n   * List entity IDs by a given role ID\n   * @param roleID\n   */\n  listEntityIDbyRole(roleID: string): Observable<EntityMeta | {}> {\n    return this.http.get<any>(this.originalHost + `/api/entity/EntityIDs/${roleID}`).pipe(\n      catchError(this.handleError<any>('listEntityIDbyRole')));\n  }\n\n  /**\n   * Return the entity meta for a given entity ID\n   * @param entityID\n   */\n  getEntityMeta(entityID: string): Observable<EntityMeta | {}> {\n    return this.http.get<EntityMeta>(this.originalHost + `/api/entity/meta/${entityID}`).pipe(\n      catchError(this.handleError<any>('getEntityMeta')));\n  }\n\n  /**\n   * Return a list of entity objects according to the description of a given query object\n   * @param queryObject\n   */\n  searchEntities(queryObject: QueryObject): Observable<any> {\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchEntities')));\n  }\n\n  /**\n   * Return an entity instance for a given entity instance GUID\n   * @param instanceGUID\n   */\n  getEntityInstance(instanceGUID: string): Observable<Entity | any[]> {\n    return this.http.get<Entity | any[]>(this.originalHost + `/api/entity/instance/${instanceGUID}`).pipe(\n      catchError(this.handleError<any>('getEntityInstance')));\n  }\n\n  /**\n   * Return a relation's meta data for a given relation ID\n   * @param relationID\n   */\n  getRelationMeta(relationID: string): Observable<RelationMeta | {}> {\n    return this.http.get<RelationMeta>(this.originalHost + `/api/relation/meta/${relationID}`).pipe(\n      catchError(this.handleError<any>('getRelationMeta')));\n  }\n\n  /**\n   * Return all relations' meta data for a given entity ID\n   * @param entityID\n   */\n  getRelationMetaOfEntity(entityID: string): Observable<RelationMeta[]> {\n    return this.http.get<RelationMeta[]>(this.originalHost + `/api/relation/meta/entity/${entityID}`).pipe(\n      catchError(this.handleError<any>('getRelationMetaOfEntity')));\n  }\n\n  /**\n   * Create a new entity instance\n   * @param instance\n   */\n  createEntityInstance(instance: Entity): Observable<any> {\n    return this.http.post<any>(this.originalHost + `/api/entity`, instance, httpOptions).pipe(\n      catchError(this.handleError<any>('createEntityInstance')));\n  }\n\n  /**\n   * Change an existing entity instance\n   * @param instance\n   */\n  changeEntityInstance(instance: Entity): Observable<any> {\n    return this.http.put<any>(this.originalHost + `/api/entity`, instance, httpOptions).pipe(\n      catchError(this.handleError<any>('changeEntityInstance')));\n  }\n\n  /**\n   * Delete an entity instance from a given instance GUID\n   * @param instanceGUID\n   */\n  deleteEntityInstance(instanceGUID: string): Observable<any> {\n    return this.http.delete<any>(this.originalHost + `/api/entity/instance/${instanceGUID}`).pipe(\n      catchError(this.handleError<any>('deleteEntityInstance')));\n  }\n\n  /**\n   * Return entity types(IDs) for a given search term\n   * @param term\n   */\n  listEntityType(term: string): Observable<EntityType[]> {\n    return this.http.get<EntityType[]>(this.originalHost + `/api/model/entity-types?term=${term}`).pipe(\n      catchError(this.handleError<any>('listEntityType')));\n  }\n\n  /**\n   * Return the description of a given entity type(ID)\n   * @param entityID\n   */\n  getEntityTypeDesc(entityID: string): Observable<string | {}> {\n    return this.http.get<string>( this.originalHost + `/api/model/entity-types/${entityID}/desc`).pipe(\n      catchError(this.handleError<any>('getEntityTypeDesc')));\n  }\n\n  /**\n   * Save an entity type after changing or creation\n   * @param entityType\n   */\n  saveEntityType(entityType: any): Observable<any> {\n    return this.http.post<any>(this.originalHost + `/api/model/entity-types`, entityType, httpOptions).pipe(\n      catchError(this.handleError<any>('saveEntityType')));\n  }\n\n  /**\n   * Return a list of relations in the system according to the search term\n   * @param term\n   */\n  listRelation(term: string): Observable<Relation[]> {\n    return this.http.get<Relation[]>(this.originalHost + `/api/model/relations?term=${term}`).pipe(\n      catchError(this.handleError<any>('listRelation')));\n  }\n\n  /**\n   * Return the description of a given relation ID\n   * @param relationID\n   */\n  getRelationDesc(relationID: string): Observable<string | {}> {\n    return this.http.get<string>( this.originalHost + `/api/model/relations/${relationID}/desc`).pipe(\n      catchError(this.handleError<any>('getRelationDesc')));\n  }\n\n  /**\n   * Save a relation after changing or creation\n   * @param relation\n   */\n  saveRelation(relation: any): Observable<any> {\n    return this.http.post<any>(this.originalHost + `/api/model/relations`, relation, httpOptions).pipe(\n      catchError(this.handleError<any>('saveRelation')));\n  }\n\n  /**\n   * Return a list of relationships in the system according to the search term\n   * @param term\n   */\n  listRelationship(term: string): Observable<RelationshipH[]> {\n    return this.http.get<RelationshipH[]>(this.originalHost + `/api/model/relationships?term=${term}`).pipe(\n      catchError(this.handleError<any>('listRelationship')));\n  }\n\n  /**\n   * Return a relationship definition from a given relationship ID\n   * @param relationshipID\n   */\n  getRelationship(relationshipID: string): Observable<any> {\n    return this.http.get<any>(this.originalHost + `/api/model/relationships/${relationshipID}`).pipe(\n      catchError(this.handleError<any>('getRelationship')));\n  }\n\n  /**\n   * Return the description of a given relationship ID\n   * @param relationshipID\n   */\n  getRelationshipDesc(relationshipID: string): Observable<string | {}> {\n    return this.http.get<string>(this.originalHost + `/api/model/relationships/${relationshipID}/desc`).pipe(\n      catchError(this.handleError<any>('getRelationshipDesc')));\n  }\n\n  /**\n   * Save a relationship after changing or creation\n   * @param relationship\n   */\n  saveRelationship(relationship: any): Observable<any> {\n    return this.http.post<any>(this.originalHost + `/api/model/relationships`, relationship, httpOptions).pipe(\n      catchError(this.handleError<any>('saveRelationship')));\n  }\n\n  /**\n   * Return a list of roles in the system according to the search term\n   * @param term\n   */\n  listRole(term: string): Observable<RoleH[]> {\n    return this.http.get<RoleH[]>( this.originalHost + `/api/model/roles?term=${term}`).pipe(\n      catchError(this.handleError<any>('listRole')));\n  }\n\n  /**\n   * Return a role definition from a given role ID\n   * @param roleID\n   */\n  getRole(roleID: string): Observable<any> {\n    return this.http.get<any>( this.originalHost + `/api/model/roles/${roleID}`).pipe(\n      catchError(this.handleError<any>('getRole')));\n  }\n\n  /**\n   * Return the description of a given role ID\n   * @param roleID\n   */\n  getRoleDesc(roleID: string): Observable<string | {}> {\n    return this.http.get<string>( this.originalHost + `/api/model/roles/${roleID}/desc`).pipe(\n      catchError(this.handleError<any>('getRoleDesc')));\n  }\n\n  /**\n   * Save a role after changing or creation\n   * @param role\n   */\n  saveRole(role: any): Observable<any> {\n    return this.http.post<any>(this.originalHost + `/api/model/roles`, role, httpOptions).pipe(\n      catchError(this.handleError<any>('saveRole')));\n  }\n\n  /**\n   * Return a list of data elements in the system according to the search term\n   * @param term\n   */\n  listDataElement(term: string): Observable<DataElementH[]> {\n    return this.http.get<DataElementH[]>( this.originalHost + `/api/model/data-elements?term=${term}`).pipe(\n      catchError(this.handleError<any>('listDataElement')));\n  }\n\n  /**\n   * Return a data element definition from a given element ID\n   * @param elementID\n   */\n  getDataElement(elementID: string): Observable<any> {\n    return this.http.get<any>( this.originalHost + `/api/model/data-elements/${elementID}`).pipe(\n      catchError(this.handleError<any>('getDataElement')));\n  }\n\n  /**\n   * Return the description of a given data element ID\n   * @param elementID\n   */\n  getDataElementDesc(elementID: string): Observable<string | {}> {\n    return this.http.get<string>( this.originalHost + `/api/model/data-elements/${elementID}/desc`).pipe(\n      catchError(this.handleError<any>('getDataElementDesc')));\n  }\n\n  /**\n   * Save a data element after changing or creation\n   * @param element\n   */\n  saveDataElement(element: any): Observable<any> {\n    return this.http.post<any>(this.originalHost + `/api/model/data-elements`, element, httpOptions).pipe(\n      catchError(this.handleError<any>('saveDataElement')));\n  }\n\n  /**\n   * Return a list of data domains in the system according to the search term\n   * @param term\n   */\n  listDataDomain(term: string): Observable<DataDomainH[]> {\n    return this.http.get<DataDomainH[]>( this.originalHost + `/api/model/data-domains?term=${term}`).pipe(\n      catchError(this.handleError<any>('listDataDomain')));\n  }\n\n  /**\n   * Return a data domain definition from a given domain ID\n   * @param domainID\n   */\n  getDataDomain(domainID: string): Observable<any> {\n    return this.http.get<any>( this.originalHost + `/api/model/data-domains/${domainID}`).pipe(\n      catchError(this.handleError<any>('getDataDomain')));\n  }\n\n  /**\n   * Return the description of a given data domain ID\n   * @param domainID\n   */\n  getDataDomainDesc(domainID: string): Observable<string | {}> {\n    return this.http.get<string>( this.originalHost + `/api/model/data-domains/${domainID}/desc`).pipe(\n      catchError(this.handleError<any>('getDataDomainDesc')));\n  }\n\n  /**\n   * Save a data domain after changing or creation\n   * @param domain\n   */\n  saveDataDomain(domain: any): Observable<any> {\n    return this.http.post<any>(this.originalHost + `/api/model/data-domains`, domain, httpOptions).pipe(\n      catchError(this.handleError<any>('saveDataDomain')));\n  }\n\n  /**\n   * Return a list of search helps in the system according to the search term\n   * @param term\n   */\n  listSearchHelp(term: string): Observable<SearchHelpH[]> {\n    return this.http.get<SearchHelpH[]>( this.originalHost + `/api/model/search-helps?term=${term}`).pipe(\n      catchError(this.handleError<any>('listSearchHelp')));\n  }\n\n  /**\n   * Return a search help definition from a given domain ID\n   * @param searchHelpID\n   */\n  getSearchHelp(searchHelpID: string): Observable<any> {\n    return this.http.get<any>( this.originalHost + `/api/model/search-helps/${searchHelpID}`).pipe(\n      catchError(this.handleError<any>('getSearchHelp')));\n  }\n\n  /**\n   * Return the description of a given search help ID\n   * @param searchHelpID\n   */\n  getSearchHelpDesc(searchHelpID: string): Observable<string | {}> {\n    return this.http.get<string>( this.originalHost + `/api/model/search-helps/${searchHelpID}/desc`).pipe(\n      catchError(this.handleError<any>('getSearchHelpDesc')));\n  }\n\n  /**\n   * Save a search help after changing or creation\n   * @param searchHelp\n   */\n  saveSearchHelp(searchHelp: any): Observable<any> {\n    return this.http.post<any>(this.originalHost + `/api/model/search-helps`, searchHelp, httpOptions).pipe(\n      catchError(this.handleError<any>('saveSearchHelp')));\n  }\n\n  /**\n   * Get data element meta\n   * @param elementID\n   */\n  getElementMeta(elementID: string): Observable<any> {\n    return this.http.get<string>( this.originalHost + `/api/model/element-meta/${elementID}`).pipe(\n      catchError(this.handleError<any>('getElementMeta')));\n  }\n\n  /**\n   * Return a fake relationship ID before saving\n   */\n  generateFakeRelationshipUUID(): string {\n    const nextPosition = this.fakeUUIDs.length + 1;\n    const fakeUUID = 'NewRelationship_' + nextPosition;\n    this.fakeUUIDs.push(fakeUUID);\n    return fakeUUID;\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      if (error.status === 401) {\n        this.messageService.addMessage('EXCEPTION', 'SESSION_EXPIRED', messageType.Exception);\n      } else {\n        this.messageService.addMessage('EXCEPTION', 'GENERIC', messageType.Exception, operation, error.message);\n      }\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","export class SearchHelp {\n  OBJECT_NAME: string; // Business object name, for example, employee\n  METHOD: SearchHelpMethod | object[]; // Either the search help method, or an array of plain object.\n  BEHAVIOUR: string; // A: Auto-Trigger Search, M: Manual-Trigger Search\n  MULTI?: boolean;  // Allow multiple value selection\n  FUZZY_SEARCH?: boolean; // Allow fuzzy search\n  READ_ONLY: boolean;\n  ENTITY_ID?: string;\n  RELATION_ID?: string;\n  FIELDS: SearchHelpField[];\n}\n\nexport class SearchHelpField {\n  RELATION_ID?: string;\n  FIELD_NAME: string;\n  LABEL_TEXT?: string;\n  LIST_HEADER_TEXT?: string;\n  IMPORT: boolean;\n  EXPORT: boolean;\n  IE_FIELD_NAME?: string; // Import or Export field name.\n  LIST_POSITION: number;\n  FILTER_POSITION: number;\n  FILTER_DISP_ONLY?: boolean;\n  DEFAULT_VALUE?: any;\n}\n\nimport {Observable} from 'rxjs';\nexport type SearchHelpMethod = (searchTerm: any) => Observable<object[]>;\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup} from '@angular/forms';\nimport {QueryObject, RelationMeta, SearchHelpMeta} from '../entity';\nimport {EntityService} from '../entity.service';\nimport {Observable} from 'rxjs';\nimport {SearchHelp, SearchHelpMethod} from './search-help';\n\n@Component({\n  selector: 'dk-app-search-help',\n  templateUrl: './search-help.component.html',\n  styleUrls: ['./search-help.component.css']\n})\nexport class SearchHelpComponent implements OnInit {\n  isSearchHelpModalShown = false;\n  isFilterShown = false;\n  isSelectAllChecked = false;\n  searchHelp: SearchHelp;\n  fuzzySearchTerm: string;\n  selectedIndex = -1;\n  filterFields = [];\n  listFields = [];\n  filterFieldsFormGroup: FormGroup;\n  exportControl: any;\n  afterExportFn: any;\n  listData = [];\n  preSearchHelpParas = {};\n\n  get displaySearchHelpModal() {return this.isSearchHelpModalShown ? 'block' : 'none'; }\n\n  constructor(private fb: FormBuilder,\n              private entityService: EntityService) { }\n\n  ngOnInit() {\n    this.filterFieldsFormGroup = this.fb.group({});\n  }\n\n  /**\n   * Open an search help dialog with free style\n   * @param searchHelp\n   * @param exportControl: An Angular form control which is used to receive the Search Help returned value.\n   * @param afterExportFn: Optional. If provided, the function will be executed after the value is returned.\n   */\n  openSearchHelpModal(searchHelp: SearchHelp, exportControl: any, afterExportFn?: any) {\n    if (this.searchHelp !== searchHelp) {\n      this.listData = [];\n      this.searchHelp = searchHelp;\n      this.filterFieldsFormGroup = this.fb.group({});\n      this.filterFields = this.searchHelp.FIELDS.filter( fieldMeta => fieldMeta.FILTER_POSITION );\n      this.filterFields.sort((a, b) => a.FILTER_POSITION - b.FILTER_POSITION);\n      this.filterFields.forEach( fieldMeta => {\n        if (fieldMeta.IMPORT) {\n          const ieFieldName = fieldMeta.IE_FIELD_NAME || fieldMeta.FIELD_NAME;\n          if (exportControl.get(ieFieldName)) {\n            fieldMeta.DEFAULT_VALUE = exportControl.get(ieFieldName).value;\n          }\n        }\n        this.filterFieldsFormGroup.addControl(fieldMeta.FIELD_NAME, this.fb.control(fieldMeta.DEFAULT_VALUE));\n      });\n      this.listFields = this.searchHelp.FIELDS.filter( fieldMeta => fieldMeta.LIST_POSITION );\n      this.listFields.sort((a, b) => a.LIST_POSITION - b.LIST_POSITION);\n    }\n\n    // Import the value to fuzzy search field\n    if (this.searchHelp.FUZZY_SEARCH) {\n      this.fuzzySearchTerm = '';\n      this.searchHelp.FIELDS.forEach( fieldMeta => {\n        const ieFieldName = fieldMeta.IE_FIELD_NAME || fieldMeta.FIELD_NAME;\n        const ctrl = exportControl.get(ieFieldName);\n        if (!this.fuzzySearchTerm && ctrl && ctrl.value) {\n          this.fuzzySearchTerm = ctrl.value;\n          return;\n        }\n      });\n    }\n\n    this.exportControl = exportControl;\n    this.afterExportFn = afterExportFn;\n    if (this.searchHelp.BEHAVIOUR === 'A') {\n      this.search();\n      this.isFilterShown = false;\n    } else {\n      this.isFilterShown = true;\n    }\n    this.isSearchHelpModalShown = true;\n  }\n\n  /**\n   * Open a search help dialog based on the given entity and one of its relation\n   * @param entityID\n   * @param relationID\n   * @param exportControl: An Angular form control which is used to receive the Search Help returned value.\n   * @param readonly: If readonly, then the Search Help cannot return value.\n   * @param exportField: Provided only if exportField is given. It uses the data domain to find which attribute should return the value(s).\n   For example, attribute \"USER\" is assigned with Data Domain \"USER_ID\". When the Search Help dialog pops up on the field 'CREATE_BY',\n   it finds the attribute \"USER\" using the Data Domain \"USER_ID\",\n   and the value of its attribute \"USER\" is then exported to the field \"CREATE_BY\".\n   * @param afterExportFn: Optional. If provided, the function will be executed after the value is returned.\n   */\n  openSearchHelpModalByEntity(entityID: string, relationID: string, exportControl: any,\n                              readonly: boolean, exportField?: string, domainID?: string, afterExportFn?: any) {\n    const currentSearchHelpParas = {\n      'entityID': entityID,\n      'relationID': relationID,\n      'exportField': exportField,\n      'domainID': domainID\n    };\n    if (this._isPreviousSearchHelp(currentSearchHelpParas)) {\n      this.searchHelp.READ_ONLY = readonly;\n      this.openSearchHelpModal(this.searchHelp, exportControl, afterExportFn);\n    } else {\n      this.listData = [];\n      this.preSearchHelpParas = currentSearchHelpParas;\n      const searchHelp = new SearchHelp();\n      searchHelp.OBJECT_NAME = entityID;\n      searchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: QueryObject): Observable<object[]> => entityService.searchEntities(searchTerm);\n      }(this.entityService);\n      searchHelp.BEHAVIOUR = 'M';\n      searchHelp.MULTI = false;\n      searchHelp.FUZZY_SEARCH = false;\n      searchHelp.FIELDS = [];\n      searchHelp.READ_ONLY = readonly;\n      searchHelp.ENTITY_ID = entityID;\n      searchHelp.RELATION_ID = relationID;\n      this.entityService.getRelationMeta(relationID)\n        .subscribe(data => {\n          const relationMeta = <RelationMeta>data;\n          relationMeta.ATTRIBUTES.forEach( attribute =>\n            searchHelp.FIELDS.push({\n              FIELD_NAME: attribute.ATTR_NAME,\n              LABEL_TEXT: attribute.LABEL_TEXT,\n              LIST_HEADER_TEXT: attribute.LIST_HEADER_TEXT,\n              IE_FIELD_NAME: exportField && domainID && domainID === attribute.DOMAIN_ID ? exportField : null,\n              IMPORT: attribute.PRIMARY_KEY || attribute.DOMAIN_ID === domainID,\n              EXPORT: attribute.PRIMARY_KEY || attribute.DOMAIN_ID === domainID,\n              LIST_POSITION: attribute.ORDER,\n              FILTER_POSITION: attribute.ORDER\n            }));\n          searchHelp.FIELDS.push({\n            FIELD_NAME: 'INSTANCE_GUID',\n            LIST_HEADER_TEXT: 'GUID',\n            IMPORT: false,\n            EXPORT: true,\n            LIST_POSITION: 999,\n            FILTER_POSITION: 0});\n          this.openSearchHelpModal(searchHelp, exportControl, afterExportFn);\n        });\n    }\n  }\n\n  /**\n   * Open a search help dialog based on the given search help\n   * @param searchHelpID\n   * @param searchHelpExportField: a field name in the Search Help which is tagged as exported.\n   An Search Help can have multiple exported fields, and the field names may be different with the Angular control names.\n   Thus, you can choose one Search Help export field name to map with one Angular field control name.\n   * @param exportField: An Angular field control name that is to map with the Search Help export field name.\n   * @param exportControl: An Angular form control which is used to receive the Search Help returned value.\n   * @param readonly: If readonly, then the Search Help cannot return value.\n   * @param afterExportFn: Optional. If provided, the function will be executed after the value is returned.\n   */\n  openSearchHelpModalBySearchHelp(searchHelpID: string, searchHelpExportField: string, exportField: string,\n                             exportControl: any, readonly: boolean, afterExportFn?: any) {\n    const currentSearchHelpParas = {\n      'searchHelpID': searchHelpID,\n      'searchHelpExportField': searchHelpExportField,\n      'exportField': exportField\n    };\n    if (this._isPreviousSearchHelp(currentSearchHelpParas)) {\n      this.searchHelp.READ_ONLY = readonly;\n      this.openSearchHelpModal(this.searchHelp, exportControl, afterExportFn);\n    } else {\n      this.listData = [];\n      this.preSearchHelpParas = currentSearchHelpParas;\n      const searchHelp = new SearchHelp();\n      this.entityService.getSearchHelp(searchHelpID)\n        .subscribe((searchHelpMeta: SearchHelpMeta) => {\n          searchHelp.OBJECT_NAME = searchHelpMeta.SEARCH_HELP_DESC + '(' + searchHelpMeta.SEARCH_HELP_ID + ')';\n          searchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n            return (searchTerm: QueryObject): Observable<object[]> => entityService.searchEntities(searchTerm);\n          }(this.entityService);\n          searchHelp.BEHAVIOUR = searchHelpMeta.BEHAVIOUR;\n          searchHelp.MULTI = searchHelpMeta.MULTI;\n          searchHelp.FUZZY_SEARCH = searchHelpMeta.FUZZY_SEARCH;\n          searchHelp.READ_ONLY = readonly;\n          searchHelp.ENTITY_ID = searchHelpMeta.ENTITY_ID;\n          searchHelp.RELATION_ID = searchHelpMeta.RELATION_ID;\n          searchHelp.FIELDS = searchHelpMeta.FIELDS;\n          const searchHelpField = searchHelp.FIELDS.find(\n            field => (field.IE_FIELD_NAME || field.FIELD_NAME) === searchHelpExportField);\n          searchHelpField.IE_FIELD_NAME = exportField;\n          searchHelpField.EXPORT = true;\n          searchHelpField.IMPORT = true;\n          searchHelp.FIELDS.push({\n            FIELD_NAME: 'INSTANCE_GUID',\n            LIST_HEADER_TEXT: 'GUID',\n            IMPORT: false,\n            EXPORT: true,\n            LIST_POSITION: 999,\n            FILTER_POSITION: 0});\n          this.openSearchHelpModal(searchHelp, exportControl, afterExportFn);\n        });\n    }\n  }\n\n  _isPreviousSearchHelp(currentSearchHelpParas: object): boolean {\n    return JSON.stringify(this.preSearchHelpParas) === JSON.stringify(currentSearchHelpParas);\n  }\n\n  search() {\n    let searchTerm;\n    if (this.searchHelp.FUZZY_SEARCH) {\n      searchTerm = this.fuzzySearchTerm || '';\n    } else {\n      searchTerm = new QueryObject();\n      searchTerm.ENTITY_ID = this.searchHelp.ENTITY_ID;\n      searchTerm.RELATION_ID = this.searchHelp.RELATION_ID;\n      searchTerm.FILTER = [];\n      this.filterFields.forEach( fieldMeta => {\n        const fieldValue = this.filterFieldsFormGroup.get(fieldMeta.FIELD_NAME).value;\n        if (fieldValue) {\n          if (fieldValue.includes('*') || fieldValue.includes('%')) {\n            searchTerm.FILTER.push({RELATION_ID: fieldMeta.RELATION_ID,\n              FIELD_NAME: fieldMeta.FIELD_NAME, OPERATOR: 'CN', LOW: fieldValue});\n          } else {\n            searchTerm.FILTER.push({RELATION_ID: fieldMeta.RELATION_ID,\n              FIELD_NAME: fieldMeta.FIELD_NAME, OPERATOR: 'EQ', LOW: fieldValue});\n          }\n        }\n      });\n      searchTerm.PROJECTION = [];\n      this.listFields.forEach( fieldMeta => {\n        searchTerm.PROJECTION.push({RELATION_ID: fieldMeta.RELATION_ID, FIELD_NAME: fieldMeta.FIELD_NAME});\n      });\n    }\n\n    this.listData = [];\n    this.isSelectAllChecked = false;\n    if (typeof this.searchHelp.METHOD === 'function') {\n      const searchHelpMethod = <SearchHelpMethod>this.searchHelp.METHOD;\n      searchHelpMethod(searchTerm).subscribe( data => this._generateSearchList(data));\n    } else if (Array.isArray(this.searchHelp.METHOD )) {\n      this._generateSearchList(this.searchHelp.METHOD);\n    }\n  }\n\n  _generateSearchList(data: object[]): void {\n    data.forEach( item => {\n      const listItem = {SELECTED: ''};\n      this.listFields.forEach( field => listItem[field.FIELD_NAME] = item[field.FIELD_NAME]);\n      this.listData.push(listItem);\n    });\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  showFilter() {\n    this.isFilterShown = true;\n  }\n\n  hideFilter() {\n    this.isFilterShown = false;\n  }\n\n  selectAll() {\n    this.isSelectAllChecked = !this.isSelectAllChecked;\n    this.listData.forEach( data => data.SELECTED = !data.SELECTED );\n  }\n\n  confirmSelection() {\n    // TODO: Currently, only single selection is supported. Multiple selection in later time\n    if (this.searchHelp.READ_ONLY) {return; }\n    this.listFields.forEach( listField => {\n      if (this.exportControl instanceof FormGroup) {\n        const exportControl = <AbstractControl>this.exportControl;\n        const ieFieldName = listField.IE_FIELD_NAME || listField.FIELD_NAME;\n        const exportFieldControl = exportControl.get(ieFieldName);\n        if (listField.EXPORT && exportFieldControl) {\n          exportFieldControl.setValue(this.listData[this.selectedIndex][listField.FIELD_NAME]);\n          exportFieldControl.markAsDirty();\n        }\n      } else {\n        if (listField.EXPORT) {\n          this.exportControl[listField.FIELD_NAME] = this.listData[this.selectedIndex][listField.FIELD_NAME];\n        }\n      }\n    });\n\n    if (this.afterExportFn) { this.afterExportFn(); }\n    this.listData = [];\n    this.isSearchHelpModalShown = false;\n  }\n\n  closeSearchHelpModal() {\n    this.isSearchHelpModalShown = false;\n  }\n}\n","export class AttributeBase {\n  controlType: string;\n  key: string;\n  name: string;\n  label: string;\n  list_label: string;\n  relationId: string;\n  maxLength?: number;\n  step?: string;\n  domainId?: string;\n  placeholder?: string;\n  pattern?: string;\n  domainEntityId?: string;\n  domainRelationId?: string;\n  searchHelpId?: string;\n  searchHelpExportField?: string;\n  primaryKey: boolean;\n  autoIncrement: boolean;\n  dropdownList: DropdownList[] = [];\n  rows: number;\n}\n\nclass DropdownList {\n  key: string | number;\n  value?: string;\n}\n","import {Injectable} from '@angular/core';\nimport {AbstractControl, AsyncValidator, ValidationErrors} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {EntityService} from '../entity.service';\nimport {QueryObject} from '../entity';\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class DomainValueValidator implements AsyncValidator {\n  constructor(private entityService: EntityService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    const queryObject = new QueryObject();\n    // queryObject.ENTITY_ID = entityID;\n    // queryObject.RELATION_ID = relationID;\n    // queryObject.FILTER = [{FIELD_NAME: searchField, OPERATOR: 'EQ', LOW: ctrl.value}];\n    return this.entityService.searchEntities(queryObject).pipe(\n      map(data => {\n        if (data['msgName']) {\n          return { message: data['msgName']['msgShortText'] };\n        } else {\n          if (data.length === 0) {\n            return { message: 'Value is invalid' };\n          } else {\n            return null;\n          }\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {AttributeBase} from './attribute-base';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {DomainValueValidator} from './attribute-validators';\nimport {EntityService} from '../entity.service';\nimport {Attribute} from '../entity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttributeControlService {\n\n  constructor(private entityService: EntityService,\n              private domainValueValidator: DomainValueValidator) {\n  }\n\n  toAttributeControl(attributes: Attribute[]): AttributeBase[] {\n    const attributeControls: AttributeBase[] = [];\n    if (!attributes) { return attributeControls; }\n    attributes.forEach(attribute => attributeControls.push( this.toSingleAttributeControl(attribute)));\n    return attributeControls;\n  }\n\n  toSingleAttributeControl(attribute: Attribute): AttributeBase {\n    const attributeControl = new AttributeBase();\n    attributeControl.key = attribute.ATTR_GUID;\n    attributeControl.name = attribute.ATTR_NAME;\n    attributeControl.label = attribute.LABEL_TEXT;\n    attributeControl.list_label = attribute.LIST_HEADER_TEXT;\n    attributeControl.relationId = attribute.RELATION_ID;\n    attributeControl.searchHelpId = attribute.SEARCH_HELP_ID;\n    attributeControl.searchHelpExportField = attribute.SEARCH_HELP_EXPORT_FIELD;\n    attributeControl.domainId = attribute.DOMAIN_ID;\n    attributeControl.domainEntityId = attribute.DOMAIN_ENTITY_ID;\n    attributeControl.domainRelationId = attribute.DOMAIN_RELATION_ID;\n    switch (attribute.DATA_TYPE) {\n      case 1: // Char\n        if (attribute.CAPITAL_ONLY) {\n          attributeControl.controlType = 'text_capital';\n          // onkeyup=\"this.value = this.value.toUpperCase();\"\n        } else {\n          if (attribute.DOMAIN_TYPE === 3) {\n            attributeControl.controlType = 'dropdown';\n            this._generateDropdownList(attribute.DOMAIN_ID, attributeControl);\n          } else {\n            attributeControl.controlType = 'text';\n            attributeControl.pattern = attribute.REG_EXPR;\n          }\n        }\n        attributeControl.maxLength = attribute.DATA_LENGTH;\n        attributeControl.primaryKey = attribute.PRIMARY_KEY;\n        break;\n      case 2: // Integer\n        if (attribute.DOMAIN_TYPE === 3) {\n          attributeControl.controlType = 'dropdown';\n          this._generateDropdownList(attribute.DOMAIN_ID, attributeControl);\n        } else {\n          attributeControl.controlType = 'integer';\n          if (attribute.UNSIGNED) {\n            attributeControl.pattern = '^\\\\d+([^.,])?$';\n          }\n          attributeControl.autoIncrement = attribute.AUTO_INCREMENT;\n        }\n        attributeControl.primaryKey = attribute.PRIMARY_KEY;\n        break;\n      case 3: // Boolean\n        attributeControl.controlType = 'checkbox';\n        break;\n      case 4: // Decimal\n        attributeControl.controlType = 'decimal';\n        this._setDecimalPattern(attributeControl, attribute);\n        break;\n      case 5: // String\n        attributeControl.controlType = 'textarea';\n        break;\n      case 6: // Binary\n        attributeControl.controlType = 'file';\n        break;\n      case 7: // Date\n        attributeControl.controlType = 'date';\n        break;\n      case 8: // Timestamp\n        attributeControl.controlType = 'timestamp';\n        break;\n      default:\n        attributeControl.controlType = 'text';\n    }\n    return attributeControl;\n  }\n\n  _generateDropdownList(domainID: string, attributeControl: AttributeBase) {\n    this.entityService.getDataDomain(domainID)\n      .subscribe( dataDomain =>\n        dataDomain['DOMAIN_VALUES'].forEach( domainValue => {\n          attributeControl.dropdownList.push({\n            key: domainValue['LOW_VALUE'],\n            value: domainValue['LOW_VALUE_TEXT'] || domainValue['LOW_VALUE'] });\n        })\n      );\n  }\n\n  _setDecimalPattern(attributeControl: AttributeBase, attribute: Attribute) {\n    const zeroPadding = '0000000000000000000000000000000000000';\n    attributeControl.step = '0.' + zeroPadding.substr(0, attribute.DECIMAL - 1 ) + '1';\n    attributeControl.placeholder = '0.' + zeroPadding.substr(0, attribute.DECIMAL - 1 ) + '0';\n    const integerPlace = attribute.DATA_LENGTH - attribute.DECIMAL;\n    attributeControl.pattern = attribute.UNSIGNED ? '^(' : '^(\\\\-?';\n    attributeControl.pattern += integerPlace ? '\\\\d{1,' + integerPlace.toString() + '})' : '0)';\n    attributeControl.pattern += '(\\\\.\\\\d{1,' + attribute.DECIMAL + '})?$';\n    attributeControl.maxLength = attribute.DATA_LENGTH;\n  }\n\n  convertToFormControl(attribute: Attribute, instance: any ) {\n    const formControl = new FormControl(instance[attribute.ATTR_NAME] || '');\n    if (attribute.PRIMARY_KEY && !attribute.AUTO_INCREMENT) {\n      formControl.setValidators(Validators.required);\n    }\n    // if (attribute.DOMAIN_TYPE === 2 && !attribute.PRIMARY_KEY) {\n    //   formControl.setAsyncValidators(this.domainValueValidator.validate.bind(this.domainValueValidator));\n    // }\n    return formControl;\n  }\n\n  convertToFormGroup(attributes: Attribute[], instance: any, isDirty?: boolean) {\n    const group = {};\n    attributes.forEach(attribute => {\n      group[attribute.ATTR_NAME] = this.convertToFormControl(attribute, instance);\n      if (instance[attribute.ATTR_NAME] && isDirty) { group[attribute.ATTR_NAME].markAsDirty(); }\n    });\n    return new FormGroup(group);\n  }\n}\n","/**\n * Convert the date object to a string in format \"yyyy-MM-ddThh:mm:ss\".\n */\nimport {Directive, EventEmitter, HostBinding, HostListener, Input, Output} from '@angular/core';\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'input[type=datetime-local]',\n})\nexport class DatetimeDirective {\n  @Input() set localDatetime(d: Date) { this.localString = this.toLocalDateString(d); }\n  @Output() dateChange: EventEmitter<Date>;\n  @HostBinding('value') localString = '';\n\n  constructor() {\n    this.dateChange = new EventEmitter();\n  }\n\n  private toLocalDateString(timeUTC: Date): string {\n    if (!timeUTC) { return ''; }\n    if (isNaN(timeUTC.getTime())) {\n      return '';\n    } else {\n      return timeUTC.getFullYear().toString() + '-' + ('0' + (timeUTC.getMonth() + 1)).slice(-2) + '-'\n        + ('0' + (timeUTC.getDate())).slice(-2) + 'T' + timeUTC.toTimeString().slice(0, 8);\n    }\n  }\n\n  @HostListener('change', ['$event.target.value'])\n  onDateChange(value: string): void {\n    if (value !== this.localString) {\n      this.localString = value;\n      this.dateChange.emit(new Date(value));\n    }\n  }\n}\n","import {Component, Input, OnChanges, OnInit, Output, ViewChild} from '@angular/core';\nimport {AttributeBase} from './attribute-base';\nimport {FormGroup} from '@angular/forms';\nimport {SearchHelpComponent} from '../search-help/search-help.component';\nimport { v4 as uuid } from 'uuid';\nimport { EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'dk-app-attribute',\n  templateUrl: './attribute.component.html',\n  styleUrls: ['./attribute.component.css']\n})\nexport class AttributeComponent implements OnInit, OnChanges {\n  @Input() attributeControl: AttributeBase;\n  @Input() formGroup: FormGroup;\n  @Input() readonly: boolean;\n  @Input() isSmallSize: boolean;\n  @Input() noErrorMsg: boolean;\n  @Output() change = new EventEmitter<any>();\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n  localDatetime: Date;\n\n  constructor() { }\n\n  ngOnInit() {\n    const fieldCtrl = this.formGroup.get(this.attributeControl.name);\n    if (!fieldCtrl) { return; }\n    switch (this.attributeControl.controlType) {\n      case 'timestamp':\n        if (!this.readonly && !fieldCtrl.value) {\n          this.localDatetime = new Date();\n          fieldCtrl.setValue(this.localDatetime.toISOString().slice(0, 19).replace('T', ' '));\n          fieldCtrl.markAsDirty();\n        } else if (fieldCtrl.value) {\n          // to support Safari and Firefox, the dateStr format 'yyyy-MM-dd HH:mm:ss' needs to be converted to 'yyyy/MM/dd HH:mm:ss'\n          this.localDatetime = new Date(fieldCtrl.value.replace(/-/g, '/') + ' UTC');\n        }\n        fieldCtrl.valueChanges.subscribe( value => {\n          if (!value) { return; }\n          this.localDatetime = new Date(value.replace(/-/g, '/') + ' UTC');\n        });\n        break;\n      case 'date':\n        if (!this.readonly && !fieldCtrl.value) {\n          this.localDatetime = new Date();\n          fieldCtrl.setValue(this.localDatetime.toISOString().slice(0, 10));\n          fieldCtrl.markAsDirty();\n        }\n        break;\n      default:\n    }\n    if (this.attributeControl.domainId === 'UUID' && !this.readonly && !fieldCtrl.value) {\n      fieldCtrl.setValue(uuid());\n      fieldCtrl.markAsDirty();\n    }\n    if (this.attributeControl.domainId === 'GUID' && !this.readonly && !fieldCtrl.value) {\n      let guid = uuid();\n      guid = guid.replace(/-/g, '').toUpperCase();\n      fieldCtrl.setValue(guid);\n      fieldCtrl.markAsDirty();\n    }\n  }\n\n  ngOnChanges(): void {\n    if (this.attributeControl.controlType === 'dropdown' ||\n      this.attributeControl.controlType === 'checkbox') {\n      this.readonly ? this.formGroup.get(this.attributeControl.name).disable() :\n        this.formGroup.get(this.attributeControl.name).enable();\n    }\n  }\n\n  onDateChange(newDate: Date): void {\n    const UTCDateStr = newDate.toISOString().slice(0, 19).replace('T', ' ');\n    const fieldCtrl = this.formGroup.get(this.attributeControl.name);\n    if (fieldCtrl) {\n      fieldCtrl.setValue(UTCDateStr);\n      fieldCtrl.markAsDirty();\n    }\n  }\n\n  get invalid() {\n    return this.formGroup.controls[this.attributeControl.name]?.invalid;\n  }\n  get errorMessage() {\n    const fieldCtrl = this.formGroup.get(this.attributeControl.name);\n    if (!fieldCtrl) { return null; }\n    if (fieldCtrl.getError('pattern')) {\n      return 'The pattern is not correct';\n    } else if (fieldCtrl.getError('required')) {\n      return 'Required';\n    } else if (fieldCtrl.getError('message')) {\n      return fieldCtrl.getError('message');\n    } else {\n      return null;\n    }\n  }\n  get isReadonly() { return this.readonly || this.attributeControl.autoIncrement; }\n\n  onKeyup(attributeName: string) {\n    const fieldCtrl = this.formGroup.get(attributeName);\n    fieldCtrl.setValue(fieldCtrl.value.toUpperCase());\n  }\n\n  onSearchHelp(attributeControl: AttributeBase) {\n    if (attributeControl.searchHelpId) {\n      this.searchHelpComponent.openSearchHelpModalBySearchHelp(\n        attributeControl.searchHelpId, attributeControl.searchHelpExportField, attributeControl.name,\n        this.formGroup, this.readonly );\n    } else {\n      this.searchHelpComponent.openSearchHelpModalByEntity(\n        attributeControl.domainEntityId, attributeControl.domainRelationId, this.formGroup, this.readonly,\n        attributeControl.name, attributeControl.domainId);\n    }\n  }\n\n  onChange(event) {\n    this.change.emit(event);\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AttributeBase} from '../attribute-base';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'dk-app-attribute-form',\n  templateUrl: './attribute-form.component.html',\n  styleUrls: ['./attribute-form.component.css']\n})\nexport class AttributeFormComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() attributeControl: AttributeBase;\n  @Input() formGroup: FormGroup;\n  @Input() readonly: boolean;\n  @Input() isSmallSize: boolean;\n  ngOnInit() {\n\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AttributeBase} from '../attribute-base';\nimport {FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'dk-app-attribute-form2',\n  templateUrl: './attribute-form2.component.html',\n  styleUrls: ['./attribute-form2.component.css']\n})\nexport class AttributeForm2Component implements OnInit {\n\n  constructor() { }\n\n  @Input() attributeControl: AttributeBase;\n  @Input() formGroup: FormGroup;\n  @Input() readonly: boolean;\n  @Input() isSmallSize: boolean;\n  ngOnInit() {\n\n  }\n\n  get invalid() { return this.formGroup.controls[this.attributeControl.name]?.invalid; }\n\n  get errorMessage() {\n    const fieldCtrl = this.formGroup.get(this.attributeControl.name);\n    if (!fieldCtrl) { return null; }\n    if (fieldCtrl.getError('pattern')) {\n      return 'The pattern is not correct';\n    } else if (fieldCtrl.getError('required')) {\n      return 'Required';\n    } else if (fieldCtrl.getError('message')) {\n      return fieldCtrl.getError('message');\n    } else {\n      return null;\n    }\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AbstractControl, FormArray, FormGroup} from '@angular/forms';\nimport {AttributeBase} from '../attribute-base';\nimport {EntityRelation} from '../../entity';\n\n@Component({\n  selector: 'dk-app-attribute-table',\n  templateUrl: './attribute-table.component.html',\n  styleUrls: ['./attribute-table.component.css']\n})\nexport class AttributeTableComponent implements OnInit {\n  isDetailModalShown = false;\n  currentFormGroup: AbstractControl;\n  isErrorModalShown = false;\n  errorTitle: string;\n  errorDescription: string;\n\n  constructor() {}\n\n  @Input() attributeControls: AttributeBase[];\n  @Input() formArray: FormArray;\n  @Input() parentFormGroup: FormGroup;\n  @Input() entityRelation: EntityRelation;\n  @Input() isSmallSize: boolean;\n  @Input() readonly: boolean;\n  ngOnInit() {\n  }\n\n  get displayDetailModal() {return this.isDetailModalShown ? 'block' : 'none'; }\n  get displayErrorModal() {return this.isErrorModalShown ? 'block' : 'none'; }\n\n  openDetailModal(index: number): void {\n    this.currentFormGroup = this.formArray.at(index);\n    this.isDetailModalShown = true;\n  }\n\n  closeDetailModal(): void {\n    if (!this.readonly && this.currentFormGroup.dirty) {\n      this.currentFormGroup.setValue(this.currentFormGroup.value); // Or the value won't be updated.\n    }\n    this.isDetailModalShown = false;\n  }\n\n  openErrorModal(errorTitle: string, errorDescription: string): void {\n    this.errorTitle = errorTitle;\n    this.errorDescription = errorDescription;\n    this.isErrorModalShown = true;\n  }\n\n  closeErrorModal(): void {\n    this.isErrorModalShown = false;\n  }\n\n  deleteRelationInstance(index: number = 0): void {\n    switch (this.entityRelation.CARDINALITY ) {\n      case '[0..n]':\n        this.formArray.removeAt(index);\n        this.formArray.markAsDirty();\n        if (this.formArray.length === 0) {\n          this.entityRelation.EMPTY = true;\n        }\n        break;\n      case '[1..n]':\n        if (this.formArray.length === 1) {\n          this.openErrorModal('Deletion Fail', 'The relation requires at lease one entry!');\n        } else {\n          this.formArray.removeAt(index);\n          this.formArray.markAsDirty();\n        }\n    }\n  }\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'dk-jor-angular',\n  templateUrl: './jor-angular.component.html',\n  styleUrls: ['./jor-angular.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class JorAngularComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { JorAngularComponent } from './jor-angular.component';\nimport {SearchHelpComponent} from './search-help/search-help.component';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AttributeComponent} from './attribute/attribute.component';\nimport {AttributeFormComponent} from './attribute/attribute-form/attribute-form.component';\nimport {AttributeTableComponent} from './attribute/attribute-table/attribute-table.component';\nimport { AttributeForm2Component } from './attribute/attribute-form2/attribute-form2.component';\nimport {DatetimeDirective} from './datetime.directive';\n\n@NgModule({\n  declarations: [\n    JorAngularComponent,\n    SearchHelpComponent,\n    AttributeComponent,\n    AttributeFormComponent,\n    AttributeTableComponent,\n    AttributeForm2Component,\n    DatetimeDirective\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    SearchHelpComponent,\n    AttributeComponent,\n    AttributeFormComponent,\n    AttributeForm2Component,\n    AttributeTableComponent\n  ]\n})\nexport class JorAngularModule { }\n","/*\n * Public API Surface of jor-angular\n */\n\nexport * from './lib/entity';\nexport * from './lib/ui-mapper.service';\nexport * from './lib/entity.service';\nexport * from './lib/search-help/search-help.component';\nexport * from './lib/search-help/search-help';\nexport * from './lib/attribute/attribute-base';\nexport * from './lib/attribute/attribute-control.service';\nexport * from './lib/attribute/attribute.component';\nexport * from './lib/attribute/attribute-form/attribute-form.component';\nexport * from './lib/attribute/attribute-form2/attribute-form2.component';\nexport * from './lib/attribute/attribute-table/attribute-table.component';\nexport * from './lib/jor-angular.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Entity","Relationship","RelationshipInstance","PartnerInstance","PartnerRole","EntityMeta","Attribute","Role","RoleRelation","RelationshipMeta","Involve","RelationMeta","Association","FieldsMappingPair","EntityRelation","Selection","Projection","QueryObject","Sort","EntityType","Relation","RelationshipH","RoleH","RoleMeta","DataElementH","DataElementMeta","DataDomainH","DataDomainMeta","DataDomainValue","SearchHelpH","SearchHelpMeta","SearchHelpFieldMeta","UiMapperService","constructor","composeChangedRelation","formGroup","keys","isNew","dirty","Object","length","changedRelation","action","forEach","key","value","controls","control","get","composeChangedRelationArray","formArray","originalArray","changedRelationArray","push","index","findIndex","element","found","originalRelation","deletedRelation","composeChangedRelationship","relationshipID","partnerRoles","nonRelationshipAttributes","relationship","RELATIONSHIP_ID","values","changedRelationshipValue","partnerRole","ENTITY_ID","ROLE_ID","INSTANCE_GUID","includes","substr","original","RELATIONSHIP_INSTANCE_GUID","Injectable","args","providedIn","httpOptions","headers","HttpHeaders","EntityService","messageService","http","originalHost","fakeUUIDs","setMessageStore","msgCat","msgName","msgText","EN","shortText","longText","setOriginalHost","host","msgStore","language","listEntityID","pipe","catchError","handleError","listEntityIDbyRole","roleID","getEntityMeta","entityID","searchEntities","queryObject","post","getEntityInstance","instanceGUID","getRelationMeta","relationID","getRelationMetaOfEntity","createEntityInstance","instance","changeEntityInstance","put","deleteEntityInstance","delete","listEntityType","term","getEntityTypeDesc","saveEntityType","entityType","listRelation","getRelationDesc","saveRelation","relation","listRelationship","getRelationship","getRelationshipDesc","saveRelationship","listRole","getRole","getRoleDesc","saveRole","role","listDataElement","getDataElement","elementID","getDataElementDesc","saveDataElement","listDataDomain","getDataDomain","domainID","getDataDomainDesc","saveDataDomain","domain","listSearchHelp","getSearchHelp","searchHelpID","getSearchHelpDesc","saveSearchHelp","searchHelp","getElementMeta","generateFakeRelationshipUUID","nextPosition","fakeUUID","operation","result","error","console","status","addMessage","messageType","Exception","message","of","i1","SearchHelp","SearchHelpField","SearchHelpComponent","entityService","fb","isSearchHelpModalShown","isFilterShown","isSelectAllChecked","selectedIndex","filterFields","listFields","listData","preSearchHelpParas","displaySearchHelpModal","ngOnInit","filterFieldsFormGroup","group","openSearchHelpModal","exportControl","afterExportFn","FIELDS","filter","fieldMeta","FILTER_POSITION","sort","a","b","IMPORT","ieFieldName","IE_FIELD_NAME","FIELD_NAME","DEFAULT_VALUE","addControl","LIST_POSITION","FUZZY_SEARCH","fuzzySearchTerm","ctrl","BEHAVIOUR","search","openSearchHelpModalByEntity","readonly","exportField","currentSearchHelpParas","_isPreviousSearchHelp","READ_ONLY","OBJECT_NAME","METHOD","searchTerm","MULTI","RELATION_ID","subscribe","data","relationMeta","ATTRIBUTES","attribute","ATTR_NAME","LABEL_TEXT","LIST_HEADER_TEXT","DOMAIN_ID","PRIMARY_KEY","EXPORT","ORDER","openSearchHelpModalBySearchHelp","searchHelpExportField","searchHelpMeta","SEARCH_HELP_DESC","SEARCH_HELP_ID","searchHelpField","find","field","JSON","stringify","FILTER","fieldValue","OPERATOR","LOW","PROJECTION","searchHelpMethod","_generateSearchList","Array","isArray","item","listItem","SELECTED","enterSearch","$event","keyCode","showFilter","hideFilter","selectAll","confirmSelection","listField","FormGroup","exportFieldControl","setValue","markAsDirty","closeSearchHelpModal","i3","Component","template","styles","AttributeBase","dropdownList","DropdownList","DomainValueValidator","validate","map","i1.EntityService","AttributeControlService","domainValueValidator","toAttributeControl","attributes","attributeControls","toSingleAttributeControl","attributeControl","ATTR_GUID","name","label","list_label","relationId","searchHelpId","SEARCH_HELP_EXPORT_FIELD","domainId","domainEntityId","DOMAIN_ENTITY_ID","domainRelationId","DOMAIN_RELATION_ID","DATA_TYPE","CAPITAL_ONLY","controlType","DOMAIN_TYPE","_generateDropdownList","pattern","REG_EXPR","maxLength","DATA_LENGTH","primaryKey","UNSIGNED","autoIncrement","AUTO_INCREMENT","_setDecimalPattern","dataDomain","domainValue","zeroPadding","step","DECIMAL","placeholder","integerPlace","toString","convertToFormControl","formControl","FormControl","setValidators","Validators","required","convertToFormGroup","isDirty","DatetimeDirective","localString","dateChange","EventEmitter","localDatetime","d","toLocalDateString","timeUTC","isNaN","getTime","getFullYear","getMonth","slice","getDate","toTimeString","onDateChange","emit","Date","Directive","selector","Input","Output","HostBinding","HostListener","AttributeComponent","fieldCtrl","toISOString","replace","valueChanges","uuid","guid","toUpperCase","ngOnChanges","disable","enable","newDate","UTCDateStr","invalid","_a","errorMessage","getError","isReadonly","onKeyup","attributeName","onSearchHelp","searchHelpComponent","onChange","event","change","i1.SearchHelpComponent","isSmallSize","noErrorMsg","ViewChild","static","AttributeFormComponent","i1.AttributeComponent","i2","AttributeForm2Component","AttributeTableComponent","isDetailModalShown","isErrorModalShown","displayDetailModal","displayErrorModal","openDetailModal","currentFormGroup","at","closeDetailModal","openErrorModal","errorTitle","errorDescription","closeErrorModal","deleteRelationInstance","entityRelation","CARDINALITY","removeAt","EMPTY","i2.AttributeFormComponent","i4","parentFormGroup","JorAngularComponent","encapsulation","ViewEncapsulation","None","JorAngularModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","NgModule","declarations","imports","exports"],"sourceRoot":"webpack:///"}